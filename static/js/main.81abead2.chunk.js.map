{"version":3,"sources":["recipe/RecipeList.jsx","recipe/RecipeToolbar.jsx","recipe/IngredientForm.jsx","admin/EntityUsageChecker.js","recipe/TypeForm.jsx","recipe/RecipeForm.jsx","recipe/RecipeApp.jsx","manual-test/TestRecipeForm.jsx","AppHeader.jsx","loaders/ExcelLoader.js","admin/ImportExport.jsx","reports/Reports.jsx","planner/Planner.jsx","shopper/Tags.jsx","shopper/Shopper.jsx","loaders/LocalStorageLoader.js","App.jsx","serviceWorker.js","index.js"],"names":["className","window","foodnet","recipes","sort","a","b","name","toLowerCase","map","r","createRecipe","key","id","selected","onClick","props","select","React","Component","showModal","disabled","this","delete","state","isNameUnique","takenNames","ingredients","it","edit","filter","indexOf","submit","find","trim","close","push","length","Math","max","sync","labelCol","xs","span","sm","wrapperCol","renderPicker","Item","label","validateStatus","hasFeedback","help","undefined","autoFocus","value","placeholder","onChange","v","setState","target","onPressEnter","validate","type","i","message","error","toString","Number","Option","measurements","recipe","renderConfigMenu","renderMultichooser","renderTable","TextArea","desc","autosize","minRows","maxRows","validateForm","concat","newId","renderModal","renderTModal","trigger","overlay","e","modal","tmodal","Divider","width","visible","footer","onCancel","wrapFormItemOnError","cmp","validation","errorText","columns","title","dataIndex","render","qty","filterOption","inputValue","option","children","inp","String","z","m","data","dataSource","pagination","rowKey","mode","values","ids","idsToKeep","idsToAdd","it2","it3","labelInValue","item","renderToolbar","renderList","forceUpdate","handleDelete","events","maskClosable","keyboard","withRouter","AppHeader","history","handleClick","selectedKeys","path","location","pathname","substring","findSelectionFromRoute","theme","twoToneColor","load","input","wb","XLSX","read","utils","sheet_to_json","Sheets","Recipes","JSON","parse","ingredientsJson","Ingredients","tags","tagsJson","Measurements","Events","filename","allowedFileExtensions","File","FileReader","FileList","Blob","saveModal","loadModal","urlModal","onOk","book_new","book_append_sheet","json_to_sheet","stringify","writeFile","save","getFilename","okButtonProps","file","fileReader","onload","result","readAsArrayBuffer","accept","join","files","validateUrl","url","urlError","startsWith","axios","get","replace","dropboxHack","responseType","then","status","response","statusText","importUrls","console","log","catch","style","endsWith","Sider","Layout","Content","menu","collapsible","renderMenu","renderSelectedMenuItem","renderCookingReferenceReport","renderCookingReferenceReportPage2","renderTopFavoritesReport","defaultSelectedKeys","defaultOpenKeys","height","SubMenu","check","r1checkedKeys","checkable","onSelect","onCheck","expandedKeys","checkedKeys","TreeNode","size","listDays","isInteger","renderCalendar","renderAddListItemModal","Group","valid","eventid","date","moment","add","dayOffset","format","defaultValue","createList","color","createItemsForDay","dot","addForDay","Array","from","day","calMode","onPanelChange","dateCellRender","listData","text","startOf","diff","eid","content","placement","event","stopPropagation","monthCellRender","month","year","tagColors","handleInputConfirm","inputVisible","tag","index","isLongTag","tagElem","closable","onClose","remove","slice","ref","onBlur","focus","background","borderStyle","RangePicker","DatePicker","checkedItems","filteredTags","dates","plannerDates","plannerCheckedItems","customSort","customSortOrder","updateTags","checked","t","getTags","createMenu","onDragEnd","fromIndex","toIndex","newTags","splice","onVisibleChange","dropdownvisible","hideTags","createIngredientList","nodeSelector","handleSelector","forEach","ing","localeCompare","ai","bi","list","isBetween","multiplier","l","newIndex","deleted","sortedTags","typename","found","t2","findHighestTag","reduce","highestTag","ti","hi","aTag","bTag","names","localStorage","setItem","getItem","loader","Boolean","hostname","match","ReactDOM","hashType","exact","component","ImportExport","TestRecipeForm","Reports","Planner","Shopper","RecipeApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81abead2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RecipeList.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (<div className=\"recipe-list\">\r\n            {window.foodnet.recipes.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(r => this.createRecipe(r))}\r\n        </div>)\r\n    }\r\n\r\n    createRecipe(r) {\r\n        return (\r\n            <div key={r.id} className={\"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onClick={() => { window.foodnet.selected = r.id; this.props.select(r.id); }}\r\n            >\r\n                {r.name}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './RecipeToolbar.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"recipe-toolbar\">\r\n                <Button onClick={() => this.props.showModal('add')}>Add</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.showModal('edit')}>Edit</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.delete()}>Delete</Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport {isIngredientUsed} from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.ingredients.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.ingredients.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.ingredients.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n                this.props.close();\r\n            }\r\n            else {\r\n                window.foodnet.ingredients.push({\r\n                    id: window.foodnet.ingredients.length === 0 ? 1 : Math.max(...window.foodnet.ingredients.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n                window.foodnet.sync();\r\n                this.props.close();\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isIngredientUsed(this.state.id)) {\r\n                            message.error(\"This ingredient is still being used. Please remove, replace, or rename the ingredient where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.ingredients = window.foodnet.ingredients.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing ingredient\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.ingredients.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.ingredients.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","export const isIngredientUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.id === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isRecipeUsed = (id) => {\r\n    //FIXME: old events = add are you sure prompt\r\n    if (window.foodnet.events.find(e => e.recipe === id)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}  \r\n\r\nexport const isMeasurementUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.type === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport { isMeasurementUsed } from \"../admin/EntityUsageChecker\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.measurements.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.measurements.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.measurements.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n            }\r\n            else {\r\n                window.foodnet.measurements.push({\r\n                    id: window.foodnet.measurements.length === 0 ? 1 : Math.max(...window.foodnet.measurements.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n            }\r\n            this.props.close();\r\n            window.foodnet.sync();\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isMeasurementUsed(this.state.id)) {\r\n                            message.error(\"This measurement is still being used. Please remove, replace, or rename the measurement where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.measurements = window.foodnet.measurements.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing measurement\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.measurements.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.measurements.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Dropdown, Menu, Select, Modal, Icon, Table } from 'antd';\r\nimport './RecipeForm.css';\r\nimport IngredientForm from './IngredientForm'\r\nimport TypeForm from './TypeForm'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        ingredients: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.edit && !this.state.name) {\r\n            const recipe = window.foodnet.recipes.find(r => r.id === this.props.edit);\r\n            this.setState({ ...recipe });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout} className=\"recipe-form\">\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        validateStatus={this.state.name ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name ? undefined : \"Should not be blank\"}\r\n                    >\r\n                        <Input placeholder=\"Enter a name\" value={this.state.name} onChange={(v) => this.setState({ name: v.target.value })} />\r\n                    </Form.Item>\r\n\r\n                    {this.renderConfigMenu()}\r\n\r\n                    {this.renderMultichooser()}\r\n                    {this.renderTable()}\r\n                    <Form.Item className=\"instructions\" label=\"Instructions\">\r\n                        <Input.TextArea\r\n                            value={this.state.desc}\r\n                            autosize={{ minRows: 2, maxRows: 6 }}\r\n                            onChange={v => this.setState({ desc: v.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validateForm()} onClick={() => {\r\n                        if (this.state.id) {\r\n                            window.foodnet.recipes = window.foodnet.recipes.filter(it => it.id !== this.state.id).concat({ ...this.state });\r\n                        }\r\n                        else {\r\n                            const newId = window.foodnet.recipes.length === 0 ? 1 : Math.max(...window.foodnet.recipes.map(r => r.id)) + 1;\r\n                            window.foodnet.recipes.push({ ...this.state, name: this.state.name.trim(), id: newId });\r\n                        }\r\n                        window.foodnet.sync();\r\n                        this.props.close();\r\n                    }}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {this.renderModal()}\r\n                {this.renderTModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderConfigMenu() {\r\n        return (\r\n            <div className=\"config\">\r\n                Configure Ingredients/Measurements\r\n                <Dropdown trigger={['click']} overlay={\r\n                    <Menu onClick={(e) => {\r\n                        switch (e.key) {\r\n                            case \"1\":\r\n                                this.setState({ modal: 'add' })\r\n                                break;\r\n                            case \"2\":\r\n                                this.setState({ modal: 'edit' })\r\n                                break;\r\n                            case \"3\":\r\n                                this.setState({ tmodal: 'add' })\r\n                                break;\r\n                            case \"4\":\r\n                                this.setState({ tmodal: 'edit' })\r\n                                break;\r\n                            default:\r\n                        }\r\n                    }}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"plus\" />Create New Ingredient\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"edit\" /> Edit Existing Ingredients\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"plus\" /> Create New Measurement\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"edit\" /> Edit Existing Measurements\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }>\r\n                    <Icon type=\"setting\" className=\"setting-icon\" />\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })}>\r\n                <IngredientForm edit={this.state.modal === 'edit' ? true : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTModal() {\r\n        return this.state.tmodal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ tmodal: undefined })}>\r\n                <TypeForm edit={this.state.tmodal === 'edit' ? true : undefined} close={() => this.setState({ tmodal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTable() {\r\n        const wrapFormItemOnError = (cmp, validation, errorText) => {\r\n            return (\r\n                <Form.Item validateStatus={!validation ? \"error\" : \"success\"} help={!validation ? errorText : \"\"}>\r\n                    {cmp}\r\n                </Form.Item>\r\n            )\r\n        };\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                render: id => {\r\n                    const i = window.foodnet.ingredients.find(it => it.id === id);\r\n                    return <div>{i.name}</div>\r\n                }\r\n            },\r\n            {\r\n                title: 'Amount',\r\n                dataIndex: 'id',\r\n                key: 'qty',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Input type=\"number\" value={i.qty} onChange={v => {\r\n                            this.setState({\r\n                                ingredients: this.state.ingredients.filter(it => it.id !== id).concat([{\r\n                                    ...this.state.ingredients.find(it => it.id === id),\r\n                                    qty: v.target.value\r\n                                }])\r\n                            })\r\n                        }} />, i.qty, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'id',\r\n                key: 'type',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Select\r\n                            placeholder=\"Type\"\r\n                            filterOption={(inputValue, option) => {\r\n                                const name = option.props.children;\r\n                                const inp = typeof inputValue === 'string' || inputValue instanceof String ? inputValue : inputValue.toString();\r\n                                return (name || \"\").toLowerCase().indexOf((inp || \"\").toLowerCase());\r\n                            }}\r\n                            value={i.type ? i.type.toString() : undefined}\r\n                            onChange={(v) => {\r\n                                this.setState({\r\n                                    ingredients: this.state.ingredients\r\n                                        .filter(z => z.id !== i.id)\r\n                                        .concat(this.state.ingredients\r\n                                            .filter(z => z.id === i.id)\r\n                                            .map(z => ({ ...z, type: Number(v) })))\r\n                                })\r\n                            }}\r\n                        >\r\n                            {window.foodnet.measurements\r\n                                .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                                .map(m => <Select.Option key={m.id}>{m.name}</Select.Option>)}\r\n                        </Select>, i.type, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n        ];\r\n        const data = this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n        return this.state.ingredients.length > 0 && (\r\n            <Table columns={columns} dataSource={data} pagination={false} rowKey=\"id\" />\r\n        );\r\n    }\r\n\r\n    renderMultichooser() {\r\n        return (\r\n            <Select\r\n                className=\"multi-chooser\"\r\n                mode=\"multiple\"\r\n                placeholder={window.foodnet.ingredients.length === 0 ? \"Use the gear menu to create new ingredients\" : \"Please select\"}\r\n                value={this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => ({ key: it.id }))}\r\n                disabled={window.foodnet.ingredients.length === 0}\r\n                onChange={(values) => {\r\n                    const ids = values.map(it => Number(it.key));\r\n                    const idsToKeep = this.state.ingredients.map(it => it.id).filter(it => ids.indexOf(it) !== -1);\r\n                    const idsToAdd = ids.filter(id => this.state.ingredients.map(it => it.id).indexOf(id) === -1);\r\n                    this.setState({\r\n                        ingredients: this.state.ingredients\r\n                            .filter(it => idsToKeep.indexOf(it.id) !== -1)\r\n                            .concat(\r\n                                idsToAdd.map(it2 => (\r\n                                    { ...window.foodnet.ingredients.find(it3 => it3.id === it2) }\r\n                                ))\r\n                            )\r\n                            .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    })\r\n                }}\r\n                labelInValue={true}\r\n            >\r\n                {window.foodnet.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => (\r\n                    <Select.Option key={it.id} value={it.id}>{it.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n\r\n    renderIngAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'add' })\r\n            }}>Create New Ingredient</Button>\r\n        );\r\n    }\r\n\r\n    renderIngEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'edit' })\r\n            }}>Edit Existing Ingredients</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'add' })\r\n            }}>Create New Measurement</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'edit' })\r\n            }}>Edit Existing Measurements</Button>\r\n        );\r\n    }\r\n\r\n    validateForm() {\r\n        const isValid = this.state.name && this.state.name.trim().length > 0 && this.state.ingredients && this.state.ingredients.length > 0;\r\n        if (!isValid) return true;\r\n        for (var i in (this.state.ingredients || [])) {\r\n            const item = this.state.ingredients[i];\r\n            if (!item.type || !item.qty) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport RecipeToolbar from './RecipeToolbar'\r\nimport { Modal, message } from 'antd'\r\nimport RecipeForm from './RecipeForm'\r\nimport './RecipeApp.css'\r\nimport { isRecipeUsed } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    render() {\r\n        //TODO: split add button, to: add custom recipe, add prepared food, add packaged food\r\n        //TODO: allow another recipe to be an ingredient?\r\n        //TODO: make list look better\r\n        return (\r\n            <>\r\n                {this.renderToolbar()}\r\n                {this.renderList()}\r\n                {this.renderModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderList() {\r\n        return <RecipeList selected={window.foodnet.selected} select={(id) => this.forceUpdate()} />;\r\n    }\r\n\r\n    renderToolbar() {\r\n        return <RecipeToolbar selected={window.foodnet.selected} showModal={(a) => this.setState({ modal: a })} delete={() => this.handleDelete()} />\r\n    }\r\n\r\n    handleDelete() {\r\n        if (isRecipeUsed(window.foodnet.selected)) {\r\n            message.error(\"This recipe is still being used. Please remove or replace the recipe where it is being used before deleting.\")\r\n        }\r\n        else {\r\n            window.foodnet.recipes = window.foodnet.recipes.filter(r => r.id !== window.foodnet.selected);\r\n            window.foodnet.selected = undefined;\r\n            window.foodnet.sync();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })} maskClosable={false} keyboard={true}>\r\n                <RecipeForm edit={this.state.modal === 'edit' ? window.foodnet.selected : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RecipeForm from '../recipe/RecipeForm'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <RecipeForm/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './AppHeader.css';\r\nimport { Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(props => <AppHeader {...props} />);\r\n\r\nclass AppHeader extends React.Component {\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n        const handleClick = (key) => {\r\n            switch (key) {\r\n                case \"recipes\":\r\n                    this.props.history.push(\"\");\r\n                    break;\r\n                case \"planner\":\r\n                    this.props.history.push(\"Planner\");\r\n                    break;\r\n                    case \"shopper\":\r\n                    this.props.history.push(\"Shopper\");\r\n                    break;\r\n                case \"importexport\":\r\n                    this.props.history.push(\"ImportExport\");\r\n                    break;\r\n                case \"reports\":\r\n                    this.props.history.push(\"Reports\");\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        const findSelectionFromRoute = () => {\r\n            const path = this.props.location.pathname.substring(1)\r\n            switch (path) {\r\n                case \"ImportExport\":\r\n                case 'Reports':\r\n                case 'Planner':\r\n                case 'Shopper':\r\n                    return path.toLowerCase()\r\n                default:\r\n                    return \"recipes\"\r\n            }\r\n        }\r\n        return (\r\n            <Menu onClick={(e) => handleClick(e.key)} selectedKeys={[findSelectionFromRoute()]} mode=\"horizontal\">\r\n                <Menu.Item key=\"recipes\">\r\n                    <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    Recipes\r\n                </Menu.Item>\r\n                <Menu.Item key=\"planner\">\r\n                    <Icon type=\"calendar\" theme=\"twoTone\" />\r\n                    Planner\r\n                </Menu.Item>\r\n                <Menu.Item key=\"shopper\">\r\n                    <Icon type=\"shopping\" theme=\"twoTone\" />\r\n                    Shopper\r\n                </Menu.Item>\r\n                <Menu.Item key=\"reports\">\r\n                    <Icon type=\"align-left\" />\r\n                    Reports\r\n                </Menu.Item>\r\n                <Menu.Item key=\"importexport\">\r\n                    <Icon type=\"setting\" />\r\n                    Import/Export\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}","import XLSX from 'xlsx';\r\n\r\nexport const load = (input) => {\r\n    const wb = XLSX.read(input, { type: 'array' });\r\n    const r = XLSX.utils.sheet_to_json(wb.Sheets.Recipes);\r\n    window.foodnet.recipes = r.map(it => ({ ...it, ingredients: JSON.parse(it.ingredientsJson) }));\r\n    const i = XLSX.utils.sheet_to_json(wb.Sheets.Ingredients);\r\n    window.foodnet.ingredients = i.map(it => ({ ...it, tags: JSON.parse(it.tagsJson) }));\r\n    window.foodnet.measurements = XLSX.utils.sheet_to_json(wb.Sheets.Measurements);\r\n    window.foodnet.events = XLSX.utils.sheet_to_json(wb.Sheets.Events);\r\n    window.foodnet.sync();\r\n}\r\n\r\nexport const save = (filename) => {\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.recipes.map(it => ({ ...it, ingredientsJson: JSON.stringify(it.ingredients) }))), \"Recipes\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.ingredients.map(it => ({ ...it, tagsJson: JSON.stringify(it.tags || []) }))), \"Ingredients\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.measurements), \"Measurements\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.events), \"Events\");\r\n    XLSX.writeFile(wb, filename || 'foodnet.xlsx');\r\n}","import React from 'react';\r\nimport { save, load } from '../loaders/ExcelLoader';\r\nimport { Modal, Button, Form, Input, AutoComplete } from 'antd';\r\nimport './ImportExport.css';\r\nimport axios from 'axios'\r\nimport XLSX from 'xlsx'\r\nimport stream from 'stream'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        filename: 'backup.xlsx',\r\n        allowedFileExtensions: [\r\n            'xlsx', 'xlsm', 'xlsb', 'xml', 'xls', 'xlw', 'csv', 'txt', 'dif', 'sylk', 'slk', 'prn', 'ods', 'fods', 'dbf', 'eth'\r\n        ].map(it => '.' + it),\r\n    }\r\n    render() {\r\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\r\n            return (\r\n                <div>\r\n                    Error: your browser does not support the File API specification. It is required for long term storage.\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"import-export\">\r\n                <Button onClick={() => this.setState({ saveModal: true })}>\r\n                    Export To Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ loadModal: true })}>\r\n                    Import From Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ urlModal: true })}>\r\n                    Import From Url\r\n                </Button>\r\n                {this.state.saveModal && (\r\n                    <Modal className=\"save-modal\" visible={true} onCancel={() => this.setState({ saveModal: false })} onOk={() => { save(this.getFilename()); this.setState({ saveModal: false }) }}>\r\n                        <Form.Item label=\"File Name\">\r\n                            <Input value={this.state.filename} onChange={v => this.setState({ filename: v.target.value })} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.loadModal && (\r\n                    <Modal className=\"load-modal\" visible={true} onCancel={() => this.setState({ loadModal: false })} okButtonProps={{ disabled: !this.state.file }} onOk={() => {\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onload = function (e) {\r\n                            load(e.target.result);\r\n                        };\r\n                        fileReader.readAsArrayBuffer(this.state.file);\r\n                        this.setState({ loadModal: false })\r\n                    }}>\r\n                        <Form.Item label=\"\">\r\n                            <Input type=\"file\" id=\"file\" name=\"file\" accept={this.state.allowedFileExtensions.join(',')} onChange={e => {\r\n                                this.setState({ file: e.target.files[0] })\r\n                            }} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.urlModal && this.urlModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    urlModal() {\r\n        const dropboxHack = (url) => {\r\n            if (url && url.indexOf(\"www.dropbox.com\")) {\r\n                return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\r\n            }\r\n        }\r\n        const validateUrl = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return false;\r\n            }\r\n            if (this.state.urlError) {\r\n                return false;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return false;\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        const validateMsg = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return \"Cannot be blank\";\r\n            }\r\n            if (this.state.urlError) {\r\n                return undefined;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return \"URL must begin with http or https\";\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return \"URL is not in the correct format (i.e. http://example.com)\";\r\n            }\r\n        }\r\n        const submit = () => {\r\n            axios.get(dropboxHack(this.state.url), { responseType: 'arraybuffer' }).then((r) => {\r\n                if (r.status !== 200) {\r\n                    this.setState({ urlError: `${r.status ? r.response.status + \" - \" : \"\"}${r.statusText ? r.response.statusText + \": \" : \"\"}${r.data || \"\"}` })\r\n                }\r\n                else {\r\n                    try {\r\n                        load(r.data)\r\n                        if (window.foodnet.importUrls.indexOf(this.state.url) === -1) {\r\n                            window.foodnet.importUrls.push(this.state.url);\r\n                            window.foodnet.sync();\r\n                        }\r\n                        this.setState({ urlModal: undefined, url: undefined })\r\n                    }\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ urlError: \"Could not parse file: \" + error })\r\n                    }\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e)\r\n                if (!e.response) {\r\n                    e.response = {\r\n                        statusText: \"error: CORS blocking\"\r\n                    }\r\n                }\r\n                console.log(`${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText + \": \" : \"\"}${e.response.data || \"\"}`)\r\n                this.setState({ urlError: `${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText : \"\"}` })\r\n            })\r\n        }\r\n        return (\r\n            <Modal className=\"url-modal\" visible={true} onCancel={() => this.setState({ urlModal: false })} okButtonProps={{ disabled: !validateUrl() }} onOk={() => submit()}>\r\n                <Form.Item label=\"Remote URL\" validateStatus={validateUrl() ? 'success' : 'error'} help={this.state.urlError || validateMsg()}>\r\n                    <AutoComplete style={{ width: 200 }} value={this.state.url} onChange={e => {\r\n                        this.setState({ url: e, urlError: undefined })\r\n                    }} >\r\n                        {window.foodnet.importUrls.map(it => (\r\n                            <AutoComplete.Option key={it}>{it}</AutoComplete.Option>\r\n                        ))}\r\n                    </AutoComplete>\r\n                </Form.Item>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    getFilename() {\r\n        const { filename } = this.state;\r\n        for (let e in this.state.allowedFileExtensions) {\r\n            if (filename.endsWith(this.state.allowedFileExtensions[e])) {\r\n                return filename;\r\n            }\r\n        }\r\n        return filename + \".xlsx\";\r\n    }\r\n}","import React from 'react';\r\nimport './Reports.css';\r\nimport { Menu, Icon, Layout, Tree, Button, Card } from 'antd';\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        menu: 'r1'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"reports-layout\">\r\n                <Sider collapsible={true}>\r\n                    {this.renderMenu()}\r\n                </Sider>\r\n                <Content>\r\n                    {this.renderSelectedMenuItem()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    renderSelectedMenuItem() {\r\n        switch (this.state.menu) {\r\n            case \"r1\": return this.renderCookingReferenceReport()\r\n            case \"r1p2\": return this.renderCookingReferenceReportPage2()\r\n            case \"r2\": return this.renderTopFavoritesReport()\r\n            default: return undefined\r\n        }\r\n    }\r\n\r\n    renderMenu() {\r\n        return (\r\n            <Menu\r\n                onClick={(e) => this.setState({ menu: e.key })}\r\n                defaultSelectedKeys={['r1']}\r\n                defaultOpenKeys={['r']}\r\n                mode=\"inline\" style={{ height: '100%' }}\r\n            >\r\n                <Menu.SubMenu\r\n                    key=\"r\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                            <span>Recipe Reports</span>\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"r1\">Cooking Reference</Menu.Item>\r\n                    <Menu.Item key=\"r2\">Top Favorites</Menu.Item>\r\n                </Menu.SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderCookingReferenceReport() {\r\n        const check = (e) => {\r\n            if (e && e.length === 1 && e[0] === '0-0') {\r\n                this.setState({ r1checkedKeys: window.foodnet.recipes.map(it => it.id.toString()) });\r\n            }\r\n            else {\r\n                this.setState({ r1checkedKeys: e })\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"recipe-select\">\r\n                <Tree\r\n                    checkable\r\n                    onSelect={(e) => check(e)}\r\n                    onCheck={(e) => check(e)}\r\n                    expandedKeys={['0-0']}\r\n                    checkedKeys={this.state.r1checkedKeys}\r\n                >\r\n                    <Tree.TreeNode title=\"All Recipes\" key=\"0-0\">\r\n                        {window.foodnet.recipes.map(r => (\r\n                            <Tree.TreeNode title={r.name} key={r.id} />\r\n                        ))}\r\n                    </Tree.TreeNode>\r\n                </Tree>\r\n                <Button disabled={!this.state.r1checkedKeys || this.state.r1checkedKeys.length < 1} onClick={() => { this.setState({ menu: 'r1p2' }) }}>Generate Report</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCookingReferenceReportPage2() {\r\n        return (\r\n            <div className=\"recipe-report\">\r\n                {window.foodnet.recipes.filter(it => this.state.r1checkedKeys.indexOf(it.id.toString()) !== -1).map(r => (\r\n                    <Card key={r.id} size=\"small\" >\r\n                        <div className=\"recipe\" key={r.id}>\r\n                            <div className=\"recipe-name\">Recipe Name:</div>\r\n                            <div>{r.name}</div>\r\n                            <div className=\"desc-header\">Instructions:</div>\r\n                            <div className=\"desc-body\">{r.desc || \"None\"}</div>\r\n                            <div className=\"ing\">Ingredients:</div>\r\n                            <div className=\"ingredient-list\">\r\n                                {r.ingredients.map(i => (\r\n                                    <div key={i.id}>\r\n                                        <div>\r\n                                            {window.foodnet.ingredients.find(it => it.id === i.id).name}, {i.qty} {window.foodnet.measurements.find(it => it.id === i.type).name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTopFavoritesReport() {\r\n        return <div>Coming Soon</div>\r\n    }\r\n}","import React from 'react';\r\nimport './Planner.css';\r\nimport { Tooltip, Carousel, Card, Calendar, Badge, Radio, Timeline, Form, Button, Input, Dropdown, Menu, AutoComplete, Select, Modal, DatePicker, TimePicker, Cascader, InputNumber, Icon, Table, } from 'antd';\r\nimport moment from 'moment';\r\nimport { validate } from '@babel/types';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        mode: \"list\",\r\n        listDays: Number.isInteger(window.foodnet.listDays) ? window.foodnet.listDays : 7,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"planner\">\r\n                    {this.renderToolbar()}\r\n                    {this.state.mode === \"calendar\" && this.renderCalendar()}\r\n                    {this.state.mode === \"list\" && this.renderList()}\r\n                </div>\r\n                {this.renderAddListItemModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderToolbar() {\r\n        return (\r\n            <div className=\"planner-toolbar\">\r\n                <Radio.Group onChange={(e) => this.setState({ mode: e.target.value })} value={this.state.mode}>\r\n                    <Radio value={\"list\"}>List View</Radio>\r\n                    <Radio value={\"calendar\"}>Calendar View</Radio>\r\n                </Radio.Group>\r\n                {this.state.mode === \"list\" && (\r\n                    <Input type=\"number\" value={this.state.listDays} onChange={e => {\r\n                        if (e.target.value.length === 0) {\r\n                            this.setState({ listDays: undefined })\r\n                        }\r\n                        else {\r\n                            let v = Number(e.target.value)\r\n                            if (v < 0) v = 0;\r\n                            this.setState({ listDays: v })\r\n                            window.foodnet.listDays = v\r\n                            window.foodnet.sync()\r\n                        }\r\n                    }} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAddListItemModal() {\r\n        const valid = () => {\r\n            return this.state.recipe;\r\n        }\r\n        const submit = () => {\r\n            if (this.state.eventid) {\r\n                window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid).concat({\r\n                    id: this.state.eventid,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            else {\r\n                window.foodnet.events.push({\r\n                    id: window.foodnet.events.length === 0 ? 1 : Math.max(...window.foodnet.events.map(e => e.id)) + 1,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            window.foodnet.sync();\r\n            this.setState({\r\n                eventid: undefined,\r\n                recipe: undefined,\r\n                qty: undefined,\r\n                dayOffset: undefined,\r\n                modal: undefined,\r\n            })\r\n        }\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (this.state.modal === \"add-list-item\" || this.state.modal === \"edit-list-item\") && (\r\n            <Modal\r\n                className=\"list-item-modal\"\r\n                visible={true}\r\n                onCancel={() => this.setState({ modal: undefined })}\r\n                footer={[\r\n                    this.state.modal === \"edit-list-item\" && (\r\n                        <Button key=\"delete\" type=\"danger\" onClick={() => {\r\n                            window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid);\r\n                            window.foodnet.sync();\r\n                            this.setState({\r\n                                eventid: undefined,\r\n                                recipe: undefined,\r\n                                qty: undefined,\r\n                                dayOffset: undefined,\r\n                                modal: undefined,\r\n                            })\r\n                        }}>Delete Event</Button>\r\n                    ),\r\n                    <Button key=\"back\" onClick={() => this.setState({ modal: undefined })}>Cancel</Button>,\r\n                    <Button key=\"submit\" type=\"primary\" disabled={!valid()} onClick={() => submit()}>OK</Button>,\r\n                ]}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                        <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                            {window.foodnet.recipes.map(r => (\r\n                                <Select.Option key={r.id} value={r.id}>{r.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\">\r\n                        <Input\r\n                            autoFocus\r\n                            type=\"number\"\r\n                            defaultValue={1}\r\n                            value={this.state.qty}\r\n                            onChange={e => this.setState({ qty: e.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (valid()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderList() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const createItemsForDay = (dayOffset) => {\r\n            return window.foodnet.events\r\n                .filter(e => {\r\n                    return moment().add(dayOffset, \"days\").format(now_s_format) === moment(e.date).format(now_s_format)\r\n                })\r\n                .sort((a, b) => a.id < b.id ? -1 : 1)\r\n                .map(e => (\r\n                    <Timeline.Item key={e.id} color=\"green\" onClick={() => {\r\n                        this.setState({\r\n                            eventid: e.id,\r\n                            modal: \"edit-list-item\",\r\n                            dayOffset: dayOffset,\r\n                            recipe: e.recipe,\r\n                            qty: e.qty,\r\n                        })\r\n                    }} >{e.qty} x {window.foodnet.recipes.find(r => r.id === e.recipe).name}</Timeline.Item>\r\n                ))\r\n        }\r\n        const addForDay = (dayOffset) => {\r\n            return <Timeline.Item key=\"add\" onClick={() => {\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }} dot={<Icon type=\"plus-circle\" theme=\"twoTone\" twoToneColor=\"red\" />}>Add</Timeline.Item>;\r\n        }\r\n        const createList = (dayOffset) => {\r\n            return (\r\n                <Timeline key={dayOffset}>\r\n                    <Timeline.Item key=\"top\" color=\"blue\"><b><u>{moment().add(dayOffset, 'days').format(\"dddd (MMM D)\")}</u></b></Timeline.Item>\r\n                    {createItemsForDay(dayOffset)}\r\n                    {addForDay(dayOffset)}\r\n                </Timeline>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"planner-list\">\r\n                {Array.from(Array(this.state.listDays)).map((z, day) => createList(day))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCalendar() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const dateCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).format(now_s_format) === m.format(now_s_format)\r\n            }).map(e => {\r\n                const text = `${e.qty} x ${window.foodnet.recipes.find(r => r.id === e.recipe).name}`;\r\n                const dayOffset = moment(e.date).startOf('day').diff(moment().startOf('day'), 'days')\r\n                return { \r\n                    eid: e.id, \r\n                    dayOffset: dayOffset, \r\n                    type: dayOffset < 0 ? 'error' : dayOffset === 0 ? 'success' : 'warning', \r\n                    content: <Tooltip placement=\"top\" title={text}>{text}</Tooltip> \r\n                };\r\n            });\r\n            return (\r\n                <ul className=\"events\">\r\n                    {listData.map(item => (\r\n                        <li key={item.eid}>\r\n                            <Badge onClick={(event) => {\r\n                                const e = window.foodnet.events.find(it => it.id === item.eid);\r\n                                const dayOffset = item.dayOffset\r\n                                this.setState({\r\n                                    eventid: e.id,\r\n                                    modal: \"edit-list-item\",\r\n                                    dayOffset: dayOffset,\r\n                                    recipe: e.recipe,\r\n                                    qty: e.qty,\r\n                                })\r\n                                event.stopPropagation();\r\n                            }} status={item.type} text={item.content} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        const monthCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).month() === m.month() && moment(e.date).year() === m.year()\r\n            })\r\n            return (\r\n                listData.length + \" recipes\"\r\n            );\r\n          }\r\n\r\n        return (\r\n            <Calendar mode={this.state.calMode || \"month\"} onPanelChange={(value, mode) => this.setState({calMode: mode})} dateCellRender={dateCellRender} monthCellRender={monthCellRender} onSelect={(m) => {\r\n                if(this.state.calMode === 'year') {\r\n                    this.setState({calMode: 'month'})\r\n                    return;\r\n                };\r\n                const dayOffset = m.startOf('day').diff(moment().startOf('day'), 'days')\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }}/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Tag, Input, Tooltip, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        tagColors: [\"blue\", \"green\", \"red\", \"orange\", \"cyan\", \"purple\"],\r\n    }\r\n\r\n    render() {\r\n        const handleInputConfirm = () => {\r\n            const { inputValue } = this.state;\r\n            this.setState({\r\n                inputVisible: false,\r\n                inputValue: '',\r\n            });\r\n            if (inputValue && inputValue.trim().length > 0)\r\n                this.props.add(inputValue.trim());\r\n        }\r\n        return (\r\n            <div className={this.props.className || \"\"}>\r\n                {this.props.tags.map((tag, index) => {\r\n                    const isLongTag = tag.length > 20;\r\n                    const tagElem = (\r\n                        <Tag key={tag} color={this.state.tagColors[index % this.state.tagColors.length]} closable={true} onClose={() => this.props.remove(tag)}>\r\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? (\r\n                        <Tooltip title={tag} key={tag}>\r\n                            {tagElem}\r\n                        </Tooltip>\r\n                    ) : (tagElem);\r\n                })}\r\n                {this.state.inputVisible && (\r\n                    <Input\r\n                        ref={input => (this.input = input)}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        style={{ width: 78 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={(e) => this.setState({ inputValue: e.target.value })}\r\n                        onBlur={handleInputConfirm}\r\n                        onPressEnter={handleInputConfirm}\r\n                    />\r\n                )}\r\n                {!this.state.inputVisible && (\r\n                    <Tag onClick={() => this.setState({ inputVisible: true }, () => this.input.focus())} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                        <Icon type=\"plus\" /> New Tag\r\n                    </Tag>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Shopper.css'\r\nimport { DatePicker, Checkbox, Dropdown, Modal, Button, Menu, Tag, Switch, Icon } from 'antd'\r\nimport moment from 'moment'\r\nimport Tags from './Tags'\r\nimport ReactDragListView from 'react-drag-listview'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        checkedItems: [],\r\n        filteredTags: [],\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            dates: window.foodnet.plannerDates && window.foodnet.plannerDates.length === 2 ? window.foodnet.plannerDates.map(it => moment(it)) : undefined,\r\n            checkedItems: window.foodnet.plannerCheckedItems || [],\r\n            customSort: window.foodnet.customSort,\r\n            customSortOrder: window.foodnet.customSortOrder,\r\n        })\r\n    }\r\n    render() {\r\n        const updateTags = (tag, checked) => {\r\n            let tags = this.state.filteredTags;\r\n            if (checked) {\r\n                tags = tags.concat(tag)\r\n            }\r\n            else {\r\n                tags = tags.filter(t => t !== tag)\r\n            }\r\n            this.setState({ filteredTags: tags })\r\n        }\r\n\r\n        const tags = this.getTags()\r\n\r\n        const createMenu = () => {\r\n            return [(\r\n                <Menu.Item key={\"_NO_TAG\"}><Checkbox onChange={e => updateTags(\"_NO_TAG\", e.target.checked)}>Untagged</Checkbox></Menu.Item>\r\n            )].concat(tags.map(tag => (\r\n                <Menu.Item key={tag}><Checkbox onChange={e => updateTags(tag, e.target.checked)}>{tag}</Checkbox></Menu.Item>\r\n            )))\r\n        }\r\n\r\n        const onDragEnd = (fromIndex, toIndex) => {\r\n            const newTags = [...tags]\r\n            const item = newTags.splice(fromIndex, 1)[0];\r\n            newTags.splice(toIndex, 0, item);\r\n            this.setState({ customSortOrder: newTags });\r\n        }\r\n\r\n        return (\r\n            <div className=\"shopper\">\r\n                <div className=\"buttons\">\r\n                    <Button disabled={!tags || tags.length === 0} onClick={() => this.setState({ modal: 'sort' })}>Sort by Tags</Button>\r\n                    <Dropdown\r\n                        disabled={createMenu().length === 1}\r\n                        onVisibleChange={(v) => this.setState({ dropdownvisible: v })}\r\n                        visible={this.state.dropdownvisible}\r\n                        trigger={['click']}\r\n                        overlay={(\r\n                            <Menu>\r\n                                {createMenu()}\r\n                            </Menu>\r\n                        )}>\r\n                        <Button>Filter by Tags</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={() => this.setState({ hideTags: !this.state.hideTags })}>{this.state.hideTags ? 'Show Tags' : 'Hide Tags'}</Button>\r\n                </div>\r\n                <RangePicker value={this.state.dates} onChange={(m) => {\r\n                    this.setState({ dates: m, checkedItems: [] })\r\n                    window.foodnet.plannerDates = m.map(it => it.format());\r\n                    window.foodnet.plannerCheckedItems = [];\r\n                    window.foodnet.sync();\r\n                }} />\r\n                {this.state.dates && (\r\n                    this.createIngredientList()\r\n                )}\r\n\r\n                {this.state.modal === 'sort' && (\r\n                    <Modal className=\"sort-popup\" visible={true} onCancel={() => {\r\n                        this.setState({ modal: undefined, customSort: window.foodnet.customSort, customSortOrder: window.foodnet.customSortOrder })\r\n                    }} onOk={() => {\r\n                        window.foodnet.customSort = this.state.customSort\r\n                        window.foodnet.customSortOrder = this.state.customSortOrder\r\n                        window.foodnet.sync()\r\n                        this.setState({ modal: undefined })\r\n                    }}>\r\n                        <div><Switch checked={this.state.customSort} onChange={(checked) => {\r\n                            this.setState({ customSort: checked, customSortOrder: tags })\r\n                        }} /> Enable Tag Sorting</div>\r\n                        <ReactDragListView\r\n                            onDragEnd={onDragEnd}\r\n                            nodeSelector=\"li\"\r\n                            handleSelector=\"li\"\r\n                        >\r\n                            <div className=\"drag-list\">\r\n                                {tags.map((item, index) => (\r\n                                    <>\r\n                                        <Tag>{item}</Tag> \r\n                                        <Icon className=\"up\" type=\"up\" onClick={() => onDragEnd(index, index-1)}/> \r\n                                        <Icon className=\"down\" type=\"down\" onClick={() => onDragEnd(index, index+1)}/>\r\n                                    </>\r\n                                ))}\r\n                            </div>\r\n                        </ReactDragListView>\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTags() {\r\n        let tags = []\r\n        window.foodnet.ingredients.forEach(ing => {\r\n            (ing.tags || []).forEach(tag => {\r\n                if (tags.indexOf(tag) === -1) tags = tags.concat(tag);;\r\n            })\r\n        });\r\n        (this.state.filteredTags || []).forEach(t => {\r\n            if (tags.indexOf(t) === -1) tags = tags.concat(t);;\r\n        });\r\n        tags = tags.sort((a, b) => a.localeCompare(b))\r\n        if (this.state.customSort && this.state.customSortOrder && this.state.customSortOrder.length > 0) {\r\n            const { customSortOrder } = this.state;\r\n            tags = tags.sort((a, b) => {\r\n                const ai = customSortOrder.indexOf(a)\r\n                const bi = customSortOrder.indexOf(b)\r\n                if (ai !== -1 || bi !== -1) {\r\n                    if (ai !== -1 && bi !== -1) {\r\n                        return ai < bi ? -1 : 1;\r\n                    }\r\n                    return ai === -1 ? -1 : 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    createIngredientList() {\r\n        const { foodnet } = window;\r\n        let list = [];\r\n        foodnet.events.forEach(event => {\r\n            if (moment(event.date).isBetween(...this.state.dates, 'days', '[]')) {\r\n                const multiplier = Number(event.qty) || 0;\r\n                const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n                recipe.ingredients.forEach(ing => {\r\n                    list.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier });\r\n                })\r\n            }\r\n        })\r\n\r\n        const mergeDuplicates = (item, index, l) => {\r\n            if (index > 0 && l[index - 1].id === item.id && l[index - 1].type === item.type) {\r\n                let newIndex = index - 1;\r\n                while (l[newIndex].deleted) newIndex--;\r\n                l[newIndex].qty += item.qty;\r\n                item.deleted = true;\r\n            }\r\n            return item;\r\n        };\r\n        list = list.sort((a, b) => {\r\n            if (a.id !== b.id) {\r\n                return a.id < b.id ? -1 : 1;\r\n            }\r\n            if (a.type !== b.type) {\r\n                return a.type < b.type ? -1 : 1;\r\n            }\r\n            return 0;\r\n        }).map(mergeDuplicates).filter(item => !item.deleted);\r\n\r\n        const sortedTags = this.getTags()\r\n\r\n        return (\r\n            <ul className=\"ingredient-list\">\r\n                {list\r\n                    .map(item => ({\r\n                        ...item,\r\n                        name: foodnet.ingredients.find(i => i.id === item.id).name,\r\n                        typename: foodnet.measurements.find(m => m.id === item.type).name,\r\n                        checked: this.state.checkedItems.indexOf(item.id) !== -1,\r\n                        tags: foodnet.ingredients.find(i => i.id === item.id).tags || []\r\n                    }))\r\n                    .sort((a, b) => a.name.localeCompare(b.name) || a.typename.localeCompare(b.typename))\r\n                    .filter(item => {\r\n                        if (this.state.filteredTags.length === 0) return true;\r\n                        let tags = item.tags\r\n                        if (tags.length === 0) tags = ['_NO_TAG']\r\n                        let found = false;\r\n                        tags.forEach(t => {\r\n                            this.state.filteredTags.forEach(t2 => {\r\n                                if (t === t2) found = true;\r\n                            })\r\n                        })\r\n                        return found;\r\n                    })\r\n                    .sort((a, b) => {\r\n                        if (!this.state.customSort) {\r\n                            return 0;\r\n                        }\r\n                        if (!a.tags || !b.tags || a.tags.length === 0 || b.tags.length === 0) {\r\n                            if ((!a.tags || a.tags.length === 0) && (!b.tags || b.tags.length === 0)) {\r\n                                return 0;\r\n                            }\r\n                            return !a.tags || a.tags.length === 0 ? 1 : -1;\r\n                        }\r\n                        const findHighestTag = (tags) => tags.reduce((tag, highestTag) => {\r\n                            if (!highestTag) return tag;\r\n                            const ti = sortedTags.indexOf(tag)\r\n                            const hi = sortedTags.indexOf(highestTag)\r\n                            if (ti === -1 || hi === -1) {\r\n                                if (ti === -1 && hi === -1) return highestTag;\r\n                                return ti === -1 ? highestTag : tag;\r\n                            }\r\n                            return ti < hi ? tag : highestTag;\r\n                        })\r\n                        const aTag = findHighestTag(a.tags)\r\n                        const bTag = findHighestTag(b.tags)\r\n                        const ai = sortedTags.indexOf(aTag)\r\n                        const bi = sortedTags.indexOf(bTag)\r\n                        if (ai !== -1 || bi !== -1) {\r\n                            if (ai !== -1 && bi !== -1) {\r\n                                return ai < bi ? -1 : 1;\r\n                            }\r\n                            return ai === -1 ? -1 : 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .map((item, index) => (\r\n                        <li key={index} className=\"shopper-list-items\">\r\n                            <Checkbox className=\"shopper-list-item\" key={index} checked={item.checked} onChange={e => {\r\n                                foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.filter(it => it !== item.id)\r\n                                if (e.target.checked) {\r\n                                    foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.concat(item.id);\r\n                                }\r\n                                this.setState({ checkedItems: foodnet.plannerCheckedItems });\r\n                                foodnet.sync();\r\n                            }}>\r\n                                {`${item.name}: ${item.qty} ${item.typename}`}\r\n                            </Checkbox>\r\n                            {!this.state.hideTags && <Tags className=\"shopper-tags\" tags={item.tags} add={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].concat(tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} remove={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].filter(it => it !== tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} />}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        );\r\n    }\r\n}","export default function() {\r\n    const names = [\"ingredients\", \"measurements\", \"recipes\", \"listDays\", \"events\", \"importUrls\", \"plannerDates\", \"plannerCheckedItems\", \"customSort\", \"customSortOrder\"];\r\n    window.foodnet = {\r\n        sync: () => {\r\n            names.forEach(it => localStorage.setItem(it, JSON.stringify(window.foodnet[it])));\r\n        }\r\n    };\r\n    names.forEach(it => window.foodnet[it] = JSON.parse(localStorage.getItem(it)));\r\n    names.forEach(it => {\r\n        if (window.foodnet[it] === undefined || window.foodnet[it] === null) {\r\n            window.foodnet[it] = [];\r\n        }\r\n    })\r\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport RecipeApp from './recipe/RecipeApp'\nimport TestRecipeForm from './manual-test/TestRecipeForm'\nimport loader from './loaders/LocalStorageLoader'\nimport AppHeader from './AppHeader'\nimport './App.css';\nimport ImportExport from './admin/ImportExport'\nimport Reports from './reports/Reports';\nimport Planner from './planner/Planner'\nimport Shopper from './shopper/Shopper'\n\nloader();\n\nexport default function () {\n  return (\n    <HashRouter hashType=\"noslash\">\n      <AppHeader />\n      <Route exact path=\"/ImportExport\" component={ImportExport} />\n      <Route exact path=\"/TestRecipeForm\" component={TestRecipeForm} />\n      <Route exact path=\"/Reports\" component={Reports} />\n      <Route exact path=\"/Planner\" component={Planner} />\n      <Route exact path=\"/Shopper\" component={Shopper} />\n      <Route exact path=\"/\" component={RecipeApp} />\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}