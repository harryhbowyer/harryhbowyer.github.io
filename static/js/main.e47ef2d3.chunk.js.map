{"version":3,"sources":["recipe/RecipeList.jsx","admin/EntityUsageChecker.js","recipe/RecipeToolbar.jsx","recipe/IngredientForm.jsx","recipe/TypeForm.jsx","recipe/RecipeForm.jsx","recipe/RecipeApp.jsx","manual-test/TestRecipeForm.jsx","AppHeader.jsx","loaders/ExcelLoader.js","admin/ImportExport.jsx","reports/Reports.jsx","planner/Planner.jsx","shopper/Tags.jsx","hoc/ReactDragListView.jsx","shopper/CustomInput.jsx","shopper/Shopper.jsx","inventory/Inventory.jsx","about/About.jsx","loaders/LocalStorageLoader.js","App.jsx","serviceWorker.js","index.js"],"names":["state","dataIndex","sortedInfo","this","handleSearch","selectedKeys","confirm","setState","searchText","cols","title","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","width","marginBottom","display","type","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","sorter","a","b","icount","sortOrder","columnKey","order","columns","dataSource","window","foodnet","recipes","sort","name","map","r","ingredients","length","pagination","rowKey","rowClassName","selected","id","onRow","props","selectedRowKeys","filters","React","Component","isRecipeUsed","events","find","recipe","isRecipeUsedOnlyInOldEvents","filter","moment","date","isAfter","startOf","needsConfirm","className","showModal","disabled","onConfirm","delete","okText","cancelText","placement","isNameUnique","takenNames","it","edit","indexOf","submit","trim","close","push","Math","max","sync","labelCol","xs","span","sm","wrapperCol","renderPicker","Item","label","validateStatus","hasFeedback","help","autoFocus","v","validate","key","i","message","error","Number","Option","measurements","renderConfigMenu","renderMultichooser","renderTable","TextArea","desc","autoSize","minRows","maxRows","validateForm","concat","newId","renderModal","renderTModal","trigger","overlay","modal","tmodal","Divider","footer","onCancel","wrapFormItemOnError","cmp","validation","errorText","render","qty","filterOption","inputValue","option","children","inp","String","z","m","data","mode","values","ids","idsToKeep","idsToAdd","it2","it3","labelInValue","item","renderToolbar","renderList","forceUpdate","handleDelete","maskClosable","keyboard","withRouter","recipeIcon","theme","twoToneColor","plannerIcon","AppHeader","history","handleClick","path","location","pathname","substring","findSelectionFromRoute","load","input","wb","XLSX","read","utils","sheet_to_json","Sheets","Recipes","JSON","parse","ingredientsJson","Ingredients","tags","tagsJson","Measurements","Events","filename","allowedFileExtensions","File","FileReader","FileList","Blob","saveModal","loadModal","urlModal","onOk","book_new","recreateRecipeIngredients","book_append_sheet","json_to_sheet","stringify","writeFile","save","getFilename","okButtonProps","file","fileReader","onload","result","readAsArrayBuffer","accept","join","files","validateUrl","url","urlError","startsWith","axios","get","replace","dropboxHack","responseType","then","status","response","statusText","importUrls","console","log","catch","endsWith","Sider","Layout","Content","menu","collapsible","renderMenu","renderSelectedMenuItem","renderCookingReferenceReport","renderCookingReferenceReportPage2","renderTopFavoritesReport","defaultSelectedKeys","defaultOpenKeys","height","SubMenu","check","r1checkedKeys","checkable","onSelect","onCheck","expandedKeys","checkedKeys","TreeNode","listDays","isInteger","renderCalendar","renderAddListItemModal","Group","valid","eventid","add","dayOffset","format","recipeHasInventory","defaultValue","createList","createItemsForDay","dot","addForDay","Array","from","day","recipeId","eventMultipler","dayOffsetFromToday","inv","forEach","ing","now","beforeOffset","endOf","isBetween","ings","calMode","onPanelChange","dateCellRender","listData","text","diff","eid","content","event","stopPropagation","monthCellRender","month","year","tagColors","handleInputConfirm","inputVisible","tag","index","isLongTag","tagElem","closable","onClose","remove","slice","onBlur","focus","background","borderStyle","Element","prototype","matches","proto","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","closest","el","selector","rootNode","element","isRoot","document","body","nodeType","parentNode","getDomIndex","ignoreSelectors","DIRECTIONS","TOP","BOTTOM","ReactDragListView","onMouseDown","bind","onDragStart","onDragEnter","onDragEnd","autoScroll","fromIndex","toIndex","scrollElement","scrollTimerId","direction","dragLine","removeChild","cacheDragTarget","handle","getHandleNode","handleSelector","nodeSelector","getDragNode","setAttribute","ondragstart","ondragend","eventData","dataTransfer","setData","effectAllowed","ondragenter","ondragover","ev","preventDefault","ignoreSelector","overflow","getComputedStyle","offsetWidth","scrollWidth","offsetHeight","scrollHeight","getScrollElement","enableScroll","resolveAutoScroll","stopAutoScroll","fixDragLine","removeAttribute","hideDragLine","dragList","createElement","appendChild","lineClassName","getBoundingClientRect","top","targetHeight","pageY","compatibleHeight","setInterval","clearInterval","scrollTop","scrollSpeed","getDragLine","left","lineTop","role","onTouchStart","c","defaultProps","onInputChange","handleChange","RangePicker","DatePicker","checkedItems","filteredTags","MULTIPLIER","dates","plannerDates","plannerCheckedItems","customSort","customSortOrder","updateTags","checked","t","getTags","createMenu","newTags","splice","newValue","oldValue","onVisibleChange","dropdownvisible","hideTags","hideZero","renderIngredientList","list","createIngredientList","mname","notification","description","duration","info","Fragment","min","localeCompare","ai","bi","multiplier","l","newIndex","deleted","deducted","sortedTags","typename","found","t2","findHighestTag","reduce","highestTag","ti","hi","aTag","bTag","plannedDate","formItemLayout","getEvents","elist","ilist","aDate","bDate","isBefore","cancel","createEventCard","createDropdown","onDropdownChange","readOnlyClickHandler","eventUsedIngredients","findIngredientsUsedInEvents","used","uing","u","isEditing","renderModals","createBlurb","contact","donate","href","names","localStorage","setItem","getItem","loader","Boolean","hostname","match","ReactDOM","hashType","exact","component","ImportExport","TestRecipeForm","Reports","Planner","Shopper","Inventory","About","RecipeApp","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e47ef2d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RecipeList.css';\r\nimport { Table, Input, Button, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        const sortedInfo = this.state.sortedInfo || {};\r\n        const handleSearch = (selectedKeys, confirm) => {\r\n            confirm();\r\n            this.setState({ searchText: selectedKeys[0] });\r\n        };\r\n        const handleReset = clearFilters => {\r\n            clearFilters();\r\n            this.setState({ searchText: '' });\r\n        };\r\n        const getColumnSearchProps = dataIndex => ({\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        ref={node => {\r\n                            this.searchInput = node;\r\n                        }}\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => handleSearch(selectedKeys, confirm)}\r\n                        style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm)}\r\n                        icon=\"search\"\r\n                        size=\"small\"\r\n                        style={{ width: 90, marginRight: 8 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>Reset</Button>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => (<Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />),\r\n            onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => this.searchInput.select());\r\n                }\r\n            },\r\n        })\r\n        const cols = [\r\n            {\r\n                title: 'Recipe Name',\r\n                dataIndex: 'name',\r\n                ...getColumnSearchProps('name')\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'type'\r\n            },\r\n            {\r\n                title: 'Ingredients',\r\n                dataIndex: 'icount',\r\n                sorter: (a, b) => a.icount < b.icount ? -1 : a.icount === b.icount ? 0 : 1,\r\n                sortOrder: sortedInfo.columnKey === 'icount' && sortedInfo.order,\r\n            },\r\n        ]\r\n        return (\r\n            <Table\r\n                columns={cols}\r\n                dataSource={window.foodnet.recipes\r\n                    .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    .map(r => ({\r\n                        ...r,\r\n                        type: 'Custom',\r\n                        icount: (r.ingredients || []).length\r\n                    }))\r\n                }\r\n                pagination={false}\r\n                rowKey={'id'}\r\n                rowClassName={(r) => \"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onRow={(r) => ({\r\n                    onClick: () => {\r\n                        window.foodnet.selected = r.id;\r\n                        this.props.select(r.id);\r\n                        this.setState({ selectedRowKeys: [r.id] });\r\n                    },\r\n                })}\r\n                onChange={(pagination, filters, sortedInfo) => {\r\n                    this.setState({ sortedInfo, });\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import moment from 'moment'\r\n\r\nexport const isIngredientUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.id === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isRecipeUsed = (id) => {\r\n    if (window.foodnet.events.find(e => e.recipe === id)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}  \r\n\r\nexport const isRecipeUsedOnlyInOldEvents = (id) => {\r\n    if (window.foodnet.events.filter(e => moment(e.date).isAfter(moment().startOf('day'))).find(e => e.recipe === id)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}  \r\n\r\nexport const isMeasurementUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.type === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport './RecipeToolbar.css';\r\nimport { isRecipeUsed, isRecipeUsedOnlyInOldEvents } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        const needsConfirm = this.props.selected && isRecipeUsed(this.props.selected) && isRecipeUsedOnlyInOldEvents(this.props.selected)\r\n        return (\r\n            <div className=\"recipe-toolbar\">\r\n                <Button onClick={() => this.props.showModal('add')}>Add</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.showModal('edit')}>Edit</Button>\r\n                <Popconfirm\r\n                    title=\"This is still used in old calendar events. Are you sure?\"\r\n                    onConfirm={() => this.props.delete()}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                    disabled={!this.props.selected || !needsConfirm}\r\n                    placement=\"bottom\"\r\n                >\r\n                    <Button disabled={!this.props.selected} onClick={() => {\r\n                        if (!needsConfirm) this.props.delete()\r\n                    }}>Delete</Button>\r\n                </Popconfirm>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport {isIngredientUsed} from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.ingredients.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.ingredients.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.ingredients.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n                this.props.close();\r\n            }\r\n            else {\r\n                window.foodnet.ingredients.push({\r\n                    id: window.foodnet.ingredients.length === 0 ? 1 : Math.max(...window.foodnet.ingredients.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n                window.foodnet.sync();\r\n                this.props.close();\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isIngredientUsed(this.state.id)) {\r\n                            message.error(\"This ingredient is still being used. Please remove, replace, or rename the ingredient where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.ingredients = window.foodnet.ingredients.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing ingredient\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.ingredients.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.ingredients.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport { isMeasurementUsed } from \"../admin/EntityUsageChecker\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.measurements.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.measurements.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.measurements.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n            }\r\n            else {\r\n                window.foodnet.measurements.push({\r\n                    id: window.foodnet.measurements.length === 0 ? 1 : Math.max(...window.foodnet.measurements.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n            }\r\n            this.props.close();\r\n            window.foodnet.sync();\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isMeasurementUsed(this.state.id)) {\r\n                            message.error(\"This measurement is still being used. Please remove, replace, or rename the measurement where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.measurements = window.foodnet.measurements.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing measurement\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.measurements.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.measurements.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Dropdown, Menu, Select, Modal, Icon, Table } from 'antd';\r\nimport './RecipeForm.css';\r\nimport IngredientForm from './IngredientForm'\r\nimport TypeForm from './TypeForm'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        ingredients: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.edit && !this.state.name) {\r\n            const recipe = window.foodnet.recipes.find(r => r.id === this.props.edit);\r\n            this.setState({ ...recipe });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout} className=\"recipe-form\">\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        validateStatus={this.state.name ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name ? undefined : \"Should not be blank\"}\r\n                    >\r\n                        <Input placeholder=\"Enter a name\" value={this.state.name} onChange={(v) => this.setState({ name: v.target.value })} />\r\n                    </Form.Item>\r\n\r\n                    {this.renderConfigMenu()}\r\n\r\n                    {this.renderMultichooser()}\r\n                    {this.renderTable()}\r\n                    <Form.Item className=\"instructions\" label=\"Instructions\">\r\n                        <Input.TextArea\r\n                            value={this.state.desc}\r\n                            autoSize={{ minRows: 2, maxRows: 6 }}\r\n                            onChange={v => this.setState({ desc: v.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validateForm()} onClick={() => {\r\n                        if (this.state.id) {\r\n                            window.foodnet.recipes = window.foodnet.recipes.filter(it => it.id !== this.state.id).concat({ ...this.state, name: this.state.name.trim() });\r\n                        }\r\n                        else {\r\n                            const newId = window.foodnet.recipes.length === 0 ? 1 : Math.max(...window.foodnet.recipes.map(r => r.id)) + 1;\r\n                            window.foodnet.recipes.push({ ...this.state, name: this.state.name.trim(), id: newId });\r\n                        }\r\n                        window.foodnet.sync();\r\n                        this.props.close();\r\n                    }}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {this.renderModal()}\r\n                {this.renderTModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderConfigMenu() {\r\n        return (\r\n            <div className=\"config\">\r\n                Configure Ingredients/Measurements\r\n                <Dropdown trigger={['click']} overlay={\r\n                    <Menu onClick={(e) => {\r\n                        switch (e.key) {\r\n                            case \"1\":\r\n                                this.setState({ modal: 'add' })\r\n                                break;\r\n                            case \"2\":\r\n                                this.setState({ modal: 'edit' })\r\n                                break;\r\n                            case \"3\":\r\n                                this.setState({ tmodal: 'add' })\r\n                                break;\r\n                            case \"4\":\r\n                                this.setState({ tmodal: 'edit' })\r\n                                break;\r\n                            default:\r\n                        }\r\n                    }}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"plus\" />Create New Ingredient\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"edit\" /> Edit Existing Ingredients\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"plus\" /> Create New Measurement\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"edit\" /> Edit Existing Measurements\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }>\r\n                    <Icon type=\"setting\" className=\"setting-icon\" />\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })}>\r\n                <IngredientForm edit={this.state.modal === 'edit' ? true : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTModal() {\r\n        return this.state.tmodal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ tmodal: undefined })}>\r\n                <TypeForm edit={this.state.tmodal === 'edit' ? true : undefined} close={() => this.setState({ tmodal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTable() {\r\n        const wrapFormItemOnError = (cmp, validation, errorText) => {\r\n            return (\r\n                <Form.Item validateStatus={!validation ? \"error\" : \"success\"} help={!validation ? errorText : \"\"}>\r\n                    {cmp}\r\n                </Form.Item>\r\n            )\r\n        };\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                render: id => {\r\n                    const i = window.foodnet.ingredients.find(it => it.id === id);\r\n                    return <div>{i.name}</div>\r\n                }\r\n            },\r\n            {\r\n                title: 'Amount',\r\n                dataIndex: 'id',\r\n                key: 'qty',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Input type=\"number\" value={i.qty} onChange={v => {\r\n                            this.setState({\r\n                                ingredients: this.state.ingredients.filter(it => it.id !== id).concat([{\r\n                                    ...this.state.ingredients.find(it => it.id === id),\r\n                                    qty: v.target.value\r\n                                }])\r\n                            })\r\n                        }} />, i.qty, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'id',\r\n                key: 'type',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Select\r\n                            placeholder=\"Type\"\r\n                            filterOption={(inputValue, option) => {\r\n                                const name = option.props.children;\r\n                                const inp = typeof inputValue === 'string' || inputValue instanceof String ? inputValue : inputValue.toString();\r\n                                return (name || \"\").toLowerCase().indexOf((inp || \"\").toLowerCase());\r\n                            }}\r\n                            value={i.type ? i.type.toString() : undefined}\r\n                            onChange={(v) => {\r\n                                this.setState({\r\n                                    ingredients: this.state.ingredients\r\n                                        .filter(z => z.id !== i.id)\r\n                                        .concat(this.state.ingredients\r\n                                            .filter(z => z.id === i.id)\r\n                                            .map(z => ({ ...z, type: Number(v) })))\r\n                                })\r\n                            }}\r\n                        >\r\n                            {window.foodnet.measurements\r\n                                .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                                .map(m => <Select.Option key={m.id}>{m.name}</Select.Option>)}\r\n                        </Select>, i.type, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n        ];\r\n        const data = this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n        return this.state.ingredients.length > 0 && (\r\n            <Table columns={columns} dataSource={data} pagination={false} rowKey=\"id\" />\r\n        );\r\n    }\r\n\r\n    renderMultichooser() {\r\n        return (\r\n            <Select\r\n                className=\"multi-chooser\"\r\n                mode=\"multiple\"\r\n                placeholder={window.foodnet.ingredients.length === 0 ? \"Use the gear menu to create new ingredients\" : \"Please select\"}\r\n                value={this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => ({ key: it.id }))}\r\n                disabled={window.foodnet.ingredients.length === 0}\r\n                onChange={(values) => {\r\n                    const ids = values.map(it => Number(it.key));\r\n                    const idsToKeep = this.state.ingredients.map(it => it.id).filter(it => ids.indexOf(it) !== -1);\r\n                    const idsToAdd = ids.filter(id => this.state.ingredients.map(it => it.id).indexOf(id) === -1);\r\n                    this.setState({\r\n                        ingredients: this.state.ingredients\r\n                            .filter(it => idsToKeep.indexOf(it.id) !== -1)\r\n                            .concat(\r\n                                idsToAdd.map(it2 => (\r\n                                    { ...window.foodnet.ingredients.find(it3 => it3.id === it2) }\r\n                                ))\r\n                            )\r\n                            .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    })\r\n                }}\r\n                labelInValue={true}\r\n            >\r\n                {window.foodnet.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => (\r\n                    <Select.Option key={it.id} value={it.id}>{it.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n\r\n    renderIngAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'add' })\r\n            }}>Create New Ingredient</Button>\r\n        );\r\n    }\r\n\r\n    renderIngEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'edit' })\r\n            }}>Edit Existing Ingredients</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'add' })\r\n            }}>Create New Measurement</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'edit' })\r\n            }}>Edit Existing Measurements</Button>\r\n        );\r\n    }\r\n\r\n    validateForm() {\r\n        const isValid = this.state.name && this.state.name.trim().length > 0 && this.state.ingredients && this.state.ingredients.length > 0;\r\n        if (!isValid) return true;\r\n        for (var i in (this.state.ingredients || [])) {\r\n            const item = this.state.ingredients[i];\r\n            if (!item.type || !item.qty) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport RecipeToolbar from './RecipeToolbar'\r\nimport { Modal, message } from 'antd'\r\nimport RecipeForm from './RecipeForm'\r\nimport './RecipeApp.css'\r\nimport { isRecipeUsed, isRecipeUsedOnlyInOldEvents } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    render() {\r\n        //TODO: split add button, to: add custom recipe, add prepared food, add packaged food\r\n        //TODO: allow another recipe to be an ingredient?\r\n        return (\r\n            <>\r\n                {this.renderToolbar()}\r\n                {this.renderList()}\r\n                {this.renderModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderList() {\r\n        return <RecipeList selected={window.foodnet.selected} select={(id) => this.forceUpdate()} />;\r\n    }\r\n\r\n    renderToolbar() {\r\n        return <RecipeToolbar selected={window.foodnet.selected} showModal={(a) => this.setState({ modal: a })} delete={() => this.handleDelete()} />\r\n    }\r\n\r\n    handleDelete() {\r\n        if (isRecipeUsed(window.foodnet.selected) && !isRecipeUsedOnlyInOldEvents(window.foodnet.selected)) {\r\n            message.error(\"This recipe is still being used. Please remove or replace the recipe where it is being used before deleting.\")\r\n        }\r\n        else {\r\n            window.foodnet.recipes = window.foodnet.recipes.filter(r => r.id !== window.foodnet.selected);\r\n            window.foodnet.events = window.foodnet.events.filter(e => e.recipe !== window.foodnet.selected);\r\n            window.foodnet.selected = undefined;\r\n            window.foodnet.sync();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })} maskClosable={false} keyboard={true}>\r\n                <RecipeForm edit={this.state.modal === 'edit' ? window.foodnet.selected : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RecipeForm from '../recipe/RecipeForm'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <RecipeForm/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './AppHeader.css';\r\nimport { Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(props => <AppHeader {...props} />);\r\n\r\nexport const recipeIcon = <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />;\r\nexport const plannerIcon = <Icon type=\"calendar\" theme=\"twoTone\" />;\r\n\r\nclass AppHeader extends React.Component {\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n        const handleClick = (key) => {\r\n            switch (key) {\r\n                case \"recipes\":\r\n                    this.props.history.push(\"\");\r\n                    break;\r\n                case \"planner\":\r\n                    this.props.history.push(\"Planner\");\r\n                    break;\r\n                case \"shopper\":\r\n                    this.props.history.push(\"Shopper\");\r\n                    break;\r\n                case \"inventory\":\r\n                    this.props.history.push(\"Inventory\");\r\n                    break;\r\n                case \"importexport\":\r\n                    this.props.history.push(\"ImportExport\");\r\n                    break;\r\n                case \"reports\":\r\n                    this.props.history.push(\"Reports\");\r\n                    break;\r\n                case \"about\":\r\n                    this.props.history.push(\"About\");\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        const findSelectionFromRoute = () => {\r\n            const path = this.props.location.pathname.substring(1)\r\n            switch (path) {\r\n                case \"ImportExport\":\r\n                case 'Reports':\r\n                case 'Planner':\r\n                case 'Shopper':\r\n                case 'About':\r\n                case 'Inventory':\r\n                    return path.toLowerCase()\r\n                default:\r\n                    return \"recipes\"\r\n            }\r\n        }\r\n        return (\r\n            <Menu onClick={(e) => handleClick(e.key)} selectedKeys={[findSelectionFromRoute()]} mode=\"horizontal\">\r\n                <Menu.Item key=\"recipes\">\r\n                    {recipeIcon}\r\n                    Recipes\r\n                </Menu.Item>\r\n                <Menu.Item key=\"planner\">\r\n                    {plannerIcon}\r\n                    Planner\r\n                </Menu.Item>\r\n                <Menu.Item key=\"shopper\">\r\n                    <Icon type=\"shopping\" theme=\"twoTone\" />\r\n                    Shopper\r\n                </Menu.Item>\r\n                <Menu.Item key=\"inventory\">\r\n                    <Icon type=\"pic-right\" />\r\n                    Inventory\r\n                </Menu.Item>\r\n                <Menu.Item key=\"reports\">\r\n                    <Icon type=\"align-left\" />\r\n                    Reports\r\n                </Menu.Item>\r\n                <Menu.Item key=\"importexport\">\r\n                    <Icon type=\"setting\" />\r\n                    Import/Export\r\n                </Menu.Item>\r\n                <Menu.Item key=\"about\">\r\n                    <Icon type=\"question\" />\r\n                    About\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}","import XLSX from 'xlsx';\r\n\r\nexport const load = (input) => {\r\n    const wb = XLSX.read(input, { type: 'array' });\r\n    const r = XLSX.utils.sheet_to_json(wb.Sheets.Recipes);\r\n    window.foodnet.recipes = r.map(it => ({ ...it, ingredients: JSON.parse(it.ingredientsJson) }));\r\n    const i = XLSX.utils.sheet_to_json(wb.Sheets.Ingredients);\r\n    window.foodnet.ingredients = i.map(it => ({ ...it, tags: it.tagsJson ? JSON.parse(it.tagsJson) : [] }));\r\n    window.foodnet.measurements = XLSX.utils.sheet_to_json(wb.Sheets.Measurements);\r\n    window.foodnet.events = XLSX.utils.sheet_to_json(wb.Sheets.Events);\r\n    window.foodnet.sync();\r\n}\r\n\r\nexport const save = (filename) => {\r\n    const wb = XLSX.utils.book_new();\r\n    const recreateRecipeIngredients = it => it.ingredients.map(it => ({...it, name: window.foodnet.ingredients.find(i => i.id === it.id).name}))\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.recipes.map(it => ({ ...it, ingredientsJson: JSON.stringify(recreateRecipeIngredients(it)) }))), \"Recipes\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.ingredients.map(it => ({ ...it, tagsJson: JSON.stringify(it.tags || []) }))), \"Ingredients\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.measurements), \"Measurements\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.events), \"Events\");\r\n    XLSX.writeFile(wb, filename || 'foodnet.xlsx');\r\n}","import React from 'react';\r\nimport { save, load } from '../loaders/ExcelLoader';\r\nimport { Modal, Button, Form, Input, AutoComplete } from 'antd';\r\nimport './ImportExport.css';\r\nimport axios from 'axios'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        filename: 'backup.xlsx',\r\n        allowedFileExtensions: [\r\n            'xlsx', 'xlsm', 'xlsb', 'xml', 'xls', 'xlw', 'csv', 'txt', 'dif', 'sylk', 'slk', 'prn', 'ods', 'fods', 'dbf', 'eth'\r\n        ].map(it => '.' + it),\r\n    }\r\n    render() {\r\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\r\n            return (\r\n                <div>\r\n                    Error: your browser does not support the File API specification. It is required for long term storage.\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"import-export\">\r\n                <Button onClick={() => this.setState({ saveModal: true })}>\r\n                    Export To Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ loadModal: true })}>\r\n                    Import From Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ urlModal: true })}>\r\n                    Import From Url (Excel)\r\n                </Button>\r\n                {this.state.saveModal && (\r\n                    <Modal className=\"save-modal\" visible={true} onCancel={() => this.setState({ saveModal: false })} onOk={() => { save(this.getFilename()); this.setState({ saveModal: false }) }}>\r\n                        <Form.Item label=\"File Name\">\r\n                            <Input value={this.state.filename} onChange={v => this.setState({ filename: v.target.value })} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.loadModal && (\r\n                    <Modal className=\"load-modal\" visible={true} onCancel={() => this.setState({ loadModal: false })} okButtonProps={{ disabled: !this.state.file }} onOk={() => {\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onload = function (e) {\r\n                            load(e.target.result);\r\n                        };\r\n                        fileReader.readAsArrayBuffer(this.state.file);\r\n                        this.setState({ loadModal: false })\r\n                    }}>\r\n                        <Form.Item label=\"\">\r\n                            <Input type=\"file\" id=\"file\" name=\"file\" accept={this.state.allowedFileExtensions.join(',')} onChange={e => {\r\n                                this.setState({ file: e.target.files[0] })\r\n                            }} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.urlModal && this.urlModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    urlModal() {\r\n        const dropboxHack = (url) => {\r\n            if (url && url.indexOf(\"www.dropbox.com\")) {\r\n                return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\r\n            }\r\n        }\r\n        const validateUrl = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return false;\r\n            }\r\n            if (this.state.urlError) {\r\n                return false;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return false;\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        const validateMsg = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return \"Cannot be blank\";\r\n            }\r\n            if (this.state.urlError) {\r\n                return undefined;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return \"URL must begin with http or https\";\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return \"URL is not in the correct format (i.e. http://example.com)\";\r\n            }\r\n        }\r\n        const submit = () => {\r\n            axios.get(dropboxHack(this.state.url), { responseType: 'arraybuffer' }).then((r) => {\r\n                if (r.status !== 200) {\r\n                    this.setState({ urlError: `${r.status ? r.response.status + \" - \" : \"\"}${r.statusText ? r.response.statusText + \": \" : \"\"}${r.data || \"\"}` })\r\n                }\r\n                else {\r\n                    try {\r\n                        load(r.data)\r\n                        if (window.foodnet.importUrls.indexOf(this.state.url) === -1) {\r\n                            window.foodnet.importUrls.push(this.state.url);\r\n                            window.foodnet.sync();\r\n                        }\r\n                        this.setState({ urlModal: undefined, url: undefined })\r\n                    }\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ urlError: \"Could not parse file: \" + error })\r\n                    }\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e)\r\n                if (!e.response) {\r\n                    e.response = {\r\n                        statusText: \"error: CORS blocking\"\r\n                    }\r\n                }\r\n                console.log(`${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText + \": \" : \"\"}${e.response.data || \"\"}`)\r\n                this.setState({ urlError: `${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText : \"\"}` })\r\n            })\r\n        }\r\n        return (\r\n            <Modal className=\"url-modal\" visible={true} onCancel={() => this.setState({ urlModal: false })} okButtonProps={{ disabled: !validateUrl() }} onOk={() => submit()}>\r\n                <Form.Item label=\"Remote URL\" validateStatus={validateUrl() ? 'success' : 'error'} help={this.state.urlError || validateMsg()}>\r\n                    <AutoComplete style={{ width: 200 }} value={this.state.url} onChange={e => {\r\n                        this.setState({ url: e, urlError: undefined })\r\n                    }} >\r\n                        {window.foodnet.importUrls.map(it => (\r\n                            <AutoComplete.Option key={it}>{it}</AutoComplete.Option>\r\n                        ))}\r\n                    </AutoComplete>\r\n                    <Button className=\"url-delete-button\" onClick={() => {\r\n                        window.foodnet.importUrls = window.foodnet.importUrls.filter(it => it !== this.state.url)\r\n                        window.foodnet.sync()\r\n                        this.setState({url: undefined})\r\n                    }} icon=\"delete\" disabled={!this.state.url}/>\r\n                </Form.Item>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    getFilename() {\r\n        const { filename } = this.state;\r\n        for (let e in this.state.allowedFileExtensions) {\r\n            if (filename.endsWith(this.state.allowedFileExtensions[e])) {\r\n                return filename;\r\n            }\r\n        }\r\n        return filename + \".xlsx\";\r\n    }\r\n}","import React from 'react';\r\nimport './Reports.css';\r\nimport { Menu, Icon, Layout, Tree, Button, Card } from 'antd';\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        menu: 'r1'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"reports-layout\">\r\n                <Sider collapsible={true}>\r\n                    {this.renderMenu()}\r\n                </Sider>\r\n                <Content>\r\n                    {this.renderSelectedMenuItem()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    renderSelectedMenuItem() {\r\n        switch (this.state.menu) {\r\n            case \"r1\": return this.renderCookingReferenceReport()\r\n            case \"r1p2\": return this.renderCookingReferenceReportPage2()\r\n            case \"r2\": return this.renderTopFavoritesReport()\r\n            default: return undefined\r\n        }\r\n    }\r\n\r\n    renderMenu() {\r\n        return (\r\n            <Menu\r\n                onClick={(e) => this.setState({ menu: e.key })}\r\n                defaultSelectedKeys={['r1']}\r\n                defaultOpenKeys={['r']}\r\n                mode=\"inline\" style={{ height: '100%' }}\r\n            >\r\n                <Menu.SubMenu\r\n                    key=\"r\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                            <span>Recipe Reports</span>\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"r1\">Cooking Reference</Menu.Item>\r\n                    <Menu.Item key=\"r2\">Top Favorites</Menu.Item>\r\n                </Menu.SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderCookingReferenceReport() {\r\n        const check = (e) => {\r\n            if (e && e.length === 1 && e[0] === '0-0') {\r\n                this.setState({ r1checkedKeys: window.foodnet.recipes.map(it => it.id.toString()) });\r\n            }\r\n            else {\r\n                this.setState({ r1checkedKeys: e })\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"recipe-select\">\r\n                <Tree\r\n                    checkable\r\n                    onSelect={(e) => check(e)}\r\n                    onCheck={(e) => check(e)}\r\n                    expandedKeys={['0-0']}\r\n                    checkedKeys={this.state.r1checkedKeys}\r\n                >\r\n                    <Tree.TreeNode title=\"All Recipes\" key=\"0-0\">\r\n                        {window.foodnet.recipes.map(r => (\r\n                            <Tree.TreeNode title={r.name} key={r.id} />\r\n                        ))}\r\n                    </Tree.TreeNode>\r\n                </Tree>\r\n                <Button disabled={!this.state.r1checkedKeys || this.state.r1checkedKeys.length < 1} onClick={() => { this.setState({ menu: 'r1p2' }) }}>Generate Report</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCookingReferenceReportPage2() {\r\n        return (\r\n            <div className=\"recipe-report\">\r\n                {window.foodnet.recipes.filter(it => this.state.r1checkedKeys.indexOf(it.id.toString()) !== -1).map(r => (\r\n                    <Card key={r.id} size=\"small\" >\r\n                        <div className=\"recipe\" key={r.id}>\r\n                            <div className=\"recipe-name\">Recipe Name:</div>\r\n                            <div>{r.name}</div>\r\n                            <div className=\"desc-header\">Instructions:</div>\r\n                            <div className=\"desc-body\">{r.desc || \"None\"}</div>\r\n                            <div className=\"ing\">Ingredients:</div>\r\n                            <div className=\"ingredient-list\">\r\n                                {r.ingredients.map(i => (\r\n                                    <div key={i.id}>\r\n                                        <div>\r\n                                            {window.foodnet.ingredients.find(it => it.id === i.id).name}, {i.qty} {window.foodnet.measurements.find(it => it.id === i.type).name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTopFavoritesReport() {\r\n        return <div>Coming Soon</div>\r\n    }\r\n}","import React from 'react';\r\nimport './Planner.css';\r\nimport { Tooltip, Calendar, Badge, Radio, Timeline, Form, Button, Input, Select, Modal, Icon, } from 'antd';\r\nimport moment from 'moment';\r\n\r\n//TODO: inventory: when add recipe, show warning based on inventory (and change dot colors for list and calendar)\r\nexport default class extends React.Component {\r\n    state = {\r\n        mode: \"list\",\r\n        listDays: Number.isInteger(window.foodnet.listDays) ? window.foodnet.listDays : 7,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"planner\">\r\n                    {this.renderToolbar()}\r\n                    {this.state.mode === \"calendar\" && this.renderCalendar()}\r\n                    {this.state.mode === \"list\" && this.renderList()}\r\n                </div>\r\n                {this.renderAddListItemModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderToolbar() {\r\n        return (\r\n            <div className=\"planner-toolbar\">\r\n                <Radio.Group onChange={(e) => this.setState({ mode: e.target.value })} value={this.state.mode}>\r\n                    <Radio value={\"list\"}>List View</Radio>\r\n                    <Radio value={\"calendar\"}>Calendar View</Radio>\r\n                </Radio.Group>\r\n                {this.state.mode === \"list\" && (\r\n                    <Input type=\"number\" value={this.state.listDays} onChange={e => {\r\n                        if (e.target.value.length === 0) {\r\n                            this.setState({ listDays: undefined })\r\n                        }\r\n                        else {\r\n                            let v = Number(e.target.value)\r\n                            if (v < 0) v = 0;\r\n                            this.setState({ listDays: v })\r\n                            window.foodnet.listDays = v\r\n                            window.foodnet.sync()\r\n                        }\r\n                    }} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAddListItemModal() {\r\n        const valid = () => {\r\n            return this.state.recipe;\r\n        }\r\n        const submit = () => {\r\n            if (this.state.eventid) {\r\n                window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid).concat({\r\n                    id: this.state.eventid,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            else {\r\n                window.foodnet.events.push({\r\n                    id: window.foodnet.events.length === 0 ? 1 : Math.max(...window.foodnet.events.map(e => e.id)) + 1,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            window.foodnet.sync();\r\n            this.setState({\r\n                eventid: undefined,\r\n                recipe: undefined,\r\n                qty: undefined,\r\n                dayOffset: undefined,\r\n                modal: undefined,\r\n            })\r\n        }\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (this.state.modal === \"add-list-item\" || this.state.modal === \"edit-list-item\") && (\r\n            <Modal\r\n                className=\"list-item-modal\"\r\n                visible={true}\r\n                onCancel={() => this.setState({ modal: undefined })}\r\n                footer={[\r\n                    this.state.modal === \"edit-list-item\" && (\r\n                        <Button key=\"delete\" type=\"danger\" onClick={() => {\r\n                            window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid);\r\n                            window.foodnet.sync();\r\n                            this.setState({\r\n                                eventid: undefined,\r\n                                recipe: undefined,\r\n                                qty: undefined,\r\n                                dayOffset: undefined,\r\n                                modal: undefined,\r\n                            })\r\n                        }}>Delete Event</Button>\r\n                    ),\r\n                    <Button key=\"back\" onClick={() => this.setState({ modal: undefined })}>Cancel</Button>,\r\n                    <Button key=\"submit\" type=\"primary\" disabled={!valid()} onClick={() => submit()}>OK</Button>,\r\n                ]}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                        <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                            {window.foodnet.recipes.map(r => (\r\n                                <Select.Option key={r.id} value={r.id} className={this.recipeHasInventory(r.id, 1, this.state.dayOffset) ? 'has-inventory' : 'no-inventory'}>{r.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\" validateStatus={this.recipeHasInventory(this.state.recipe, this.state.qty, this.state.dayOffset) ? \"success\" : \"error\"} hasFeedback={true} >\r\n                        <Input\r\n                            autoFocus\r\n                            type=\"number\"\r\n                            defaultValue={1}\r\n                            value={this.state.qty}\r\n                            onChange={e => this.setState({ qty: e.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (valid()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderList() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const createItemsForDay = (dayOffset) => {\r\n            return window.foodnet.events\r\n                .filter(e => {\r\n                    return moment().add(dayOffset, \"days\").format(now_s_format) === moment(e.date).format(now_s_format)\r\n                })\r\n                .sort((a, b) => a.id < b.id ? -1 : 1)\r\n                .map(e => (\r\n                    <Timeline.Item key={e.id} color={this.recipeHasInventory(e.recipe, e.qty, dayOffset) ? 'green' : 'red'} onClick={() => {\r\n                        this.setState({\r\n                            eventid: e.id,\r\n                            modal: \"edit-list-item\",\r\n                            dayOffset: dayOffset,\r\n                            recipe: e.recipe,\r\n                            qty: e.qty,\r\n                        })\r\n                    }} >{e.qty} x {window.foodnet.recipes.find(r => r.id === e.recipe).name}</Timeline.Item>\r\n                ))\r\n        }\r\n        const addForDay = (dayOffset) => {\r\n            return <Timeline.Item key=\"add\" onClick={() => {\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }} dot={<Icon type=\"plus-circle\" theme=\"twoTone\" twoToneColor=\"red\" />}>Add</Timeline.Item>;\r\n        }\r\n        const createList = (dayOffset) => {\r\n            return (\r\n                <Timeline key={dayOffset}>\r\n                    <Timeline.Item key=\"top\" color=\"blue\"><b><u>{moment().add(dayOffset, 'days').format(\"dddd (MMM D)\")}</u></b></Timeline.Item>\r\n                    {createItemsForDay(dayOffset)}\r\n                    {addForDay(dayOffset)}\r\n                </Timeline>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"planner-list\">\r\n                {Array.from(Array(this.state.listDays)).map((z, day) => createList(day))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    recipeHasInventory(recipeId, eventMultipler, dayOffsetFromToday) {\r\n        if (!recipeId) return false;\r\n        let inv = {}\r\n        const {foodnet} = window;\r\n        foodnet.ingredients.forEach(ing => {\r\n            if (ing.qty && Number(ing.qty) > 0) {\r\n                inv[`${ing.id}-${ing.type}`] = ing.qty;\r\n            }\r\n        })\r\n\r\n        const now = moment().startOf('day');\r\n        const beforeOffset =  moment().endOf('day').add(dayOffsetFromToday - 1, 'days');\r\n        const events = foodnet.events.filter(e => moment(e.date).isBetween(now, beforeOffset));\r\n        events.forEach(e => {\r\n            const recipe = foodnet.recipes.find(r => r.id === e.recipe);\r\n            recipe.ingredients.forEach(ing => {\r\n                const qty = ing.qty * e.qty;\r\n                if (inv[`${ing.id}-${ing.type}`]) {\r\n                    inv[`${ing.id}-${ing.type}`] -= qty;\r\n                }\r\n                else inv[`${ing.id}-${ing.type}`] = -qty;\r\n            })\r\n        })\r\n\r\n        const ings = foodnet.recipes.find(r => r.id === recipeId).ingredients;\r\n        for (let i = 0; i < ings.length; i++) {\r\n            const ing = ings[i];\r\n            const qtyNeeded = ing.qty * (eventMultipler || 1);\r\n            const qtyOnHand = inv[`${ing.id}-${ing.type}`] || 0;\r\n            if (qtyNeeded > qtyOnHand) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    renderCalendar() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const dateCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).format(now_s_format) === m.format(now_s_format)\r\n            }).map(e => {\r\n                const text = `${e.qty} x ${window.foodnet.recipes.find(r => r.id === e.recipe).name}`;\r\n                const dayOffset = moment(e.date).startOf('day').diff(moment().startOf('day'), 'days')\r\n                return { \r\n                    eid: e.id, \r\n                    dayOffset: dayOffset, \r\n                    type: dayOffset < 0 ? 'success' : this.recipeHasInventory(e.recipe, e.qty, dayOffset) ? 'success' : 'error', //'warning', \r\n                    content: <Tooltip placement=\"top\" title={text}>{text}</Tooltip> \r\n                };\r\n            });\r\n            return (\r\n                <ul className=\"events\">\r\n                    {listData.map(item => (\r\n                        <li key={item.eid}>\r\n                            <Badge onClick={(event) => {\r\n                                const e = window.foodnet.events.find(it => it.id === item.eid);\r\n                                const dayOffset = item.dayOffset\r\n                                this.setState({\r\n                                    eventid: e.id,\r\n                                    modal: \"edit-list-item\",\r\n                                    dayOffset: dayOffset,\r\n                                    recipe: e.recipe,\r\n                                    qty: e.qty,\r\n                                })\r\n                                event.stopPropagation();\r\n                            }} status={item.type} text={item.content} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        const monthCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).month() === m.month() && moment(e.date).year() === m.year()\r\n            })\r\n            return (\r\n                listData.length + \" recipes\"\r\n            );\r\n          }\r\n\r\n        return (\r\n            <Calendar \r\n                mode={this.state.calMode || \"month\"} \r\n                onPanelChange={(value, mode) => this.setState({calMode: mode})} \r\n                dateCellRender={dateCellRender} \r\n                monthCellRender={monthCellRender} \r\n                onSelect={(m) => {\r\n                    if(this.state.calMode === 'year') {\r\n                        this.setState({calMode: 'month'})\r\n                        return;\r\n                    };\r\n                    const dayOffset = m.startOf('day').diff(moment().startOf('day'), 'days')\r\n                    this.setState({\r\n                        eventid: undefined,\r\n                        modal: \"add-list-item\",\r\n                        dayOffset: dayOffset,\r\n                        recipe: undefined,\r\n                        qty: undefined,\r\n                    })\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Tag, Input, Tooltip, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        tagColors: [\"blue\", \"green\", \"red\", \"orange\", \"cyan\", \"purple\"],\r\n    }\r\n\r\n    render() {\r\n        const handleInputConfirm = () => {\r\n            const { inputValue } = this.state;\r\n            this.setState({\r\n                inputVisible: false,\r\n                inputValue: '',\r\n            });\r\n            if (inputValue && inputValue.trim().length > 0)\r\n                this.props.add(inputValue.trim());\r\n        }\r\n        return (\r\n            <div className={this.props.className || \"\"}>\r\n                {this.props.tags.map((tag, index) => {\r\n                    const isLongTag = tag.length > 20;\r\n                    const tagElem = (\r\n                        <Tag key={tag} color={this.state.tagColors[index % this.state.tagColors.length]} closable={true} onClose={() => this.props.remove(tag)}>\r\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? (\r\n                        <Tooltip title={tag} key={tag}>\r\n                            {tagElem}\r\n                        </Tooltip>\r\n                    ) : (tagElem);\r\n                })}\r\n                {this.state.inputVisible && (\r\n                    <Input\r\n                        ref={input => (this.input = input)}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        style={{ width: 78 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={(e) => this.setState({ inputValue: e.target.value })}\r\n                        onBlur={handleInputConfirm}\r\n                        onPressEnter={handleInputConfirm}\r\n                    />\r\n                )}\r\n                {!this.state.inputVisible && (\r\n                    <Tag onClick={() => this.setState({ inputVisible: true }, () => this.input.focus())} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                        <Icon type=\"plus\" /> New Tag\r\n                    </Tag>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//////////UTIL/////////////////////////////////////////\r\n\r\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\r\n    var proto = Element.prototype;\r\n    proto.matches = proto.matchesSelector ||\r\n        proto.mozMatchesSelector || proto.msMatchesSelector ||\r\n        proto.oMatchesSelector || proto.webkitMatchesSelector;\r\n}\r\n\r\nconst closest = function (el, selector, rootNode) {\r\n    let element = el;\r\n    while (element) {\r\n        const isRoot = element === rootNode || element === document.body;\r\n        if (isRoot || (element.nodeType === 1 && element.matches(selector))) {\r\n            if (isRoot) {\r\n                element = null;\r\n            }\r\n            break;\r\n        }\r\n        element = element.parentNode;\r\n    }\r\n    return element;\r\n};\r\n\r\nconst getScrollElement = function (el) {\r\n    let element = el;\r\n    do {\r\n        const { overflow } = window.getComputedStyle(element);\r\n        if ((overflow === 'auto' || overflow === 'scroll')\r\n            && (element && element.nodeType\r\n                && (element.offsetWidth < element.scrollWidth\r\n                    || element.offsetHeight < element.scrollHeight))) {\r\n            break;\r\n        }\r\n        if (!element || !element.nodeType || element === document.body) {\r\n            element = null;\r\n            break;\r\n        }\r\n        element = element.parentNode;\r\n    } while (element);\r\n    return element;\r\n};\r\n\r\nconst getDomIndex = function (el, ignoreSelectors) {\r\n    return Array.from(el.parentNode.children)\r\n        .filter(e => (ignoreSelectors === '' ? true : !e.matches(ignoreSelectors)))\r\n        .indexOf(el);\r\n};\r\n\r\nexport { getScrollElement, closest, getDomIndex };\r\n\r\n\r\nconst DEFAULT_NODE_SELECTOR = 'tr';\r\nconst DIRECTIONS = {\r\n    TOP: 1,\r\n    BOTTOM: 3\r\n};\r\nconst UNIT_PX = 'px';\r\nconst DRAG_LIND_STYLE = 'position:fixed;z-index:9999;height:0;' +\r\n    'margin-top:-1px;border-bottom:dashed 2px red;display:none;';\r\n\r\n//////////DUCK TOUCH PUNCH/////////////////////////////////////////////////////////\r\n// eslint-disable-next-line no-unused-vars\r\nconst simulateMouseEvent = (event, simulatedType) => {\r\n    if (document.ontouchend) {\r\n        // Ignore multi-touch events\r\n        if (event.originalEvent.touches.length > 1) {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        var touch = event.originalEvent.changedTouches[0],\r\n            simulatedEvent = document.createEvent('MouseEvents');\r\n\r\n        // Initialize the simulated mouse event using the touch event's coordinates\r\n        simulatedEvent.initMouseEvent(\r\n            simulatedType,    // type\r\n            true,             // bubbles                    \r\n            true,             // cancelable                 \r\n            window,           // view                       \r\n            1,                // detail                     \r\n            touch.screenX,    // screenX                    \r\n            touch.screenY,    // screenY                    \r\n            touch.clientX,    // clientX                    \r\n            touch.clientY,    // clientY                    \r\n            false,            // ctrlKey                    \r\n            false,            // altKey                     \r\n            false,            // shiftKey                   \r\n            false,            // metaKey                    \r\n            0,                // button                     \r\n            null              // relatedTarget              \r\n        );\r\n\r\n        // Dispatch the simulated event to the target element\r\n        event.target.dispatchEvent(simulatedEvent);\r\n    }\r\n}\r\n\r\n//////////COMPONENT//////////////////////////////////////////////////////////////\r\n\r\nclass ReactDragListView extends Component {\r\n    static propTypes = {\r\n        onDragEnd: PropTypes.func.isRequired,\r\n        handleSelector: PropTypes.string,\r\n        nodeSelector: PropTypes.string,\r\n        ignoreSelector: PropTypes.string,\r\n        enableScroll: PropTypes.bool,\r\n        scrollSpeed: PropTypes.number,\r\n        lineClassName: PropTypes.string,\r\n        children: PropTypes.node\r\n    }\r\n\r\n    static defaultProps = {\r\n        nodeSelector: DEFAULT_NODE_SELECTOR,\r\n        ignoreSelector: '',\r\n        enableScroll: true,\r\n        scrollSpeed: 10,\r\n        handleSelector: '',\r\n        lineClassName: '',\r\n        children: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.autoScroll = this.autoScroll.bind(this);\r\n\r\n        this.state = {\r\n            fromIndex: -1,\r\n            toIndex: -1\r\n        };\r\n\r\n        this.scrollElement = null;\r\n        this.scrollTimerId = -1;\r\n        this.direction = DIRECTIONS.BOTTOM;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.dragLine && this.dragLine.parentNode) {\r\n            this.dragLine.parentNode.removeChild(this.dragLine);\r\n            this.dragLine = null;\r\n            this.cacheDragTarget = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        const handle = this.getHandleNode(e.target);\r\n        if (handle) {\r\n            const target = (!this.props.handleSelector || this.props.handleSelector\r\n                === this.props.nodeSelector)\r\n                ? handle\r\n                : this.getDragNode(handle);\r\n            if (target) {\r\n                handle.setAttribute('draggable', false);\r\n                target.setAttribute('draggable', true);\r\n                target.ondragstart = this.onDragStart;\r\n                target.ondragend = this.onDragEnd;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDragStart(e) {\r\n        const target = this.getDragNode(e.target);\r\n        const eventData = e;\r\n        if (target) {\r\n            const { parentNode } = target;\r\n            eventData.dataTransfer.setData('Text', '');\r\n            eventData.dataTransfer.effectAllowed = 'move';\r\n            parentNode.ondragenter = this.onDragEnter;\r\n            parentNode.ondragover = function (ev) {\r\n                ev.preventDefault();\r\n                return true;\r\n            };\r\n            const fromIndex = getDomIndex(target, this.props.ignoreSelector);\r\n            this.setState({ fromIndex, toIndex: fromIndex });\r\n            this.scrollElement = getScrollElement(parentNode);\r\n        }\r\n    }\r\n\r\n    onDragEnter(e) {\r\n        const target = this.getDragNode(e.target);\r\n        const eventData = e;\r\n        let toIndex;\r\n        if (target) {\r\n            toIndex = getDomIndex(target, this.props.ignoreSelector);\r\n            if (this.props.enableScroll) {\r\n                this.resolveAutoScroll(eventData, target);\r\n            }\r\n        } else {\r\n            toIndex = -1;\r\n            this.stopAutoScroll();\r\n        }\r\n        this.cacheDragTarget = target;\r\n        this.setState({ toIndex });\r\n        this.fixDragLine(target);\r\n    }\r\n\r\n    onDragEnd(e) {\r\n        const target = this.getDragNode(e.target);\r\n        this.stopAutoScroll();\r\n        if (target) {\r\n            target.removeAttribute('draggable');\r\n            target.ondragstart = null;\r\n            target.ondragend = null;\r\n            target.parentNode.ondragenter = null;\r\n            target.parentNode.ondragover = null;\r\n            if (this.state.fromIndex >= 0 && this.state.fromIndex !== this.state.toIndex) {\r\n                this.props.onDragEnd(this.state.fromIndex, this.state.toIndex);\r\n            }\r\n        }\r\n        this.hideDragLine();\r\n        this.setState({ fromIndex: -1, toIndex: -1 });\r\n    }\r\n\r\n    getDragNode(target) {\r\n        return closest(target, this.props.nodeSelector, this.dragList);\r\n    }\r\n\r\n    getHandleNode(target) {\r\n        return closest(\r\n            target,\r\n            this.props.handleSelector || this.props.nodeSelector,\r\n            this.dragList\r\n        );\r\n    }\r\n\r\n    getDragLine() {\r\n        if (!this.dragLine) {\r\n            this.dragLine = window.document.createElement('div');\r\n            this.dragLine.setAttribute('style', DRAG_LIND_STYLE);\r\n            window.document.body.appendChild(this.dragLine);\r\n        }\r\n        this.dragLine.className = this.props.lineClassName || '';\r\n        return this.dragLine;\r\n    }\r\n\r\n    resolveAutoScroll(e, target) {\r\n        if (!this.scrollElement) {\r\n            return;\r\n        }\r\n        const { top, height } = this.scrollElement.getBoundingClientRect();\r\n        const targetHeight = target.offsetHeight;\r\n        const { pageY } = e;\r\n        const compatibleHeight = targetHeight * (2 / 3);\r\n        this.direction = 0;\r\n        if (pageY > ((top + height) - compatibleHeight)) {\r\n            this.direction = DIRECTIONS.BOTTOM;\r\n        } else if (pageY < (top + compatibleHeight)) {\r\n            this.direction = DIRECTIONS.TOP;\r\n        }\r\n        if (this.direction) {\r\n            if (this.scrollTimerId < 0) {\r\n                this.scrollTimerId = setInterval(this.autoScroll, 20);\r\n            }\r\n        } else {\r\n            this.stopAutoScroll();\r\n        }\r\n    }\r\n\r\n    stopAutoScroll() {\r\n        clearInterval(this.scrollTimerId);\r\n        this.scrollTimerId = -1;\r\n        this.fixDragLine(this.cacheDragTarget);\r\n    }\r\n\r\n    autoScroll() {\r\n        const { scrollTop } = this.scrollElement;\r\n        if (this.direction === DIRECTIONS.BOTTOM) {\r\n            this.scrollElement.scrollTop = scrollTop + this.props.scrollSpeed;\r\n            if (scrollTop === this.scrollElement.scrollTop) {\r\n                this.stopAutoScroll();\r\n            }\r\n        } else if (this.direction === DIRECTIONS.TOP) {\r\n            this.scrollElement.scrollTop = scrollTop - this.props.scrollSpeed;\r\n            if (this.scrollElement.scrollTop <= 0) {\r\n                this.stopAutoScroll();\r\n            }\r\n        } else {\r\n            this.stopAutoScroll();\r\n        }\r\n    }\r\n\r\n    hideDragLine() {\r\n        if (this.dragLine) {\r\n            this.dragLine.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    fixDragLine(target) {\r\n        const dragLine = this.getDragLine();\r\n        if (!target || this.state.fromIndex < 0\r\n            || this.state.fromIndex === this.state.toIndex) {\r\n            this.hideDragLine();\r\n            return;\r\n        }\r\n        const {\r\n            left, top, width, height\r\n        } = target.getBoundingClientRect();\r\n        const lineTop = (this.state.toIndex < this.state.fromIndex\r\n            ? top\r\n            : (top + height));\r\n        if (this.props.enableScroll && this.scrollElement) {\r\n            const {\r\n                height: scrollHeight,\r\n                top: scrollTop\r\n            } = this.scrollElement.getBoundingClientRect();\r\n            if (lineTop < (scrollTop - 2) || lineTop > (scrollTop + scrollHeight + 2)) {\r\n                this.hideDragLine();\r\n                return;\r\n            }\r\n        }\r\n        dragLine.style.left = left + UNIT_PX;\r\n        dragLine.style.width = width + UNIT_PX;\r\n        dragLine.style.top = lineTop + UNIT_PX;\r\n        dragLine.style.display = 'block';\r\n    }\r\n\r\n    render() {\r\n        const touchEvents = {\r\n            onTouchStart: (e) => {\r\n            //    simulateMouseEvent(e, 'mousedown')\r\n            }\r\n        }\r\n        return (\r\n            <div role=\"presentation\" {...touchEvents} onMouseDown={this.onMouseDown} ref={(c) => { this.dragList = c; }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactDragListView;","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport {Input} from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {}\r\n\r\n    render() {\r\n        const handleChange = (e) => {\r\n            this.setState({ value: e.target.value })\r\n        };\r\n        const onInputChange = () => {\r\n            this.setState({ value: undefined })\r\n        }\r\n        return <Input\r\n            {...this.props}\r\n            value={this.state.value === \"\" ? this.state.value : (this.props.value || this.state.value || this.props.defaultValue)}\r\n            onChange={(e) => handleChange(e)}\r\n            onPressEnter={(e) => { onInputChange(); if (e.target.value !== \"\" && e.target.value != this.props.defaultValue) this.props.onPressEnter(e) }}\r\n            onBlur={(e) => { onInputChange(); if (e.target.value !== \"\" && e.target.value != this.props.defaultValue) this.props.onBlur(e) }}\r\n        />\r\n    }\r\n}","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport './Shopper.css'\r\nimport { DatePicker, Checkbox, Dropdown, Modal, Button, Menu, Tag, Switch, Icon, Tooltip, message } from 'antd'\r\nimport moment from 'moment'\r\nimport Tags from './Tags'\r\nimport ReactDragListView from '../hoc/ReactDragListView'\r\nimport MyInput from './CustomInput'\r\nimport {notification} from 'antd'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        checkedItems: [],\r\n        filteredTags: [],\r\n        MULTIPLIER: 4,\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            dates: window.foodnet.plannerDates && window.foodnet.plannerDates.length === 2 ? window.foodnet.plannerDates.map(it => moment(it)) : undefined,\r\n            checkedItems: window.foodnet.plannerCheckedItems || [],\r\n            customSort: window.foodnet.customSort,\r\n            customSortOrder: window.foodnet.customSortOrder,\r\n        })\r\n    }\r\n    render() {\r\n        const updateTags = (tag, checked) => {\r\n            let tags = this.state.filteredTags;\r\n            if (checked) {\r\n                tags = tags.concat(tag)\r\n            }\r\n            else {\r\n                tags = tags.filter(t => t !== tag)\r\n            }\r\n            this.setState({ filteredTags: tags })\r\n        }\r\n\r\n        const tags = this.getTags()\r\n\r\n        const createMenu = () => {\r\n            return [(\r\n                <Menu.Item key={\"_NO_TAG\"}><Checkbox onChange={e => updateTags(\"_NO_TAG\", e.target.checked)}>Untagged</Checkbox></Menu.Item>\r\n            )].concat(tags.map(tag => (\r\n                <Menu.Item key={tag}><Checkbox onChange={e => updateTags(tag, e.target.checked)}>{tag}</Checkbox></Menu.Item>\r\n            )))\r\n        }\r\n\r\n        const onDragEnd = (fromIndex, toIndex) => {\r\n            const newTags = [...tags]\r\n            const item = newTags.splice(fromIndex / this.state.MULTIPLIER, 1)[0];\r\n            newTags.splice(toIndex / this.state.MULTIPLIER, 0, item);\r\n            this.setState({ customSortOrder: newTags });\r\n        }\r\n\r\n        const onInputChange = (newValue, oldValue) => {\r\n            if (Number(newValue) !== oldValue) {\r\n                const fromIndex = oldValue - 1;\r\n                let toIndex = Number(newValue) - 1;\r\n                if (toIndex >= tags.length) {\r\n                    toIndex = tags.length - 1;\r\n                }\r\n                onDragEnd(fromIndex * this.state.MULTIPLIER, toIndex * this.state.MULTIPLIER);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"shopper\">\r\n                <div className=\"buttons\">\r\n                    <Button disabled={!tags || tags.length === 0} onClick={() => this.setState({ modal: 'sort' })}>Sort by Tags</Button>\r\n                    <Dropdown\r\n                        disabled={createMenu().length === 1}\r\n                        onVisibleChange={(v) => this.setState({ dropdownvisible: v })}\r\n                        visible={this.state.dropdownvisible}\r\n                        trigger={['click']}\r\n                        overlay={(\r\n                            <Menu>\r\n                                {createMenu()}\r\n                            </Menu>\r\n                        )}>\r\n                        <Button>Filter by Tags</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={() => this.setState({ hideTags: !this.state.hideTags })}>{this.state.hideTags ? 'Show Tags' : 'Hide Tags'}</Button>\r\n                    <Button onClick={() => this.setState({ hideZero: !this.state.hideZero })}>{this.state.hideZero ? 'Show Zeros' : 'Hide Zeroes'}</Button>\r\n                </div>\r\n                <RangePicker value={this.state.dates} onChange={(m) => {\r\n                    this.setState({ dates: m, checkedItems: [] })\r\n                    window.foodnet.plannerDates = m.map(it => it.format());\r\n                    window.foodnet.plannerCheckedItems = [];\r\n                    window.foodnet.sync();\r\n                }} />\r\n                {this.state.dates && (<>\r\n                    {this.renderIngredientList()}\r\n                    <Button className=\"copy-to-inventory-button\" onClick={() => {\r\n                        const list = this.createIngredientList();\r\n                        const {foodnet} = window;\r\n                        list.forEach(ing => {\r\n                            let inv = foodnet.ingredients.find(it => it.id === ing.id)\r\n                            if (!inv.type) {\r\n                                inv.type = ing.type;\r\n                            }\r\n                            if (inv.type !== ing.type) {\r\n                                const mname = (id) => foodnet.measurements.find(m => m.id === id).name;\r\n                                notification.error({ message: \"Error: Measurement type mismatch\", description: `Ingredient: ${ing.name}, types: from ${mname(ing.type)} to ${mname(inv.type)}`, duration: 0 });\r\n                            }\r\n                            else {\r\n                                if (inv.qty === undefined) inv.qty = 0\r\n                                inv.qty = Number(inv.qty)\r\n                                inv.qty += Number(ing.qty || 1);\r\n                                foodnet.sync()\r\n                            }\r\n                        })\r\n\r\n                        message.info(\"Done copying\")\r\n                        this.forceUpdate()\r\n                    }}>==== COPY DISPLAYED TO INVENTORY ===></Button>\r\n                </>)}\r\n\r\n                {this.state.modal === 'sort' && (\r\n                    <Modal className=\"sort-popup\" visible={true} onCancel={() => {\r\n                        this.setState({ modal: undefined, customSort: window.foodnet.customSort, customSortOrder: window.foodnet.customSortOrder })\r\n                    }} onOk={() => {\r\n                        window.foodnet.customSort = this.state.customSort\r\n                        window.foodnet.customSortOrder = this.state.customSortOrder\r\n                        window.foodnet.sync()\r\n                        this.setState({ modal: undefined })\r\n                    }}>\r\n                        <div><Switch checked={this.state.customSort} onChange={(checked) => {\r\n                            this.setState({ customSort: checked, customSortOrder: tags })\r\n                        }} /> Enable Tag Sorting</div>\r\n                        <ReactDragListView\r\n                            onDragEnd={onDragEnd}\r\n                            nodeSelector=\"span\"\r\n                            handleSelector=\"span\"\r\n                        >\r\n                            <div className=\"drag-list\">\r\n                                {tags.map((item, index) => (\r\n                                    <React.Fragment key={index}>\r\n                                        <MyInput type=\"number\" min=\"1\" max=\"9999\" defaultValue={index + 1} onPressEnter={(e) => onInputChange(e.target.value, index + 1)} onBlur={(e) => onInputChange(e.target.value, index + 1)} />\r\n                                        <Tag>{item}</Tag>\r\n                                        <Icon className=\"up\" type=\"up\" onClick={() => onDragEnd(index * this.state.MULTIPLIER, index * this.state.MULTIPLIER - this.state.MULTIPLIER)} />\r\n                                        <Icon className=\"down\" type=\"down\" onClick={() => onDragEnd(index * this.state.MULTIPLIER, index * this.state.MULTIPLIER + this.state.MULTIPLIER)} />\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </div>\r\n                        </ReactDragListView>\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTags() {\r\n        let tags = []\r\n        window.foodnet.ingredients.forEach(ing => {\r\n            (ing.tags || []).forEach(tag => {\r\n                if (tags.indexOf(tag) === -1) tags = tags.concat(tag);;\r\n            })\r\n        });\r\n        (this.state.filteredTags || []).forEach(t => {\r\n            if (tags.indexOf(t) === -1) tags = tags.concat(t);;\r\n        });\r\n        tags = tags.sort((a, b) => a.localeCompare(b))\r\n        if (this.state.customSort && this.state.customSortOrder && this.state.customSortOrder.length > 0) {\r\n            const { customSortOrder } = this.state;\r\n            tags = tags.sort((a, b) => {\r\n                const ai = customSortOrder.indexOf(a)\r\n                const bi = customSortOrder.indexOf(b)\r\n                if (ai !== -1 || bi !== -1) {\r\n                    if (ai !== -1 && bi !== -1) {\r\n                        return ai < bi ? -1 : 1;\r\n                    }\r\n                    return ai === -1 ? -1 : 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    createIngredientList() {\r\n        const { foodnet } = window;\r\n        let list = [];\r\n        foodnet.events.forEach(event => {\r\n            if (moment(event.date).isBetween(...this.state.dates, 'days', '[]')) {\r\n                const multiplier = Number(event.qty) || 0;\r\n                const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n                recipe.ingredients.forEach(ing => {\r\n                    list.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier });\r\n                })\r\n            }\r\n        })\r\n\r\n        const mergeDuplicates = (item, index, l) => {\r\n            if (index > 0 && l[index - 1].id === item.id && l[index - 1].type === item.type) {\r\n                let newIndex = index - 1;\r\n                while (l[newIndex].deleted) newIndex--;\r\n                l[newIndex].qty += item.qty;\r\n                item.deleted = true;\r\n            }\r\n            return item;\r\n        };\r\n        list = list.sort((a, b) => {\r\n            if (a.id !== b.id) {\r\n                return a.id < b.id ? -1 : 1;\r\n            }\r\n            if (a.type !== b.type) {\r\n                return a.type < b.type ? -1 : 1;\r\n            }\r\n            return 0;\r\n        }).map(mergeDuplicates).filter(item => !item.deleted);\r\n\r\n        list = list.map(item => {\r\n            const inv = foodnet.ingredients.find(it => it.id === item.id && it.type === item.type);\r\n            if (inv && inv.qty && inv.qty > 0) {\r\n                let qty = Number(item.qty) - Number(inv.qty);\r\n                if (qty < 0) qty = 0;\r\n                return { ...item, qty: qty, deducted: true }\r\n            }\r\n            return item;\r\n        }).filter(item => !this.state.hideZero || item.qty > 0)\r\n\r\n        const sortedTags = this.getTags()\r\n\r\n        return list.map(item => ({\r\n            ...item,\r\n            name: foodnet.ingredients.find(i => i.id === item.id).name,\r\n            typename: foodnet.measurements.find(m => m.id === item.type).name,\r\n            checked: this.state.checkedItems.indexOf(item.id) !== -1,\r\n            tags: foodnet.ingredients.find(i => i.id === item.id).tags || []\r\n        }))\r\n            .sort((a, b) => a.name.localeCompare(b.name) || a.typename.localeCompare(b.typename))\r\n            .filter(item => {\r\n                if (this.state.filteredTags.length === 0) return true;\r\n                let tags = item.tags\r\n                if (tags.length === 0) tags = ['_NO_TAG']\r\n                let found = false;\r\n                tags.forEach(t => {\r\n                    this.state.filteredTags.forEach(t2 => {\r\n                        if (t === t2) found = true;\r\n                    })\r\n                })\r\n                return found;\r\n            })\r\n            .sort((a, b) => {\r\n                if (!this.state.customSort) {\r\n                    return 0;\r\n                }\r\n                if (!a.tags || !b.tags || a.tags.length === 0 || b.tags.length === 0) {\r\n                    if ((!a.tags || a.tags.length === 0) && (!b.tags || b.tags.length === 0)) {\r\n                        return 0;\r\n                    }\r\n                    return !a.tags || a.tags.length === 0 ? 1 : -1;\r\n                }\r\n                const findHighestTag = (tags) => tags.reduce((tag, highestTag) => {\r\n                    if (!highestTag) return tag;\r\n                    const ti = sortedTags.indexOf(tag)\r\n                    const hi = sortedTags.indexOf(highestTag)\r\n                    if (ti === -1 || hi === -1) {\r\n                        if (ti === -1 && hi === -1) return highestTag;\r\n                        return ti === -1 ? highestTag : tag;\r\n                    }\r\n                    return ti < hi ? tag : highestTag;\r\n                })\r\n                const aTag = findHighestTag(a.tags)\r\n                const bTag = findHighestTag(b.tags)\r\n                const ai = sortedTags.indexOf(aTag)\r\n                const bi = sortedTags.indexOf(bTag)\r\n                if (ai !== -1 || bi !== -1) {\r\n                    if (ai !== -1 && bi !== -1) {\r\n                        return ai < bi ? -1 : 1;\r\n                    }\r\n                    return ai === -1 ? -1 : 1;\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    renderIngredientList() {\r\n        const { foodnet } = window;\r\n        let list = this.createIngredientList()\r\n        return (\r\n            <ul className=\"ingredient-list\">\r\n                {list.map((item, index) => (\r\n                    <li key={index} className=\"shopper-list-items\">\r\n                        <Checkbox className=\"shopper-list-item\" key={index} checked={item.checked} onChange={e => {\r\n                            foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.filter(it => it !== item.id)\r\n                            if (e.target.checked) {\r\n                                foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.concat(item.id);\r\n                            }\r\n                            this.setState({ checkedItems: foodnet.plannerCheckedItems });\r\n                            foodnet.sync();\r\n                        }}>\r\n                            {`${item.name}: ${item.qty} ${item.typename}`}\r\n                        </Checkbox>\r\n                        {item.deducted && (\r\n                            <Tooltip title=\"Adjusted from inventory\" trigger=\"click\">\r\n                                <Icon className=\"deduct-icon\" type=\"info-circle\" theme=\"twoTone\" twoToneColor=\"orange\" />\r\n                            </Tooltip>\r\n                        )}\r\n                        {!this.state.hideTags && <Tags className=\"shopper-tags\" tags={item.tags} add={(tag) => {\r\n                            const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                            foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].concat(tag) })\r\n                            foodnet.sync()\r\n                            this.forceUpdate()\r\n                        }} remove={(tag) => {\r\n                            const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                            foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].filter(it => it !== tag) })\r\n                            foodnet.sync()\r\n                            this.forceUpdate()\r\n                        }} />}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport './Inventory.css';\r\nimport { Select, Button, Dropdown, Menu, Icon, Modal, Form, Input, DatePicker, notification, Popover } from 'antd';\r\nimport MyInput from '../shopper/CustomInput'\r\nimport moment from 'moment';\r\nimport { recipeIcon, plannerIcon } from '../AppHeader'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n    findIngredientsUsedInEvents() {\r\n        const { foodnet } = window;\r\n        let list = [];\r\n        const now = moment().startOf('day');\r\n        const plannedDate = moment().endOf('day').add(foodnet.listDays - 1, 'days');\r\n        foodnet.events.filter(e => moment(e.date).isBetween(now, plannedDate)).forEach(event => {\r\n            const multiplier = Number(event.qty) || 0;\r\n            const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n            recipe.ingredients.forEach(ing => {\r\n                list.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier });\r\n            })\r\n        })\r\n\r\n        const mergeDuplicates = (item, index, l) => {\r\n            if (index > 0 && l[index - 1].id === item.id && l[index - 1].type === item.type) {\r\n                let newIndex = index - 1;\r\n                while (l[newIndex].deleted) newIndex--;\r\n                l[newIndex].qty += item.qty;\r\n                item.deleted = true;\r\n            }\r\n            return item;\r\n        };\r\n        list = list.sort((a, b) => {\r\n            if (a.id !== b.id) {\r\n                return a.id < b.id ? -1 : 1;\r\n            }\r\n            if (a.type !== b.type) {\r\n                return a.type < b.type ? -1 : 1;\r\n            }\r\n            return 0;\r\n        }).map(mergeDuplicates).filter(item => !item.deleted);\r\n\r\n        return (\r\n            list.map(item => ({\r\n                ...item,\r\n                name: foodnet.ingredients.find(i => i.id === item.id).name,\r\n                typename: foodnet.measurements.find(m => m.id === item.type).name,\r\n            }))\r\n                .sort((a, b) => a.name.localeCompare(b.name) || a.typename.localeCompare(b.typename))\r\n        );\r\n    }\r\n    renderToolbar() {\r\n        const menuOnClickHandler = (key) => {\r\n            this.setState({ modal: key });\r\n        }\r\n        const createMenu = (type) => (\r\n            <Menu className={`inventory-toolbar-dropdown-${type}`} onClick={e => menuOnClickHandler(e.key)}>\r\n                <Menu.Item key={`${type}-recipe`}>\r\n                    {recipeIcon}\r\n                    Recipe\r\n                </Menu.Item>\r\n                <Menu.Item key={`${type}-event`}>\r\n                    {plannerIcon}\r\n                    Event dates\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"inventory-toolbar\">\r\n                <Dropdown overlay={createMenu('add')}>\r\n                    <Button>\r\n                        Add from ...<Icon type=\"down\" />\r\n                    </Button>\r\n                </Dropdown>\r\n                <Dropdown overlay={createMenu('remove')}>\r\n                    <Button>\r\n                        Deduct from ...<Icon type=\"down\" />\r\n                    </Button>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n    renderModals() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const getEvents = () => {\r\n            const { foodnet } = window;\r\n            let elist = []\r\n            if (this.state.dates) {\r\n                foodnet.events.forEach(event => {\r\n                    let ilist = []\r\n                    if (moment(event.date).isBetween(...this.state.dates, 'days', '[]')) {\r\n                        const multiplier = Number(event.qty) || 0;\r\n                        const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n                        recipe.ingredients.forEach(ing => {\r\n                            ilist.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier, name: foodnet.ingredients.find(it => it.id === ing.id).name });\r\n                        })\r\n                        elist.push({\r\n                            event: event,\r\n                            ilist: ilist,\r\n                            recipe: recipe\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n            return elist.sort((a, b) => {\r\n                const aDate = moment(a.event.date).startOf('day')\r\n                const bDate = moment(b.event.date).startOf('day')\r\n                if (aDate.isBefore(bDate)) return -1\r\n                if (aDate.isAfter(bDate)) return 1\r\n                return a.recipe.name.localeCompare(b.recipe.name)\r\n            })\r\n        }\r\n        const valid = () => {\r\n            const { modal } = this.state;\r\n            if (modal === 'add-recipe' || modal === 'remove-recipe') {\r\n                return this.state.recipe && this.state.recipe > 0;\r\n            }\r\n            else {\r\n                return this.state.dates && this.state.dates.length > 0 && getEvents().length > 0;\r\n            }\r\n        }\r\n        const submit = () => {\r\n            const { modal } = this.state;\r\n            const { foodnet } = window;\r\n            if (modal === 'add-recipe' || modal === 'remove-recipe') {\r\n                const r = foodnet.recipes.find(r => r.id === this.state.recipe)\r\n                r.ingredients.forEach(ing => {\r\n                    let inv = foodnet.ingredients.find(it => it.id === ing.id)\r\n                    if (!inv.type) {\r\n                        inv.type = ing.type;\r\n                    }\r\n                    if (inv.type !== ing.type) {\r\n                        notification.error({ message: \"Error: Measurement type mismatch\", description: \"Recipe: \" + r.name + \", Ingredient: \" + ing.name, duration: 0 });\r\n                    }\r\n                    else {\r\n                        const multiplier = this.state.qty;\r\n                        if (inv.qty === undefined) inv.qty = 0\r\n                        inv.qty = Number(inv.qty)\r\n                        if (modal === 'add-recipe') inv.qty += Number(ing.qty || 1) * Number(multiplier || 1);\r\n                        else {\r\n                            inv.qty -= Number(ing.qty || 1) * Number(multiplier || 1);\r\n                            if (inv.qty < 0) inv.qty = 0\r\n                        }\r\n                        foodnet.sync()\r\n                    }\r\n                })\r\n            }\r\n            else if (modal === 'add-event' || modal === 'remove-event') {\r\n                getEvents().forEach(e => {\r\n                    const r = e.recipe\r\n                    e.ilist.forEach(ing => {\r\n                        let inv = foodnet.ingredients.find(it => it.id === ing.id)\r\n                        if (!inv.type) {\r\n                            inv.type = ing.type;\r\n                        }\r\n                        if (inv.type !== ing.type) {\r\n                            const mname = (id) => foodnet.measurements.find(m => m.id === id).name;\r\n                            notification.error({ message: \"Error: Measurement type mismatch\", description: `Recipe: ${r.name}, Ingredient: ${ing.name}, type ${mname(ing.type)} vs. ${mname(inv.type)}`, duration: 0 });\r\n                        }\r\n                        else {\r\n                            if (inv.qty === undefined) inv.qty = 0\r\n                            inv.qty = Number(inv.qty)\r\n                            if (modal === 'add-event') inv.qty += Number(ing.qty || 1);\r\n                            else {\r\n                                inv.qty -= Number(ing.qty || 1);\r\n                                if (inv.qty < 0) inv.qty = 0\r\n                            }\r\n                            foodnet.sync()\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            this.setState({ modal: undefined, recipe: undefined, qty: undefined, dates: undefined })\r\n        }\r\n        const cancel = () => {\r\n            this.setState({ modal: undefined, recipe: undefined, qty: undefined, dates: undefined })\r\n        }\r\n        const createEventCard = (e) => {\r\n            return (\r\n                e.ilist.map((i, index) => (\r\n                    <div key={index}>{`${i.name} - ${i.qty} ${window.foodnet.measurements.find(it => it.id === i.type).name}`}</div>\r\n                ))\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {(this.state.modal === 'add-recipe' || this.state.modal === 'remove-recipe') && (\r\n                    <Modal width=\"90%\" visible={true} keyboard={true}\r\n                        onCancel={() => cancel()}\r\n                        onOk={() => submit()}\r\n                        okButtonProps={{ disabled: !valid() }}\r\n                    >\r\n                        <Form {...formItemLayout}>\r\n                            <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                                <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                                    {window.foodnet.recipes.map(r => (\r\n                                        <Select.Option key={r.id} value={r.id}>{r.name}</Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Quantity\">\r\n                                <Input\r\n                                    autoFocus\r\n                                    type=\"number\"\r\n                                    defaultValue={1}\r\n                                    value={this.state.qty}\r\n                                    onChange={e => this.setState({ qty: e.target.value })}\r\n                                    onPressEnter={() => {\r\n                                        if (valid()) {\r\n                                            submit();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>)}\r\n                {(this.state.modal === 'add-event' || this.state.modal === 'remove-event') && (\r\n                    <Modal width=\"90%\" visible={true} keyboard={true}\r\n                        onCancel={() => cancel()}\r\n                        onOk={() => submit()}\r\n                        okButtonProps={{ disabled: !valid() }}\r\n                    >\r\n                        <Form {...formItemLayout}>\r\n                            <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Event Dates\">\r\n                                <RangePicker value={this.state.dates} onChange={(m) => {\r\n                                    this.setState({ dates: m })\r\n                                }} />\r\n                            </Form.Item>\r\n                            <Form.Item label={`Events to ${this.state.modal === 'add-event' ? 'add' : 'remove'}`}>\r\n                                {getEvents().map(e => (\r\n                                    <div key={e.event.id}>\r\n                                        {`${e.event.qty} x `}\r\n                                        <Popover content={createEventCard(e)}>\r\n                                            <a onClick={() => {}}>{`${e.recipe.name}`}</a>\r\n                                        </Popover>\r\n                                        {` on ${moment(e.event.date).format(\"MMM Do\")}`}\r\n                                    </div>\r\n                                ))}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>)}\r\n            </>\r\n        )\r\n    }\r\n    render() {\r\n        const { foodnet } = window;\r\n        const onDropdownChange = (v, item) => {\r\n            item.type = v;\r\n            foodnet.sync();\r\n            this.forceUpdate()\r\n        }\r\n        const createDropdown = (item) => (\r\n            <Select className=\"inventory-list-item-type\" value={item.type} onChange={v => onDropdownChange(v, item)}>\r\n                {foodnet.measurements.map(m => (\r\n                    <Select.Option key={m.id} value={m.id}>{m.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        )\r\n        const isEditing = (item) => this.state.edit === item.id;\r\n        const readOnlyClickHandler = (item, e) => this.setState({ edit: item.id })\r\n        const onInputChange = (v, item) => {\r\n            item.qty = v;\r\n            foodnet.sync();\r\n            this.forceUpdate()\r\n        }\r\n        const eventUsedIngredients = this.findIngredientsUsedInEvents();\r\n        const used = (ing) => {\r\n            const uing = eventUsedIngredients.find(u => u.id === ing.id && u.type === ing.type);\r\n            if (!uing) return '';\r\n            return ing.qty < uing.qty ? ' used-short' : ' used-good';\r\n        }\r\n        const createItem = (item, index) => (\r\n            isEditing(item) ?\r\n                <React.Fragment key={index}>\r\n                    <div className={\"inventory-list-item-name\" + used(item)} onClick={() => this.setState({ edit: undefined })}>{item.name}</div>\r\n                    <MyInput className=\"inventory-list-item-qty\" type=\"number\" min=\"0\" max=\"9999\" defaultValue={item.qty} onPressEnter={(e) => onInputChange(e.target.value, item)} onBlur={(e) => onInputChange(e.target.value, item)} />\r\n                    {createDropdown(item)}\r\n                    <div className=\"inventory-list-item-deselect-div\" onClick={() => this.setState({ edit: undefined })} />\r\n                </React.Fragment>\r\n                :\r\n                <React.Fragment key={index}>\r\n                    <div className={'inventory-list-item-name' + used(item)} onClick={(e) => readOnlyClickHandler(item, e)}>{item.name}</div>\r\n                    <div className={'inventory-list-item-qty' + used(item)} onClick={(e) => readOnlyClickHandler(item, e)}>{item.qty || 0}</div>\r\n                    <div className={'inventory-list-item-type' + used(item)} onClick={(e) => readOnlyClickHandler(item, e)}>{item.type ? foodnet.measurements.find(m => m.id === item.type).name : \"(no measurement type)\"}</div>\r\n                    <div className={'inventory-list-item-deselect-div'} onClick={() => this.setState({ edit: undefined })} />\r\n                </React.Fragment>\r\n        );\r\n        return (\r\n            <div className=\"inventory\">\r\n                {this.renderToolbar()}\r\n                <div className=\"inventory-list\">\r\n                    {foodnet.ingredients.map(createItem)}\r\n                </div>\r\n                {this.renderModals()}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './About.css'\r\nimport { Card } from 'antd'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-page\">\r\n                <Card>\r\n                    {this.createBlurb()}\r\n                    {this.contact()}\r\n                    {this.donate()}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n    createBlurb() {\r\n        return (\r\n            <blockquote className=\"about-desc\">\r\n                The goal of this app is to make meal creation for yourself and your family easier, and to minimize the time spent doing so.\r\n                This is a completely 100% client-side app capable of going offline. No ads, spyware, or other bullonky.\r\n            </blockquote>\r\n        )\r\n    }\r\n    contact() {\r\n        // eslint-disable-next-line no-useless-concat\r\n        const email = \"harry.h.bowyer\" + \"@g\" + \"mail.com\";\r\n        const subject = \"subject=Foodnet Feedback\";\r\n        const body = \"body=Concerning your food app,%0A%0A%0A%0A\";\r\n        return (\r\n            <div className=\"email\"><a href={`mailto://${email}?${subject}&${body}`}>Contact Link (e-mail)</a></div>\r\n        )\r\n    }\r\n    donate() {\r\n        return (\r\n            <>\r\n                {/* <a target=\"_blank\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=K6K82W4JR45SN&currency_code=USD&source=url\">\r\n                    <img src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" />\r\n                </a> */}\r\n                <blockquote className=\"donate-desc\">\r\n                    Please consider buying me a coffee. It will help deprive me of sleep so that I can continue improving the app.\r\n                    <br />\r\n                    <span className=\"donate-desc-2\">For now, email me using the link above if you wish to motivate me with material objects. Just knowing you are willing to do so helps. I'm in the process of figuring out how to filter funds through <b>The Man</b>.</span>\r\n                </blockquote>\r\n            </>\r\n        )\r\n    }\r\n}","export default function() {\r\n    const names = [\"ingredients\", \"measurements\", \"recipes\", \"listDays\", \"events\", \"importUrls\", \"plannerDates\", \"plannerCheckedItems\", \"customSort\", \"customSortOrder\"];\r\n    window.foodnet = {\r\n        sync: () => {\r\n            names.forEach(it => localStorage.setItem(it, JSON.stringify(window.foodnet[it])));\r\n        }\r\n    };\r\n    names.forEach(it => {\r\n        try { window.foodnet[it] = JSON.parse(localStorage.getItem(it)) } catch (e) { console.error(e) }\r\n    });\r\n    names.forEach(it => {\r\n        if (window.foodnet[it] === undefined || window.foodnet[it] === null) {\r\n            window.foodnet[it] = [];\r\n        }\r\n    })\r\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport RecipeApp from './recipe/RecipeApp'\nimport TestRecipeForm from './manual-test/TestRecipeForm'\nimport loader from './loaders/LocalStorageLoader'\nimport AppHeader from './AppHeader'\nimport './App.css';\nimport ImportExport from './admin/ImportExport'\nimport Reports from './reports/Reports';\nimport Planner from './planner/Planner'\nimport Shopper from './shopper/Shopper'\nimport Inventory from './inventory/Inventory'\nimport About from './about/About'\n\nloader();\n\nexport default function () {\n  return (\n    <HashRouter hashType=\"noslash\">\n      <AppHeader />\n      <Route exact path=\"/ImportExport\" component={ImportExport} />\n      <Route exact path=\"/TestRecipeForm\" component={TestRecipeForm} />\n      <Route exact path=\"/Reports\" component={Reports} />\n      <Route exact path=\"/Planner\" component={Planner} />\n      <Route exact path=\"/Shopper\" component={Shopper} />\n      <Route exact path=\"/Inventory\" component={Inventory} />\n      <Route exact path=\"/About\" component={About} />\n      <Route exact path=\"/\" component={RecipeApp} />\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}