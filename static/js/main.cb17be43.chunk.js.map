{"version":3,"sources":["recipe/RecipeList.jsx","recipe/RecipeToolbar.jsx","recipe/IngredientForm.jsx","recipe/TypeForm.jsx","recipe/RecipeForm.jsx","recipe/RecipeApp.jsx","manual-test/TestRecipeForm.jsx","AppHeader.jsx","loaders/ExcelLoader.js","admin/ImportExport.jsx","reports/Reports.jsx","planner/Planner.jsx","loaders/LocalStorageLoader.js","App.jsx","serviceWorker.js","index.js"],"names":["className","window","foodnet","recipes","sort","a","b","name","toLowerCase","map","r","createRecipe","key","id","selected","onClick","props","select","React","Component","showModal","disabled","this","delete","state","isNameUnique","takenNames","ingredients","it","edit","filter","indexOf","submit","find","close","push","length","Math","max","sync","labelCol","xs","span","sm","wrapperCol","renderPicker","Item","label","validateStatus","hasFeedback","help","undefined","autoFocus","value","placeholder","onChange","v","setState","target","onPressEnter","validate","type","toString","Number","i","Option","measurements","recipe","renderConfigMenu","renderMultichooser","renderTable","TextArea","desc","autosize","minRows","maxRows","validateForm","concat","newId","renderModal","renderTModal","overlay","e","modal","tmodal","Divider","width","visible","footer","onCancel","wrapFormItemOnError","cmp","validation","errorText","columns","title","dataIndex","render","qty","filterOption","inputValue","option","children","inp","String","z","m","data","dataSource","pagination","rowKey","mode","values","ids","idsToKeep","idsToAdd","it2","it3","labelInValue","item","renderToolbar","renderList","forceUpdate","handleDelete","maskClosable","keyboard","withRouter","AppHeader","history","handleClick","selectedKeys","path","location","pathname","substring","findSelectionFromRoute","theme","twoToneColor","filename","allowedFileExtensions","File","FileReader","FileList","Blob","saveModal","loadModal","onOk","wb","XLSX","utils","book_new","book_append_sheet","json_to_sheet","ingredientsJson","JSON","stringify","events","writeFile","save","getFilename","okButtonProps","file","fileReader","onload","input","read","sheet_to_json","Sheets","Recipes","Ingredients","Measurements","Events","parse","load","result","readAsArrayBuffer","accept","join","files","endsWith","Sider","Layout","Content","menu","collapsible","renderMenu","renderSelectedMenuItem","renderCookingReferenceReport","renderCookingReferenceReportPage2","renderTopFavoritesReport","defaultSelectedKeys","defaultOpenKeys","style","height","SubMenu","check","r1checkedKeys","checkable","onSelect","onCheck","expandedKeys","checkedKeys","TreeNode","listDays","isInteger","renderCalendar","renderAddListItemModal","Group","valid","eventid","date","moment","add","dayOffset","format","defaultValue","createList","color","createItemsForDay","dot","addForDay","Array","from","day","dateCellRender","listData","content","getListData","status","text","names","forEach","localStorage","setItem","getItem","loader","Boolean","hostname","match","ReactDOM","hashType","exact","component","ImportExport","TestRecipeForm","Reports","Planner","RecipeApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb17be43.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RecipeList.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (<div className=\"recipe-list\">\r\n            {window.foodnet.recipes.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(r => this.createRecipe(r))}\r\n        </div>)\r\n    }\r\n\r\n    createRecipe(r) {\r\n        return (\r\n            <div key={r.id} className={\"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onClick={() => { window.foodnet.selected = r.id; this.props.select(r.id); }}\r\n            >\r\n                {r.name}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './RecipeToolbar.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"recipe-toolbar\">\r\n                <Button onClick={() => this.props.showModal('add')}>Add</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.showModal('edit')}>Edit</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.delete()}>Delete</Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.ingredients.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.ingredients.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.ingredients.find(it => it.id === this.state.id);\r\n                i.name = this.state.name;\r\n                this.props.close();\r\n            }\r\n            else {\r\n                window.foodnet.ingredients.push({\r\n                    id: window.foodnet.ingredients.length === 0 ? 1 : Math.max(...window.foodnet.ingredients.map(it => it.id)) + 1,\r\n                    name: this.state.name,\r\n                });\r\n                window.foodnet.sync();\r\n                this.props.close();\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        //FIXME: usage checker\r\n                        window.foodnet.ingredients = window.foodnet.ingredients.filter(it => it.id !== this.state.id)\r\n                        window.foodnet.sync()\r\n                        this.props.close()\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing ingredient\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.ingredients.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.ingredients.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.measurements.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.measurements.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.measurements.find(it => it.id === this.state.id);\r\n                i.name = this.state.name;\r\n            }\r\n            else {\r\n                window.foodnet.measurements.push({\r\n                    id: window.foodnet.measurements.length === 0 ? 1 : Math.max(...window.foodnet.measurements.map(it => it.id)) + 1,\r\n                    name: this.state.name,\r\n                });\r\n            }\r\n            this.props.close();\r\n            window.foodnet.sync();\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        //FIXME: usage checker\r\n                        window.foodnet.measurements = window.foodnet.measurements.filter(it => it.id !== this.state.id)\r\n                        window.foodnet.sync()\r\n                        this.props.close()\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing measurement\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.measurements.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.measurements.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Dropdown, Menu, Select, Modal, Icon, Table } from 'antd';\r\nimport './RecipeForm.css';\r\nimport IngredientForm from './IngredientForm'\r\nimport TypeForm from './TypeForm'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        ingredients: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.edit && !this.state.name) {\r\n            const recipe = window.foodnet.recipes.find(r => r.id === this.props.edit);\r\n            this.setState({ ...recipe });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout} className=\"recipe-form\">\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        validateStatus={this.state.name ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name ? undefined : \"Should not be blank\"}\r\n                    >\r\n                        <Input placeholder=\"Enter a name\" value={this.state.name} onChange={(v) => this.setState({ name: v.target.value })} />\r\n                    </Form.Item>\r\n\r\n                    {this.renderConfigMenu()}\r\n\r\n                    {this.renderMultichooser()}\r\n                    {this.renderTable()}\r\n                    <Form.Item className=\"instructions\" label=\"Instructions\">\r\n                        <Input.TextArea\r\n                            value={this.state.desc}\r\n                            autosize={{ minRows: 2, maxRows: 6 }}\r\n                            onChange={v => this.setState({ desc: v.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validateForm()} onClick={() => {\r\n                        if (this.state.id) {\r\n                            window.foodnet.recipes = window.foodnet.recipes.filter(it => it.id !== this.state.id).concat({ ...this.state });\r\n                        }\r\n                        else {\r\n                            const newId = window.foodnet.recipes.length === 0 ? 1 : Math.max(...window.foodnet.recipes.map(r => r.id)) + 1;\r\n                            window.foodnet.recipes.push({ ...this.state, id: newId });\r\n                        }\r\n                        window.foodnet.sync();\r\n                        this.props.close();\r\n                    }}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {this.renderModal()}\r\n                {this.renderTModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderConfigMenu() {\r\n        return (\r\n            <div className=\"config\">\r\n                Configure Ingredients/Measurements\r\n                <Dropdown overlay={\r\n                    <Menu onClick={(e) => {\r\n                        switch (e.key) {\r\n                            case \"1\":\r\n                                this.setState({ modal: 'add' })\r\n                                break;\r\n                            case \"2\":\r\n                                this.setState({ modal: 'edit' })\r\n                                break;\r\n                            case \"3\":\r\n                                this.setState({ tmodal: 'add' })\r\n                                break;\r\n                            case \"4\":\r\n                                this.setState({ tmodal: 'edit' })\r\n                                break;\r\n                            default:\r\n                        }\r\n                    }}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"plus\" />Create New Ingredient\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"edit\" /> Edit Existing Ingredients\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"plus\" /> Create New Measurement\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"edit\" /> Edit Existing Measurements\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }>\r\n                    <Icon type=\"setting\" className=\"setting-icon\" />\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })}>\r\n                <IngredientForm edit={this.state.modal === 'edit' ? true : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTModal() {\r\n        return this.state.tmodal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ tmodal: undefined })}>\r\n                <TypeForm edit={this.state.tmodal === 'edit' ? true : undefined} close={() => this.setState({ tmodal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTable() {\r\n        const wrapFormItemOnError = (cmp, validation, errorText) => {\r\n            if (!validation) {\r\n                return (\r\n                    <Form.Item validateStatus=\"error\" help={errorText}>\r\n                        {cmp}\r\n                    </Form.Item>\r\n                )\r\n            }\r\n            return cmp;\r\n        };\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                render: id => {\r\n                    const i = window.foodnet.ingredients.find(it => it.id === id);\r\n                    return <div>{i.name}</div>\r\n                }\r\n            },\r\n            {\r\n                title: 'Amount',\r\n                dataIndex: 'id',\r\n                key: 'qty',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Input type=\"number\" value={i.qty} onChange={v => {\r\n                            this.setState({\r\n                                ingredients: this.state.ingredients.filter(it => it.id !== id).concat([{\r\n                                    ...this.state.ingredients.find(it => it.id === id),\r\n                                    qty: v.target.value\r\n                                }])\r\n                            })\r\n                        }} />, i.qty, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'id',\r\n                key: 'type',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Select\r\n                            placeholder=\"Type\"\r\n                            filterOption={(inputValue, option) => {\r\n                                const name = option.props.children;\r\n                                const inp = typeof inputValue === 'string' || inputValue instanceof String ? inputValue : inputValue.toString();\r\n                                return (name || \"\").toLowerCase().indexOf((inp || \"\").toLowerCase());\r\n                            }}\r\n                            value={i.type ? i.type.toString() : undefined}\r\n                            onChange={(v) => {\r\n                                this.setState({\r\n                                    ingredients: this.state.ingredients\r\n                                        .filter(z => z.id !== i.id)\r\n                                        .concat(this.state.ingredients\r\n                                            .filter(z => z.id === i.id)\r\n                                            .map(z => ({ ...z, type: Number(v) })))\r\n                                })\r\n                            }}\r\n                        >\r\n                            {window.foodnet.measurements\r\n                                .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                                .map(m => <Select.Option key={m.id}>{m.name}</Select.Option>)}\r\n                        </Select>, i.type, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n        ];\r\n        const data = this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n        return this.state.ingredients.length > 0 && (\r\n            <Table columns={columns} dataSource={data} pagination={false} rowKey=\"id\" />\r\n        );\r\n    }\r\n\r\n    renderMultichooser() {\r\n        return (\r\n            <Select\r\n                className=\"multi-chooser\"\r\n                mode=\"multiple\"\r\n                placeholder={window.foodnet.ingredients.length === 0 ? \"Use the gear menu to create new ingredients\" : \"Please select\"}\r\n                value={this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => ({ key: it.id }))}\r\n                disabled={window.foodnet.ingredients.length === 0}\r\n                onChange={(values) => {\r\n                    const ids = values.map(it => Number(it.key));\r\n                    const idsToKeep = this.state.ingredients.map(it => it.id).filter(it => ids.indexOf(it) !== -1);\r\n                    const idsToAdd = ids.filter(id => this.state.ingredients.map(it => it.id).indexOf(id) === -1);\r\n                    this.setState({\r\n                        ingredients: this.state.ingredients\r\n                            .filter(it => idsToKeep.indexOf(it.id) !== -1)\r\n                            .concat(\r\n                                idsToAdd.map(it2 => (\r\n                                    { ...window.foodnet.ingredients.find(it3 => it3.id === it2) }\r\n                                ))\r\n                            )\r\n                            .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    })\r\n                }}\r\n                labelInValue={true}\r\n            >\r\n                {window.foodnet.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => (\r\n                    <Select.Option key={it.id} value={it.id}>{it.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n\r\n    renderIngAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'add' })\r\n            }}>Create New Ingredient</Button>\r\n        );\r\n    }\r\n\r\n    renderIngEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'edit' })\r\n            }}>Edit Existing Ingredients</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'add' })\r\n            }}>Create New Measurement</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'edit' })\r\n            }}>Edit Existing Measurements</Button>\r\n        );\r\n    }\r\n\r\n    validateForm() {\r\n        const isValid = this.state.name && this.state.name.length > 0 && this.state.ingredients && this.state.ingredients.length > 0;\r\n        if (!isValid) return true;\r\n        for (var i in (this.state.ingredients || [])) {\r\n            const item = this.state.ingredients[i];\r\n            if (!item.type || !item.qty) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport RecipeToolbar from './RecipeToolbar'\r\nimport {Modal} from 'antd'\r\nimport RecipeForm from './RecipeForm'\r\nimport './RecipeApp.css'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.renderToolbar()}\r\n                {this.renderList()}\r\n                {this.renderModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderList() {\r\n        return <RecipeList selected={window.foodnet.selected} select={(id) => this.forceUpdate()} />;\r\n    }\r\n\r\n    renderToolbar() {\r\n        return <RecipeToolbar selected={window.foodnet.selected} showModal={(a) => this.setState({modal: a})} delete={() => this.handleDelete()}/>\r\n    }\r\n\r\n    handleDelete() {\r\n        window.foodnet.recipes = window.foodnet.recipes.filter(r => r.id !== window.foodnet.selected);\r\n        window.foodnet.selected = undefined;\r\n        window.foodnet.sync();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({modal: undefined})} maskClosable={false} keyboard={true}>\r\n                <RecipeForm edit={this.state.modal === 'edit' ? window.foodnet.selected : undefined} close={() => this.setState({modal: undefined})}/>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RecipeForm from '../recipe/RecipeForm'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <RecipeForm/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './AppHeader.css';\r\nimport { Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(props => <AppHeader {...props} />);\r\n\r\nclass AppHeader extends React.Component {\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n        const handleClick = (key) => {\r\n            switch (key) {\r\n                case \"recipes\":\r\n                    this.props.history.push(\"\");\r\n                    break;\r\n                case \"planner\":\r\n                    this.props.history.push(\"Planner\");\r\n                    break;\r\n                case \"importexport\":\r\n                    this.props.history.push(\"ImportExport\");\r\n                    break;\r\n                case \"reports\":\r\n                    this.props.history.push(\"Reports\");\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        const findSelectionFromRoute = () => {\r\n            const path = this.props.location.pathname.substring(1)\r\n            switch (path) {\r\n                case \"ImportExport\":\r\n                case 'Reports':\r\n                case 'Planner':\r\n                    return path.toLowerCase()\r\n                default:\r\n                    return \"recipes\"\r\n            }\r\n        }\r\n        return (\r\n            <Menu onClick={(e) => handleClick(e.key)} selectedKeys={[findSelectionFromRoute()]} mode=\"horizontal\">\r\n                <Menu.Item key=\"recipes\">\r\n                    <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    Recipes\r\n                </Menu.Item>\r\n                <Menu.Item key=\"planner\">\r\n                    <Icon type=\"calendar\" theme=\"twoTone\" />\r\n                    Planner\r\n                </Menu.Item>\r\n                <Menu.Item key=\"reports\">\r\n                    <Icon type=\"align-left\" />\r\n                    Reports\r\n                </Menu.Item>\r\n                <Menu.Item key=\"importexport\">\r\n                    <Icon type=\"setting\" />\r\n                    Import/Export\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}","import XLSX from 'xlsx';\r\n\r\nexport const load = (input) => {\r\n    const wb = XLSX.read(input, { type: 'array' });\r\n    const r = XLSX.utils.sheet_to_json(wb.Sheets.Recipes);\r\n    const i = XLSX.utils.sheet_to_json(wb.Sheets.Ingredients);\r\n    const m = XLSX.utils.sheet_to_json(wb.Sheets.Measurements);\r\n    const e = XLSX.utils.sheet_to_json(wb.Sheets.Events);\r\n    window.foodnet.recipes = r.map(it => ({ ...it, ingredients: JSON.parse(it.ingredientsJson) }));\r\n    window.foodnet.ingredients = i;\r\n    window.foodnet.measurements = m;\r\n    window.foodnet.events = e;\r\n    window.foodnet.sync();\r\n}\r\n\r\nexport const save = (filename) => {\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.recipes.map(it => ({ ...it, ingredientsJson: JSON.stringify(it.ingredients) }))), \"Recipes\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.ingredients), \"Ingredients\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.measurements), \"Measurements\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.events), \"Events\");\r\n    XLSX.writeFile(wb, filename || 'foodnet.xlsx');\r\n}","import React from 'react';\r\nimport { save, load } from '../loaders/ExcelLoader';\r\nimport { Modal, Button, Form, Input } from 'antd';\r\nimport './ImportExport.css';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        filename: 'backup.xlsx',\r\n        allowedFileExtensions: [\r\n            'xlsx', 'xlsm', 'xlsb', 'xml', 'xls', 'xlw', 'csv', 'txt', 'dif', 'sylk', 'slk', 'prn', 'ods', 'fods', 'dbf', 'eth'\r\n        ].map(it => '.' + it),\r\n    }\r\n    render() {\r\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\r\n            return (\r\n                <div>\r\n                    Error: your browser does not support the File API specification.\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"import-export\">\r\n                <Button onClick={() => this.setState({ saveModal: true })}>\r\n                    Export To Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ loadModal: true })}>\r\n                    Import From Excel\r\n                </Button>\r\n                {this.state.saveModal && (\r\n                    <Modal className=\"save-modal\" visible={true} onCancel={() => this.setState({ saveModal: false })} onOk={() => { save(this.getFilename()); this.setState({ saveModal: false }) }}>\r\n                        <Form.Item label=\"File Name\">\r\n                            <Input value={this.state.filename} onChange={v => this.setState({ filename: v.target.value })} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.loadModal && (\r\n                    <Modal className=\"load-modal\" visible={true} onCancel={() => this.setState({ loadModal: false })} okButtonProps={{ disabled: !this.state.file }} onOk={() => {\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onload = function (e) {\r\n                            load(e.target.result);\r\n                        };\r\n                        fileReader.readAsArrayBuffer(this.state.file);\r\n                        this.setState({ loadModal: false })\r\n                    }}>\r\n                        <Form.Item label=\"\">\r\n                            <Input type=\"file\" id=\"file\" name=\"file\" accept={this.state.allowedFileExtensions.join(',')} onChange={e => {\r\n                                this.setState({ file: e.target.files[0] })\r\n                            }} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getFilename() {\r\n        const { filename } = this.state;\r\n        for (let e in this.state.allowedFileExtensions) {\r\n            if (filename.endsWith(this.state.allowedFileExtensions[e])) {\r\n                return filename;\r\n            }\r\n        }\r\n        return filename + \".xlsx\";\r\n    }\r\n}","import React from 'react';\r\nimport './Reports.css';\r\nimport { Menu, Icon, Layout, Tree, Button } from 'antd';\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        menu: 'r1'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"reports-layout\">\r\n                <Sider collapsible={true}>\r\n                    {this.renderMenu()}\r\n                </Sider>\r\n                <Content>\r\n                    {this.renderSelectedMenuItem()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    renderSelectedMenuItem() {\r\n        switch (this.state.menu) {\r\n            case \"r1\": return this.renderCookingReferenceReport()\r\n            case \"r1p2\": return this.renderCookingReferenceReportPage2()\r\n            case \"r2\": return this.renderTopFavoritesReport()\r\n            default: return undefined\r\n        }\r\n    }\r\n\r\n    renderMenu() {\r\n        return (\r\n            <Menu\r\n                onClick={(e) => this.setState({ menu: e.key })}\r\n                defaultSelectedKeys={['r1']}\r\n                defaultOpenKeys={['r']}\r\n                mode=\"inline\" style={{ height: '100%' }}\r\n            >\r\n                <Menu.SubMenu\r\n                    key=\"r\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                            <span>Recipe Reports</span>\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"r1\">Cooking Reference</Menu.Item>\r\n                    <Menu.Item key=\"r2\">Top Favorites</Menu.Item>\r\n                </Menu.SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderCookingReferenceReport() {\r\n        const check = (e) => {\r\n            this.setState({ r1checkedKeys: e })\r\n        };\r\n        return (\r\n            <div className=\"recipe-select\">\r\n                <Tree\r\n                    checkable\r\n                    onSelect={(e) => check(e)}\r\n                    onCheck={(e) => check(e)}\r\n                    expandedKeys={['0-0']}\r\n                    checkedKeys={this.state.r1checkedKeys}\r\n                >\r\n                    <Tree.TreeNode title=\"parent 1\" key=\"0-0\">\r\n                        {window.foodnet.recipes.map(r => (\r\n                            <Tree.TreeNode title={r.name} key={r.id} />\r\n                        ))}\r\n                    </Tree.TreeNode>\r\n                </Tree>\r\n                <Button disabled={!this.state.r1checkedKeys || this.state.r1checkedKeys.length < 1} onClick={() => { this.setState({ menu: 'r1p2' }) }}>Generate Report</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCookingReferenceReportPage2() {\r\n        return (\r\n            <div className=\"recipe-report\">\r\n                {window.foodnet.recipes.filter(it => this.state.r1checkedKeys.indexOf(it.id.toString()) !== -1).map(r => (\r\n                    <div className=\"recipe\" key={r.id}>\r\n                        <div className=\"recipe-name\">Recipe Name:</div>\r\n                        <div>{r.name}</div>\r\n                        <div className=\"desc-header\">Instructions:</div>\r\n                        <div className=\"desc-body\">{r.desc || \"None\"}</div>\r\n                        <div className=\"ing\">Ingredients:</div>\r\n                        <div className=\"ingredient-list\">\r\n                            {r.ingredients.map(i => (\r\n                                <div key={i.id}>\r\n                                    <div>\r\n                                        {window.foodnet.ingredients.find(it => it.id === i.id).name}, {i.qty} {window.foodnet.measurements.find(it => it.id === i.type).name}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTopFavoritesReport() {\r\n        return <div>Coming Soon</div>\r\n    }\r\n}","import React from 'react';\r\nimport './Planner.css';\r\nimport { Carousel, Card, Calendar, Badge, Radio, Timeline, Form, Button, Input, Dropdown, Menu, AutoComplete, Select, Modal, DatePicker, TimePicker, Cascader, InputNumber, Icon, Table, } from 'antd';\r\nimport moment from 'moment';\r\nimport { validate } from '@babel/types';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        mode: \"list\",\r\n        listDays: Number.isInteger(window.foodnet.listDays) ? window.foodnet.listDays : 7,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"planner\">\r\n                    {this.renderToolbar()}\r\n                    {this.state.mode === \"calendar\" && this.renderCalendar()}\r\n                    {this.state.mode === \"list\" && this.renderList()}\r\n                </div>\r\n                {this.renderAddListItemModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderToolbar() {\r\n        return (\r\n            <div className=\"planner-toolbar\">\r\n                <Radio.Group onChange={(e) => this.setState({ mode: e.target.value })} value={this.state.mode}>\r\n                    <Radio value={\"list\"}>List View</Radio>\r\n                    <Radio value={\"calendar\"}>Calendar View</Radio>\r\n                </Radio.Group>\r\n                {this.state.mode === \"list\" && (\r\n                    <Input type=\"number\" value={this.state.listDays} onChange={e => {\r\n                        if (e.target.value.length === 0) {\r\n                            this.setState({ listDays: undefined })\r\n                        }\r\n                        else {\r\n                            let v = Number(e.target.value)\r\n                            if (v < 0) v = 0;\r\n                            this.setState({ listDays: v })\r\n                            window.foodnet.listDays = v\r\n                            window.foodnet.sync()\r\n                        }\r\n                    }} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAddListItemModal() {\r\n        const valid = () => {\r\n            return this.state.recipe;\r\n        }\r\n        const submit = () => {\r\n            if (this.state.eventid) {\r\n                window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid).concat({\r\n                    id: this.state.eventid,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: this.state.qty || 1,\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            else {\r\n                window.foodnet.events.push({\r\n                    id: window.foodnet.events.length === 0 ? 1 : Math.max(...window.foodnet.events.map(e => e.id)) + 1,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: this.state.qty || 1,\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            window.foodnet.sync();\r\n            this.setState({\r\n                eventid: undefined,\r\n                recipe: undefined,\r\n                qty: undefined,\r\n                dayOffset: undefined,\r\n                modal: undefined,\r\n            })\r\n        }\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (this.state.modal === \"add-list-item\" || this.state.modal === \"edit-list-item\") && (\r\n            <Modal\r\n                className=\"list-item-modal\"\r\n                visible={true}\r\n                onCancel={() => this.setState({ modal: undefined })}\r\n                footer={[\r\n                    this.state.modal === \"edit-list-item\" && (\r\n                        <Button type=\"danger\" onClick={() => {\r\n                            window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid);\r\n                            window.foodnet.sync();\r\n                            this.setState({\r\n                                eventid: undefined,\r\n                                recipe: undefined,\r\n                                qty: undefined,\r\n                                dayOffset: undefined,\r\n                                modal: undefined,\r\n                            })\r\n                        }}>Delete Event</Button>\r\n                    ),\r\n                    <Button key=\"back\" onClick={() => this.setState({ modal: undefined })}>Cancel</Button>,\r\n                    <Button key=\"submit\" type=\"primary\" disabled={!valid()} onClick={() => submit()}>OK</Button>,\r\n                ]}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                        <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                            {window.foodnet.recipes.map(r => (\r\n                                <Select.Option key={r.id} value={r.id}>{r.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\">\r\n                        <Input\r\n                            autoFocus\r\n                            type=\"number\"\r\n                            defaultValue={1}\r\n                            value={this.state.qty}\r\n                            onChange={e => this.setState({ qty: e.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (valid()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderList() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const createItemsForDay = (dayOffset) => {\r\n            return window.foodnet.events\r\n            .filter(e => {\r\n                return moment().add(dayOffset, \"days\").format(now_s_format) === moment(e.date).format(now_s_format)\r\n            })\r\n            .sort((a, b) => a.id < b.id ? -1 : 1)\r\n            .map(e => (\r\n                <Timeline.Item color=\"green\" onClick={() => {\r\n                    this.setState({\r\n                        eventid: e.id,\r\n                        modal: \"edit-list-item\",\r\n                        dayOffset: dayOffset,\r\n                        recipe: e.recipe,\r\n                        qty: e.qty,\r\n                    })\r\n                }} >{e.qty} x {window.foodnet.recipes.find(r => r.id === e.recipe).name}</Timeline.Item>\r\n            ))\r\n        }\r\n        const addForDay = (dayOffset) => {\r\n            return <Timeline.Item onClick={() => {\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }} dot={<Icon type=\"plus-circle\" theme=\"twoTone\" twoToneColor=\"red\" />}>Add</Timeline.Item>;\r\n        }\r\n        const createList = (dayOffset) => {\r\n            return (\r\n                <Timeline key={dayOffset}>\r\n                    <Timeline.Item color=\"blue\"><b><u>{moment().add(dayOffset, 'days').format(\"dddd (MMM D)\")}</u></b></Timeline.Item>\r\n                    {createItemsForDay(dayOffset)}\r\n                    {addForDay(dayOffset)}\r\n                </Timeline>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"planner-list\">\r\n                {Array.from(Array(this.state.listDays)).map((z, day) => createList(day))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCalendar() {\r\n        function getListData(value) {\r\n            let listData;\r\n            switch (value.date()) {\r\n                case 8:\r\n                    listData = [\r\n                        { type: 'warning', content: 'This is warning event.' },\r\n                        { type: 'success', content: 'This is usual event.' },\r\n                    ];\r\n                    break;\r\n                case 10:\r\n                    listData = [\r\n                        { type: 'warning', content: 'This is warning event.' },\r\n                        { type: 'success', content: 'This is usual event.' },\r\n                        { type: 'error', content: 'This is error event.' },\r\n                    ];\r\n                    break;\r\n                case 15:\r\n                    listData = [\r\n                        { type: 'warning', content: 'This is warning event' },\r\n                        { type: 'success', content: 'This is very long usual event。。....' },\r\n                        { type: 'error', content: 'This is error event 1.' },\r\n                        { type: 'error', content: 'This is error event 2.' },\r\n                        { type: 'error', content: 'This is error event 3.' },\r\n                        { type: 'error', content: 'This is error event 4.' },\r\n                    ];\r\n                    break;\r\n                default:\r\n            }\r\n            return listData || [];\r\n        }\r\n        function dateCellRender(value) {\r\n            const listData = getListData(value);\r\n            return (\r\n                <ul className=\"events\">\r\n                    {listData.map(item => (\r\n                        <li key={item.content}>\r\n                            <Badge status={item.type} text={item.content} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Calendar dateCellRender={dateCellRender} />\r\n        );\r\n    }\r\n}","export default function() {\r\n    const names = [\"ingredients\", \"measurements\", \"recipes\", \"listDays\", \"events\"];\r\n    window.foodnet = {\r\n        sync: () => {\r\n            names.forEach(it => localStorage.setItem(it, JSON.stringify(window.foodnet[it])));\r\n        }\r\n    };\r\n    names.forEach(it => window.foodnet[it] = JSON.parse(localStorage.getItem(it)));\r\n    names.forEach(it => {\r\n        if (window.foodnet[it] === undefined || window.foodnet[it] === null) {\r\n            window.foodnet[it] = [];\r\n        }\r\n    })\r\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport RecipeApp from './recipe/RecipeApp'\nimport TestRecipeForm from './manual-test/TestRecipeForm'\nimport loader from './loaders/LocalStorageLoader'\nimport AppHeader from './AppHeader'\nimport './App.css';\nimport ImportExport from './admin/ImportExport'\nimport Reports from './reports/Reports';\nimport Planner from './planner/Planner'\n\nloader();\n\nexport default function () {\n  return (\n    <HashRouter hashType=\"noslash\">\n      <AppHeader />\n      <Route exact path=\"/ImportExport\" component={ImportExport} />\n      <Route exact path=\"/TestRecipeForm\" component={TestRecipeForm} />\n      <Route exact path=\"/Reports\" component={Reports} />\n      <Route exact path=\"/Planner\" component={Planner} />\n      <Route exact path=\"/\" component={RecipeApp} />\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}