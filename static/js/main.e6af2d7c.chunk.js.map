{"version":3,"sources":["recipe/RecipeList.jsx","recipe/RecipeToolbar.jsx","recipe/IngredientForm.jsx","admin/EntityUsageChecker.js","recipe/TypeForm.jsx","recipe/RecipeForm.jsx","recipe/RecipeApp.jsx","manual-test/TestRecipeForm.jsx","AppHeader.jsx","loaders/ExcelLoader.js","admin/ImportExport.jsx","reports/Reports.jsx","planner/Planner.jsx","shopper/Tags.jsx","shopper/Shopper.jsx","about/About.jsx","loaders/LocalStorageLoader.js","App.jsx","serviceWorker.js","index.js"],"names":["state","className","window","foodnet","recipes","sort","a","b","name","toLowerCase","map","r","createRecipe","key","id","selected","onClick","props","select","dataIndex","sortedInfo","this","handleSearch","selectedKeys","confirm","setState","searchText","cols","title","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","width","marginBottom","display","type","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","onFilterDropdownVisibleChange","visible","setTimeout","sorter","icount","sortOrder","columnKey","order","columns","dataSource","ingredients","length","pagination","rowKey","rowClassName","onRow","selectedRowKeys","filters","React","Component","showModal","disabled","delete","isNameUnique","takenNames","it","edit","filter","indexOf","submit","find","trim","close","push","Math","max","sync","labelCol","xs","span","sm","wrapperCol","renderPicker","Item","label","validateStatus","hasFeedback","help","autoFocus","v","validate","i","message","error","Number","Option","measurements","recipe","renderConfigMenu","renderMultichooser","renderTable","TextArea","desc","autosize","minRows","maxRows","validateForm","concat","newId","renderModal","renderTModal","trigger","overlay","modal","tmodal","Divider","footer","onCancel","wrapFormItemOnError","cmp","validation","errorText","render","qty","filterOption","inputValue","option","children","inp","String","z","m","data","mode","values","ids","idsToKeep","idsToAdd","it2","it3","labelInValue","item","renderToolbar","renderList","forceUpdate","handleDelete","events","maskClosable","keyboard","withRouter","AppHeader","history","handleClick","path","location","pathname","substring","findSelectionFromRoute","theme","twoToneColor","load","input","wb","XLSX","read","utils","sheet_to_json","Sheets","Recipes","JSON","parse","ingredientsJson","Ingredients","tags","tagsJson","Measurements","Events","filename","allowedFileExtensions","File","FileReader","FileList","Blob","saveModal","loadModal","urlModal","onOk","book_new","book_append_sheet","json_to_sheet","stringify","writeFile","save","getFilename","okButtonProps","file","fileReader","onload","result","readAsArrayBuffer","accept","join","files","validateUrl","url","urlError","startsWith","axios","get","replace","dropboxHack","responseType","then","status","response","statusText","importUrls","console","log","catch","endsWith","Sider","Layout","Content","menu","collapsible","renderMenu","renderSelectedMenuItem","renderCookingReferenceReport","renderCookingReferenceReportPage2","renderTopFavoritesReport","defaultSelectedKeys","defaultOpenKeys","height","SubMenu","check","r1checkedKeys","checkable","onSelect","onCheck","expandedKeys","checkedKeys","TreeNode","listDays","isInteger","renderCalendar","renderAddListItemModal","Group","valid","eventid","date","moment","add","dayOffset","format","defaultValue","createList","createItemsForDay","dot","addForDay","Array","from","day","calMode","onPanelChange","dateCellRender","listData","text","startOf","diff","eid","content","placement","event","stopPropagation","monthCellRender","month","year","tagColors","handleInputConfirm","inputVisible","tag","index","isLongTag","tagElem","closable","onClose","remove","slice","onBlur","focus","background","borderStyle","RangePicker","DatePicker","checkedItems","filteredTags","dates","plannerDates","plannerCheckedItems","customSort","customSortOrder","updateTags","checked","t","getTags","createMenu","onDragEnd","fromIndex","toIndex","newTags","splice","onVisibleChange","dropdownvisible","hideTags","createIngredientList","nodeSelector","handleSelector","forEach","ing","localeCompare","ai","bi","list","isBetween","multiplier","l","newIndex","deleted","sortedTags","typename","found","t2","findHighestTag","reduce","highestTag","ti","hi","aTag","bTag","createBlurb","contact","donate","href","names","localStorage","setItem","getItem","loader","Boolean","hostname","match","ReactDOM","hashType","exact","component","ImportExport","TestRecipeForm","Reports","Planner","Shopper","About","RecipeApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6af2d7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RecipeList.css';\r\nimport { Table, Input, Button, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render2() {\r\n        return (<div className=\"recipe-list\">\r\n            {window.foodnet.recipes.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(r => this.createRecipe(r))}\r\n        </div>)\r\n    }\r\n\r\n    createRecipe2(r) {\r\n        return (\r\n            <div key={r.id} className={\"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onClick={() => { window.foodnet.selected = r.id; this.props.select(r.id); }}\r\n            >\r\n                {r.name}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const sortedInfo = this.state.sortedInfo || {};\r\n        const handleSearch = (selectedKeys, confirm) => {\r\n            confirm();\r\n            this.setState({ searchText: selectedKeys[0] });\r\n        };\r\n        const handleReset = clearFilters => {\r\n            clearFilters();\r\n            this.setState({ searchText: '' });\r\n        };\r\n        const getColumnSearchProps = dataIndex => ({\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        ref={node => {\r\n                            this.searchInput = node;\r\n                        }}\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => handleSearch(selectedKeys, confirm)}\r\n                        style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm)}\r\n                        icon=\"search\"\r\n                        size=\"small\"\r\n                        style={{ width: 90, marginRight: 8 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>Reset</Button>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => (<Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />),\r\n            onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => this.searchInput.select());\r\n                }\r\n            },\r\n        })\r\n        const cols = [\r\n            {\r\n                title: 'Recipe Name',\r\n                dataIndex: 'name',\r\n                ...getColumnSearchProps('name')\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'type'\r\n            },\r\n            {\r\n                title: 'Ingredients',\r\n                dataIndex: 'icount',\r\n                sorter: (a, b) => a.icount < b.icount ? -1 : a.icount === b.icount ? 0 : 1,\r\n                sortOrder: sortedInfo.columnKey === 'icount' && sortedInfo.order,\r\n            },\r\n        ]\r\n        return (\r\n            <Table\r\n                columns={cols}\r\n                dataSource={window.foodnet.recipes\r\n                    .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    .map(r => ({\r\n                        ...r,\r\n                        type: 'Custom',\r\n                        icount: (r.ingredients || []).length\r\n                    }))\r\n                }\r\n                pagination={false}\r\n                rowKey={'id'}\r\n                rowClassName={(r) => \"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onRow={(r) => ({\r\n                    onClick: () => {\r\n                        window.foodnet.selected = r.id;\r\n                        this.props.select(r.id);\r\n                        this.setState({ selectedRowKeys: [r.id] });\r\n                    },\r\n                })}\r\n                onChange={(pagination, filters, sortedInfo) => {\r\n                    this.setState({ sortedInfo, });\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './RecipeToolbar.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"recipe-toolbar\">\r\n                <Button onClick={() => this.props.showModal('add')}>Add</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.showModal('edit')}>Edit</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.delete()}>Delete</Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport {isIngredientUsed} from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.ingredients.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.ingredients.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.ingredients.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n                this.props.close();\r\n            }\r\n            else {\r\n                window.foodnet.ingredients.push({\r\n                    id: window.foodnet.ingredients.length === 0 ? 1 : Math.max(...window.foodnet.ingredients.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n                window.foodnet.sync();\r\n                this.props.close();\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isIngredientUsed(this.state.id)) {\r\n                            message.error(\"This ingredient is still being used. Please remove, replace, or rename the ingredient where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.ingredients = window.foodnet.ingredients.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing ingredient\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.ingredients.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.ingredients.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","export const isIngredientUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.id === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isRecipeUsed = (id) => {\r\n    //FIXME: old events = add are you sure prompt\r\n    if (window.foodnet.events.find(e => e.recipe === id)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}  \r\n\r\nexport const isMeasurementUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.type === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport { isMeasurementUsed } from \"../admin/EntityUsageChecker\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.measurements.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.measurements.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.measurements.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n            }\r\n            else {\r\n                window.foodnet.measurements.push({\r\n                    id: window.foodnet.measurements.length === 0 ? 1 : Math.max(...window.foodnet.measurements.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n            }\r\n            this.props.close();\r\n            window.foodnet.sync();\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isMeasurementUsed(this.state.id)) {\r\n                            message.error(\"This measurement is still being used. Please remove, replace, or rename the measurement where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.measurements = window.foodnet.measurements.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing measurement\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.measurements.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.measurements.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Dropdown, Menu, Select, Modal, Icon, Table } from 'antd';\r\nimport './RecipeForm.css';\r\nimport IngredientForm from './IngredientForm'\r\nimport TypeForm from './TypeForm'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        ingredients: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.edit && !this.state.name) {\r\n            const recipe = window.foodnet.recipes.find(r => r.id === this.props.edit);\r\n            this.setState({ ...recipe });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout} className=\"recipe-form\">\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        validateStatus={this.state.name ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name ? undefined : \"Should not be blank\"}\r\n                    >\r\n                        <Input placeholder=\"Enter a name\" value={this.state.name} onChange={(v) => this.setState({ name: v.target.value })} />\r\n                    </Form.Item>\r\n\r\n                    {this.renderConfigMenu()}\r\n\r\n                    {this.renderMultichooser()}\r\n                    {this.renderTable()}\r\n                    <Form.Item className=\"instructions\" label=\"Instructions\">\r\n                        <Input.TextArea\r\n                            value={this.state.desc}\r\n                            autosize={{ minRows: 2, maxRows: 6 }}\r\n                            onChange={v => this.setState({ desc: v.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validateForm()} onClick={() => {\r\n                        if (this.state.id) {\r\n                            window.foodnet.recipes = window.foodnet.recipes.filter(it => it.id !== this.state.id).concat({ ...this.state });\r\n                        }\r\n                        else {\r\n                            const newId = window.foodnet.recipes.length === 0 ? 1 : Math.max(...window.foodnet.recipes.map(r => r.id)) + 1;\r\n                            window.foodnet.recipes.push({ ...this.state, name: this.state.name.trim(), id: newId });\r\n                        }\r\n                        window.foodnet.sync();\r\n                        this.props.close();\r\n                    }}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {this.renderModal()}\r\n                {this.renderTModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderConfigMenu() {\r\n        return (\r\n            <div className=\"config\">\r\n                Configure Ingredients/Measurements\r\n                <Dropdown trigger={['click']} overlay={\r\n                    <Menu onClick={(e) => {\r\n                        switch (e.key) {\r\n                            case \"1\":\r\n                                this.setState({ modal: 'add' })\r\n                                break;\r\n                            case \"2\":\r\n                                this.setState({ modal: 'edit' })\r\n                                break;\r\n                            case \"3\":\r\n                                this.setState({ tmodal: 'add' })\r\n                                break;\r\n                            case \"4\":\r\n                                this.setState({ tmodal: 'edit' })\r\n                                break;\r\n                            default:\r\n                        }\r\n                    }}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"plus\" />Create New Ingredient\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"edit\" /> Edit Existing Ingredients\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"plus\" /> Create New Measurement\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"edit\" /> Edit Existing Measurements\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }>\r\n                    <Icon type=\"setting\" className=\"setting-icon\" />\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })}>\r\n                <IngredientForm edit={this.state.modal === 'edit' ? true : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTModal() {\r\n        return this.state.tmodal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ tmodal: undefined })}>\r\n                <TypeForm edit={this.state.tmodal === 'edit' ? true : undefined} close={() => this.setState({ tmodal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTable() {\r\n        const wrapFormItemOnError = (cmp, validation, errorText) => {\r\n            return (\r\n                <Form.Item validateStatus={!validation ? \"error\" : \"success\"} help={!validation ? errorText : \"\"}>\r\n                    {cmp}\r\n                </Form.Item>\r\n            )\r\n        };\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                render: id => {\r\n                    const i = window.foodnet.ingredients.find(it => it.id === id);\r\n                    return <div>{i.name}</div>\r\n                }\r\n            },\r\n            {\r\n                title: 'Amount',\r\n                dataIndex: 'id',\r\n                key: 'qty',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Input type=\"number\" value={i.qty} onChange={v => {\r\n                            this.setState({\r\n                                ingredients: this.state.ingredients.filter(it => it.id !== id).concat([{\r\n                                    ...this.state.ingredients.find(it => it.id === id),\r\n                                    qty: v.target.value\r\n                                }])\r\n                            })\r\n                        }} />, i.qty, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'id',\r\n                key: 'type',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Select\r\n                            placeholder=\"Type\"\r\n                            filterOption={(inputValue, option) => {\r\n                                const name = option.props.children;\r\n                                const inp = typeof inputValue === 'string' || inputValue instanceof String ? inputValue : inputValue.toString();\r\n                                return (name || \"\").toLowerCase().indexOf((inp || \"\").toLowerCase());\r\n                            }}\r\n                            value={i.type ? i.type.toString() : undefined}\r\n                            onChange={(v) => {\r\n                                this.setState({\r\n                                    ingredients: this.state.ingredients\r\n                                        .filter(z => z.id !== i.id)\r\n                                        .concat(this.state.ingredients\r\n                                            .filter(z => z.id === i.id)\r\n                                            .map(z => ({ ...z, type: Number(v) })))\r\n                                })\r\n                            }}\r\n                        >\r\n                            {window.foodnet.measurements\r\n                                .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                                .map(m => <Select.Option key={m.id}>{m.name}</Select.Option>)}\r\n                        </Select>, i.type, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n        ];\r\n        const data = this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n        return this.state.ingredients.length > 0 && (\r\n            <Table columns={columns} dataSource={data} pagination={false} rowKey=\"id\" />\r\n        );\r\n    }\r\n\r\n    renderMultichooser() {\r\n        return (\r\n            <Select\r\n                className=\"multi-chooser\"\r\n                mode=\"multiple\"\r\n                placeholder={window.foodnet.ingredients.length === 0 ? \"Use the gear menu to create new ingredients\" : \"Please select\"}\r\n                value={this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => ({ key: it.id }))}\r\n                disabled={window.foodnet.ingredients.length === 0}\r\n                onChange={(values) => {\r\n                    const ids = values.map(it => Number(it.key));\r\n                    const idsToKeep = this.state.ingredients.map(it => it.id).filter(it => ids.indexOf(it) !== -1);\r\n                    const idsToAdd = ids.filter(id => this.state.ingredients.map(it => it.id).indexOf(id) === -1);\r\n                    this.setState({\r\n                        ingredients: this.state.ingredients\r\n                            .filter(it => idsToKeep.indexOf(it.id) !== -1)\r\n                            .concat(\r\n                                idsToAdd.map(it2 => (\r\n                                    { ...window.foodnet.ingredients.find(it3 => it3.id === it2) }\r\n                                ))\r\n                            )\r\n                            .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    })\r\n                }}\r\n                labelInValue={true}\r\n            >\r\n                {window.foodnet.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => (\r\n                    <Select.Option key={it.id} value={it.id}>{it.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n\r\n    renderIngAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'add' })\r\n            }}>Create New Ingredient</Button>\r\n        );\r\n    }\r\n\r\n    renderIngEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'edit' })\r\n            }}>Edit Existing Ingredients</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'add' })\r\n            }}>Create New Measurement</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'edit' })\r\n            }}>Edit Existing Measurements</Button>\r\n        );\r\n    }\r\n\r\n    validateForm() {\r\n        const isValid = this.state.name && this.state.name.trim().length > 0 && this.state.ingredients && this.state.ingredients.length > 0;\r\n        if (!isValid) return true;\r\n        for (var i in (this.state.ingredients || [])) {\r\n            const item = this.state.ingredients[i];\r\n            if (!item.type || !item.qty) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport RecipeToolbar from './RecipeToolbar'\r\nimport { Modal, message } from 'antd'\r\nimport RecipeForm from './RecipeForm'\r\nimport './RecipeApp.css'\r\nimport { isRecipeUsed } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    render() {\r\n        //TODO: split add button, to: add custom recipe, add prepared food, add packaged food\r\n        //TODO: allow another recipe to be an ingredient?\r\n        return (\r\n            <>\r\n                {this.renderToolbar()}\r\n                {this.renderList()}\r\n                {this.renderModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderList() {\r\n        return <RecipeList selected={window.foodnet.selected} select={(id) => this.forceUpdate()} />;\r\n    }\r\n\r\n    renderToolbar() {\r\n        return <RecipeToolbar selected={window.foodnet.selected} showModal={(a) => this.setState({ modal: a })} delete={() => this.handleDelete()} />\r\n    }\r\n\r\n    handleDelete() {\r\n        if (isRecipeUsed(window.foodnet.selected)) {\r\n            message.error(\"This recipe is still being used. Please remove or replace the recipe where it is being used before deleting.\")\r\n        }\r\n        else {\r\n            window.foodnet.recipes = window.foodnet.recipes.filter(r => r.id !== window.foodnet.selected);\r\n            window.foodnet.selected = undefined;\r\n            window.foodnet.sync();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })} maskClosable={false} keyboard={true}>\r\n                <RecipeForm edit={this.state.modal === 'edit' ? window.foodnet.selected : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RecipeForm from '../recipe/RecipeForm'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <RecipeForm/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './AppHeader.css';\r\nimport { Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(props => <AppHeader {...props} />);\r\n\r\nclass AppHeader extends React.Component {\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n        const handleClick = (key) => {\r\n            switch (key) {\r\n                case \"recipes\":\r\n                    this.props.history.push(\"\");\r\n                    break;\r\n                case \"planner\":\r\n                    this.props.history.push(\"Planner\");\r\n                    break;\r\n                case \"shopper\":\r\n                    this.props.history.push(\"Shopper\");\r\n                    break;\r\n                case \"importexport\":\r\n                    this.props.history.push(\"ImportExport\");\r\n                    break;\r\n                case \"reports\":\r\n                    this.props.history.push(\"Reports\");\r\n                    break;\r\n                case \"about\":\r\n                    this.props.history.push(\"About\");\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        const findSelectionFromRoute = () => {\r\n            const path = this.props.location.pathname.substring(1)\r\n            switch (path) {\r\n                case \"ImportExport\":\r\n                case 'Reports':\r\n                case 'Planner':\r\n                case 'Shopper':\r\n                case 'About':\r\n                    return path.toLowerCase()\r\n                default:\r\n                    return \"recipes\"\r\n            }\r\n        }\r\n        return (\r\n            <Menu onClick={(e) => handleClick(e.key)} selectedKeys={[findSelectionFromRoute()]} mode=\"horizontal\">\r\n                <Menu.Item key=\"recipes\">\r\n                    <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    Recipes\r\n                </Menu.Item>\r\n                <Menu.Item key=\"planner\">\r\n                    <Icon type=\"calendar\" theme=\"twoTone\" />\r\n                    Planner\r\n                </Menu.Item>\r\n                <Menu.Item key=\"shopper\">\r\n                    <Icon type=\"shopping\" theme=\"twoTone\" />\r\n                    Shopper\r\n                </Menu.Item>\r\n                <Menu.Item key=\"reports\">\r\n                    <Icon type=\"align-left\" />\r\n                    Reports\r\n                </Menu.Item>\r\n                <Menu.Item key=\"importexport\">\r\n                    <Icon type=\"setting\" />\r\n                    Import/Export\r\n                </Menu.Item>\r\n                {/* <Menu.Item key=\"about\">\r\n                    <Icon type=\"question\" />\r\n                    About\r\n                </Menu.Item> */}\r\n            </Menu>\r\n        )\r\n    }\r\n}","import XLSX from 'xlsx';\r\n\r\nexport const load = (input) => {\r\n    const wb = XLSX.read(input, { type: 'array' });\r\n    const r = XLSX.utils.sheet_to_json(wb.Sheets.Recipes);\r\n    window.foodnet.recipes = r.map(it => ({ ...it, ingredients: JSON.parse(it.ingredientsJson) }));\r\n    const i = XLSX.utils.sheet_to_json(wb.Sheets.Ingredients);\r\n    window.foodnet.ingredients = i.map(it => ({ ...it, tags: it.tagsJson ? JSON.parse(it.tagsJson) : [] }));\r\n    window.foodnet.measurements = XLSX.utils.sheet_to_json(wb.Sheets.Measurements);\r\n    window.foodnet.events = XLSX.utils.sheet_to_json(wb.Sheets.Events);\r\n    window.foodnet.sync();\r\n}\r\n\r\nexport const save = (filename) => {\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.recipes.map(it => ({ ...it, ingredientsJson: JSON.stringify(it.ingredients) }))), \"Recipes\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.ingredients.map(it => ({ ...it, tagsJson: JSON.stringify(it.tags || []) }))), \"Ingredients\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.measurements), \"Measurements\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.events), \"Events\");\r\n    XLSX.writeFile(wb, filename || 'foodnet.xlsx');\r\n}","import React from 'react';\r\nimport { save, load } from '../loaders/ExcelLoader';\r\nimport { Modal, Button, Form, Input, AutoComplete } from 'antd';\r\nimport './ImportExport.css';\r\nimport axios from 'axios'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        filename: 'backup.xlsx',\r\n        allowedFileExtensions: [\r\n            'xlsx', 'xlsm', 'xlsb', 'xml', 'xls', 'xlw', 'csv', 'txt', 'dif', 'sylk', 'slk', 'prn', 'ods', 'fods', 'dbf', 'eth'\r\n        ].map(it => '.' + it),\r\n    }\r\n    render() {\r\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\r\n            return (\r\n                <div>\r\n                    Error: your browser does not support the File API specification. It is required for long term storage.\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"import-export\">\r\n                <Button onClick={() => this.setState({ saveModal: true })}>\r\n                    Export To Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ loadModal: true })}>\r\n                    Import From Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ urlModal: true })}>\r\n                    Import From Url\r\n                </Button>\r\n                {this.state.saveModal && (\r\n                    <Modal className=\"save-modal\" visible={true} onCancel={() => this.setState({ saveModal: false })} onOk={() => { save(this.getFilename()); this.setState({ saveModal: false }) }}>\r\n                        <Form.Item label=\"File Name\">\r\n                            <Input value={this.state.filename} onChange={v => this.setState({ filename: v.target.value })} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.loadModal && (\r\n                    <Modal className=\"load-modal\" visible={true} onCancel={() => this.setState({ loadModal: false })} okButtonProps={{ disabled: !this.state.file }} onOk={() => {\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onload = function (e) {\r\n                            load(e.target.result);\r\n                        };\r\n                        fileReader.readAsArrayBuffer(this.state.file);\r\n                        this.setState({ loadModal: false })\r\n                    }}>\r\n                        <Form.Item label=\"\">\r\n                            <Input type=\"file\" id=\"file\" name=\"file\" accept={this.state.allowedFileExtensions.join(',')} onChange={e => {\r\n                                this.setState({ file: e.target.files[0] })\r\n                            }} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.urlModal && this.urlModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    urlModal() {\r\n        const dropboxHack = (url) => {\r\n            if (url && url.indexOf(\"www.dropbox.com\")) {\r\n                return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\r\n            }\r\n        }\r\n        const validateUrl = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return false;\r\n            }\r\n            if (this.state.urlError) {\r\n                return false;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return false;\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        const validateMsg = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return \"Cannot be blank\";\r\n            }\r\n            if (this.state.urlError) {\r\n                return undefined;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return \"URL must begin with http or https\";\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return \"URL is not in the correct format (i.e. http://example.com)\";\r\n            }\r\n        }\r\n        const submit = () => {\r\n            axios.get(dropboxHack(this.state.url), { responseType: 'arraybuffer' }).then((r) => {\r\n                if (r.status !== 200) {\r\n                    this.setState({ urlError: `${r.status ? r.response.status + \" - \" : \"\"}${r.statusText ? r.response.statusText + \": \" : \"\"}${r.data || \"\"}` })\r\n                }\r\n                else {\r\n                    try {\r\n                        load(r.data)\r\n                        if (window.foodnet.importUrls.indexOf(this.state.url) === -1) {\r\n                            window.foodnet.importUrls.push(this.state.url);\r\n                            window.foodnet.sync();\r\n                        }\r\n                        this.setState({ urlModal: undefined, url: undefined })\r\n                    }\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ urlError: \"Could not parse file: \" + error })\r\n                    }\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e)\r\n                if (!e.response) {\r\n                    e.response = {\r\n                        statusText: \"error: CORS blocking\"\r\n                    }\r\n                }\r\n                console.log(`${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText + \": \" : \"\"}${e.response.data || \"\"}`)\r\n                this.setState({ urlError: `${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText : \"\"}` })\r\n            })\r\n        }\r\n        return (\r\n            <Modal className=\"url-modal\" visible={true} onCancel={() => this.setState({ urlModal: false })} okButtonProps={{ disabled: !validateUrl() }} onOk={() => submit()}>\r\n                <Form.Item label=\"Remote URL\" validateStatus={validateUrl() ? 'success' : 'error'} help={this.state.urlError || validateMsg()}>\r\n                    <AutoComplete style={{ width: 200 }} value={this.state.url} onChange={e => {\r\n                        this.setState({ url: e, urlError: undefined })\r\n                    }} >\r\n                        {window.foodnet.importUrls.map(it => (\r\n                            <AutoComplete.Option key={it}>{it}</AutoComplete.Option>\r\n                        ))}\r\n                    </AutoComplete>\r\n                </Form.Item>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    getFilename() {\r\n        const { filename } = this.state;\r\n        for (let e in this.state.allowedFileExtensions) {\r\n            if (filename.endsWith(this.state.allowedFileExtensions[e])) {\r\n                return filename;\r\n            }\r\n        }\r\n        return filename + \".xlsx\";\r\n    }\r\n}","import React from 'react';\r\nimport './Reports.css';\r\nimport { Menu, Icon, Layout, Tree, Button, Card } from 'antd';\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        menu: 'r1'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"reports-layout\">\r\n                <Sider collapsible={true}>\r\n                    {this.renderMenu()}\r\n                </Sider>\r\n                <Content>\r\n                    {this.renderSelectedMenuItem()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    renderSelectedMenuItem() {\r\n        switch (this.state.menu) {\r\n            case \"r1\": return this.renderCookingReferenceReport()\r\n            case \"r1p2\": return this.renderCookingReferenceReportPage2()\r\n            case \"r2\": return this.renderTopFavoritesReport()\r\n            default: return undefined\r\n        }\r\n    }\r\n\r\n    renderMenu() {\r\n        return (\r\n            <Menu\r\n                onClick={(e) => this.setState({ menu: e.key })}\r\n                defaultSelectedKeys={['r1']}\r\n                defaultOpenKeys={['r']}\r\n                mode=\"inline\" style={{ height: '100%' }}\r\n            >\r\n                <Menu.SubMenu\r\n                    key=\"r\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                            <span>Recipe Reports</span>\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"r1\">Cooking Reference</Menu.Item>\r\n                    <Menu.Item key=\"r2\">Top Favorites</Menu.Item>\r\n                </Menu.SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderCookingReferenceReport() {\r\n        const check = (e) => {\r\n            if (e && e.length === 1 && e[0] === '0-0') {\r\n                this.setState({ r1checkedKeys: window.foodnet.recipes.map(it => it.id.toString()) });\r\n            }\r\n            else {\r\n                this.setState({ r1checkedKeys: e })\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"recipe-select\">\r\n                <Tree\r\n                    checkable\r\n                    onSelect={(e) => check(e)}\r\n                    onCheck={(e) => check(e)}\r\n                    expandedKeys={['0-0']}\r\n                    checkedKeys={this.state.r1checkedKeys}\r\n                >\r\n                    <Tree.TreeNode title=\"All Recipes\" key=\"0-0\">\r\n                        {window.foodnet.recipes.map(r => (\r\n                            <Tree.TreeNode title={r.name} key={r.id} />\r\n                        ))}\r\n                    </Tree.TreeNode>\r\n                </Tree>\r\n                <Button disabled={!this.state.r1checkedKeys || this.state.r1checkedKeys.length < 1} onClick={() => { this.setState({ menu: 'r1p2' }) }}>Generate Report</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCookingReferenceReportPage2() {\r\n        return (\r\n            <div className=\"recipe-report\">\r\n                {window.foodnet.recipes.filter(it => this.state.r1checkedKeys.indexOf(it.id.toString()) !== -1).map(r => (\r\n                    <Card key={r.id} size=\"small\" >\r\n                        <div className=\"recipe\" key={r.id}>\r\n                            <div className=\"recipe-name\">Recipe Name:</div>\r\n                            <div>{r.name}</div>\r\n                            <div className=\"desc-header\">Instructions:</div>\r\n                            <div className=\"desc-body\">{r.desc || \"None\"}</div>\r\n                            <div className=\"ing\">Ingredients:</div>\r\n                            <div className=\"ingredient-list\">\r\n                                {r.ingredients.map(i => (\r\n                                    <div key={i.id}>\r\n                                        <div>\r\n                                            {window.foodnet.ingredients.find(it => it.id === i.id).name}, {i.qty} {window.foodnet.measurements.find(it => it.id === i.type).name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTopFavoritesReport() {\r\n        return <div>Coming Soon</div>\r\n    }\r\n}","import React from 'react';\r\nimport './Planner.css';\r\nimport { Tooltip, Calendar, Badge, Radio, Timeline, Form, Button, Input, Select, Modal, Icon, } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        mode: \"list\",\r\n        listDays: Number.isInteger(window.foodnet.listDays) ? window.foodnet.listDays : 7,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"planner\">\r\n                    {this.renderToolbar()}\r\n                    {this.state.mode === \"calendar\" && this.renderCalendar()}\r\n                    {this.state.mode === \"list\" && this.renderList()}\r\n                </div>\r\n                {this.renderAddListItemModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderToolbar() {\r\n        return (\r\n            <div className=\"planner-toolbar\">\r\n                <Radio.Group onChange={(e) => this.setState({ mode: e.target.value })} value={this.state.mode}>\r\n                    <Radio value={\"list\"}>List View</Radio>\r\n                    <Radio value={\"calendar\"}>Calendar View</Radio>\r\n                </Radio.Group>\r\n                {this.state.mode === \"list\" && (\r\n                    <Input type=\"number\" value={this.state.listDays} onChange={e => {\r\n                        if (e.target.value.length === 0) {\r\n                            this.setState({ listDays: undefined })\r\n                        }\r\n                        else {\r\n                            let v = Number(e.target.value)\r\n                            if (v < 0) v = 0;\r\n                            this.setState({ listDays: v })\r\n                            window.foodnet.listDays = v\r\n                            window.foodnet.sync()\r\n                        }\r\n                    }} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAddListItemModal() {\r\n        const valid = () => {\r\n            return this.state.recipe;\r\n        }\r\n        const submit = () => {\r\n            if (this.state.eventid) {\r\n                window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid).concat({\r\n                    id: this.state.eventid,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            else {\r\n                window.foodnet.events.push({\r\n                    id: window.foodnet.events.length === 0 ? 1 : Math.max(...window.foodnet.events.map(e => e.id)) + 1,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            window.foodnet.sync();\r\n            this.setState({\r\n                eventid: undefined,\r\n                recipe: undefined,\r\n                qty: undefined,\r\n                dayOffset: undefined,\r\n                modal: undefined,\r\n            })\r\n        }\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (this.state.modal === \"add-list-item\" || this.state.modal === \"edit-list-item\") && (\r\n            <Modal\r\n                className=\"list-item-modal\"\r\n                visible={true}\r\n                onCancel={() => this.setState({ modal: undefined })}\r\n                footer={[\r\n                    this.state.modal === \"edit-list-item\" && (\r\n                        <Button key=\"delete\" type=\"danger\" onClick={() => {\r\n                            window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid);\r\n                            window.foodnet.sync();\r\n                            this.setState({\r\n                                eventid: undefined,\r\n                                recipe: undefined,\r\n                                qty: undefined,\r\n                                dayOffset: undefined,\r\n                                modal: undefined,\r\n                            })\r\n                        }}>Delete Event</Button>\r\n                    ),\r\n                    <Button key=\"back\" onClick={() => this.setState({ modal: undefined })}>Cancel</Button>,\r\n                    <Button key=\"submit\" type=\"primary\" disabled={!valid()} onClick={() => submit()}>OK</Button>,\r\n                ]}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                        <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                            {window.foodnet.recipes.map(r => (\r\n                                <Select.Option key={r.id} value={r.id}>{r.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\">\r\n                        <Input\r\n                            autoFocus\r\n                            type=\"number\"\r\n                            defaultValue={1}\r\n                            value={this.state.qty}\r\n                            onChange={e => this.setState({ qty: e.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (valid()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderList() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const createItemsForDay = (dayOffset) => {\r\n            return window.foodnet.events\r\n                .filter(e => {\r\n                    return moment().add(dayOffset, \"days\").format(now_s_format) === moment(e.date).format(now_s_format)\r\n                })\r\n                .sort((a, b) => a.id < b.id ? -1 : 1)\r\n                .map(e => (\r\n                    <Timeline.Item key={e.id} color=\"green\" onClick={() => {\r\n                        this.setState({\r\n                            eventid: e.id,\r\n                            modal: \"edit-list-item\",\r\n                            dayOffset: dayOffset,\r\n                            recipe: e.recipe,\r\n                            qty: e.qty,\r\n                        })\r\n                    }} >{e.qty} x {window.foodnet.recipes.find(r => r.id === e.recipe).name}</Timeline.Item>\r\n                ))\r\n        }\r\n        const addForDay = (dayOffset) => {\r\n            return <Timeline.Item key=\"add\" onClick={() => {\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }} dot={<Icon type=\"plus-circle\" theme=\"twoTone\" twoToneColor=\"red\" />}>Add</Timeline.Item>;\r\n        }\r\n        const createList = (dayOffset) => {\r\n            return (\r\n                <Timeline key={dayOffset}>\r\n                    <Timeline.Item key=\"top\" color=\"blue\"><b><u>{moment().add(dayOffset, 'days').format(\"dddd (MMM D)\")}</u></b></Timeline.Item>\r\n                    {createItemsForDay(dayOffset)}\r\n                    {addForDay(dayOffset)}\r\n                </Timeline>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"planner-list\">\r\n                {Array.from(Array(this.state.listDays)).map((z, day) => createList(day))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCalendar() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const dateCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).format(now_s_format) === m.format(now_s_format)\r\n            }).map(e => {\r\n                const text = `${e.qty} x ${window.foodnet.recipes.find(r => r.id === e.recipe).name}`;\r\n                const dayOffset = moment(e.date).startOf('day').diff(moment().startOf('day'), 'days')\r\n                return { \r\n                    eid: e.id, \r\n                    dayOffset: dayOffset, \r\n                    type: dayOffset < 0 ? 'error' : dayOffset === 0 ? 'success' : 'warning', \r\n                    content: <Tooltip placement=\"top\" title={text}>{text}</Tooltip> \r\n                };\r\n            });\r\n            return (\r\n                <ul className=\"events\">\r\n                    {listData.map(item => (\r\n                        <li key={item.eid}>\r\n                            <Badge onClick={(event) => {\r\n                                const e = window.foodnet.events.find(it => it.id === item.eid);\r\n                                const dayOffset = item.dayOffset\r\n                                this.setState({\r\n                                    eventid: e.id,\r\n                                    modal: \"edit-list-item\",\r\n                                    dayOffset: dayOffset,\r\n                                    recipe: e.recipe,\r\n                                    qty: e.qty,\r\n                                })\r\n                                event.stopPropagation();\r\n                            }} status={item.type} text={item.content} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        const monthCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).month() === m.month() && moment(e.date).year() === m.year()\r\n            })\r\n            return (\r\n                listData.length + \" recipes\"\r\n            );\r\n          }\r\n\r\n        return (\r\n            <Calendar mode={this.state.calMode || \"month\"} onPanelChange={(value, mode) => this.setState({calMode: mode})} dateCellRender={dateCellRender} monthCellRender={monthCellRender} onSelect={(m) => {\r\n                if(this.state.calMode === 'year') {\r\n                    this.setState({calMode: 'month'})\r\n                    return;\r\n                };\r\n                const dayOffset = m.startOf('day').diff(moment().startOf('day'), 'days')\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }}/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Tag, Input, Tooltip, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        tagColors: [\"blue\", \"green\", \"red\", \"orange\", \"cyan\", \"purple\"],\r\n    }\r\n\r\n    render() {\r\n        const handleInputConfirm = () => {\r\n            const { inputValue } = this.state;\r\n            this.setState({\r\n                inputVisible: false,\r\n                inputValue: '',\r\n            });\r\n            if (inputValue && inputValue.trim().length > 0)\r\n                this.props.add(inputValue.trim());\r\n        }\r\n        return (\r\n            <div className={this.props.className || \"\"}>\r\n                {this.props.tags.map((tag, index) => {\r\n                    const isLongTag = tag.length > 20;\r\n                    const tagElem = (\r\n                        <Tag key={tag} color={this.state.tagColors[index % this.state.tagColors.length]} closable={true} onClose={() => this.props.remove(tag)}>\r\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? (\r\n                        <Tooltip title={tag} key={tag}>\r\n                            {tagElem}\r\n                        </Tooltip>\r\n                    ) : (tagElem);\r\n                })}\r\n                {this.state.inputVisible && (\r\n                    <Input\r\n                        ref={input => (this.input = input)}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        style={{ width: 78 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={(e) => this.setState({ inputValue: e.target.value })}\r\n                        onBlur={handleInputConfirm}\r\n                        onPressEnter={handleInputConfirm}\r\n                    />\r\n                )}\r\n                {!this.state.inputVisible && (\r\n                    <Tag onClick={() => this.setState({ inputVisible: true }, () => this.input.focus())} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                        <Icon type=\"plus\" /> New Tag\r\n                    </Tag>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Shopper.css'\r\nimport { DatePicker, Checkbox, Dropdown, Modal, Button, Menu, Tag, Switch, Icon } from 'antd'\r\nimport moment from 'moment'\r\nimport Tags from './Tags'\r\nimport ReactDragListView from 'react-drag-listview'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        checkedItems: [],\r\n        filteredTags: [],\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            dates: window.foodnet.plannerDates && window.foodnet.plannerDates.length === 2 ? window.foodnet.plannerDates.map(it => moment(it)) : undefined,\r\n            checkedItems: window.foodnet.plannerCheckedItems || [],\r\n            customSort: window.foodnet.customSort,\r\n            customSortOrder: window.foodnet.customSortOrder,\r\n        })\r\n    }\r\n    render() {\r\n        const updateTags = (tag, checked) => {\r\n            let tags = this.state.filteredTags;\r\n            if (checked) {\r\n                tags = tags.concat(tag)\r\n            }\r\n            else {\r\n                tags = tags.filter(t => t !== tag)\r\n            }\r\n            this.setState({ filteredTags: tags })\r\n        }\r\n\r\n        const tags = this.getTags()\r\n\r\n        const createMenu = () => {\r\n            return [(\r\n                <Menu.Item key={\"_NO_TAG\"}><Checkbox onChange={e => updateTags(\"_NO_TAG\", e.target.checked)}>Untagged</Checkbox></Menu.Item>\r\n            )].concat(tags.map(tag => (\r\n                <Menu.Item key={tag}><Checkbox onChange={e => updateTags(tag, e.target.checked)}>{tag}</Checkbox></Menu.Item>\r\n            )))\r\n        }\r\n\r\n        const onDragEnd = (fromIndex, toIndex) => {\r\n            const newTags = [...tags]\r\n            const item = newTags.splice(fromIndex, 1)[0];\r\n            newTags.splice(toIndex, 0, item);\r\n            this.setState({ customSortOrder: newTags });\r\n        }\r\n\r\n        return (\r\n            <div className=\"shopper\">\r\n                <div className=\"buttons\">\r\n                    <Button disabled={!tags || tags.length === 0} onClick={() => this.setState({ modal: 'sort' })}>Sort by Tags</Button>\r\n                    <Dropdown\r\n                        disabled={createMenu().length === 1}\r\n                        onVisibleChange={(v) => this.setState({ dropdownvisible: v })}\r\n                        visible={this.state.dropdownvisible}\r\n                        trigger={['click']}\r\n                        overlay={(\r\n                            <Menu>\r\n                                {createMenu()}\r\n                            </Menu>\r\n                        )}>\r\n                        <Button>Filter by Tags</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={() => this.setState({ hideTags: !this.state.hideTags })}>{this.state.hideTags ? 'Show Tags' : 'Hide Tags'}</Button>\r\n                </div>\r\n                <RangePicker value={this.state.dates} onChange={(m) => {\r\n                    this.setState({ dates: m, checkedItems: [] })\r\n                    window.foodnet.plannerDates = m.map(it => it.format());\r\n                    window.foodnet.plannerCheckedItems = [];\r\n                    window.foodnet.sync();\r\n                }} />\r\n                {this.state.dates && (\r\n                    this.createIngredientList()\r\n                )}\r\n\r\n                {this.state.modal === 'sort' && (\r\n                    <Modal className=\"sort-popup\" visible={true} onCancel={() => {\r\n                        this.setState({ modal: undefined, customSort: window.foodnet.customSort, customSortOrder: window.foodnet.customSortOrder })\r\n                    }} onOk={() => {\r\n                        window.foodnet.customSort = this.state.customSort\r\n                        window.foodnet.customSortOrder = this.state.customSortOrder\r\n                        window.foodnet.sync()\r\n                        this.setState({ modal: undefined })\r\n                    }}>\r\n                        <div><Switch checked={this.state.customSort} onChange={(checked) => {\r\n                            this.setState({ customSort: checked, customSortOrder: tags })\r\n                        }} /> Enable Tag Sorting</div>\r\n                        <ReactDragListView\r\n                            onDragEnd={onDragEnd}\r\n                            nodeSelector=\"li\"\r\n                            handleSelector=\"li\"\r\n                        >\r\n                            <div className=\"drag-list\">\r\n                                {tags.map((item, index) => (\r\n                                    <>\r\n                                        <Tag>{item}</Tag> \r\n                                        <Icon className=\"up\" type=\"up\" onClick={() => onDragEnd(index, index-1)}/> \r\n                                        <Icon className=\"down\" type=\"down\" onClick={() => onDragEnd(index, index+1)}/>\r\n                                    </>\r\n                                ))}\r\n                            </div>\r\n                        </ReactDragListView>\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTags() {\r\n        let tags = []\r\n        window.foodnet.ingredients.forEach(ing => {\r\n            (ing.tags || []).forEach(tag => {\r\n                if (tags.indexOf(tag) === -1) tags = tags.concat(tag);;\r\n            })\r\n        });\r\n        (this.state.filteredTags || []).forEach(t => {\r\n            if (tags.indexOf(t) === -1) tags = tags.concat(t);;\r\n        });\r\n        tags = tags.sort((a, b) => a.localeCompare(b))\r\n        if (this.state.customSort && this.state.customSortOrder && this.state.customSortOrder.length > 0) {\r\n            const { customSortOrder } = this.state;\r\n            tags = tags.sort((a, b) => {\r\n                const ai = customSortOrder.indexOf(a)\r\n                const bi = customSortOrder.indexOf(b)\r\n                if (ai !== -1 || bi !== -1) {\r\n                    if (ai !== -1 && bi !== -1) {\r\n                        return ai < bi ? -1 : 1;\r\n                    }\r\n                    return ai === -1 ? -1 : 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    createIngredientList() {\r\n        const { foodnet } = window;\r\n        let list = [];\r\n        foodnet.events.forEach(event => {\r\n            if (moment(event.date).isBetween(...this.state.dates, 'days', '[]')) {\r\n                const multiplier = Number(event.qty) || 0;\r\n                const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n                recipe.ingredients.forEach(ing => {\r\n                    list.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier });\r\n                })\r\n            }\r\n        })\r\n\r\n        const mergeDuplicates = (item, index, l) => {\r\n            if (index > 0 && l[index - 1].id === item.id && l[index - 1].type === item.type) {\r\n                let newIndex = index - 1;\r\n                while (l[newIndex].deleted) newIndex--;\r\n                l[newIndex].qty += item.qty;\r\n                item.deleted = true;\r\n            }\r\n            return item;\r\n        };\r\n        list = list.sort((a, b) => {\r\n            if (a.id !== b.id) {\r\n                return a.id < b.id ? -1 : 1;\r\n            }\r\n            if (a.type !== b.type) {\r\n                return a.type < b.type ? -1 : 1;\r\n            }\r\n            return 0;\r\n        }).map(mergeDuplicates).filter(item => !item.deleted);\r\n\r\n        const sortedTags = this.getTags()\r\n\r\n        return (\r\n            <ul className=\"ingredient-list\">\r\n                {list\r\n                    .map(item => ({\r\n                        ...item,\r\n                        name: foodnet.ingredients.find(i => i.id === item.id).name,\r\n                        typename: foodnet.measurements.find(m => m.id === item.type).name,\r\n                        checked: this.state.checkedItems.indexOf(item.id) !== -1,\r\n                        tags: foodnet.ingredients.find(i => i.id === item.id).tags || []\r\n                    }))\r\n                    .sort((a, b) => a.name.localeCompare(b.name) || a.typename.localeCompare(b.typename))\r\n                    .filter(item => {\r\n                        if (this.state.filteredTags.length === 0) return true;\r\n                        let tags = item.tags\r\n                        if (tags.length === 0) tags = ['_NO_TAG']\r\n                        let found = false;\r\n                        tags.forEach(t => {\r\n                            this.state.filteredTags.forEach(t2 => {\r\n                                if (t === t2) found = true;\r\n                            })\r\n                        })\r\n                        return found;\r\n                    })\r\n                    .sort((a, b) => {\r\n                        if (!this.state.customSort) {\r\n                            return 0;\r\n                        }\r\n                        if (!a.tags || !b.tags || a.tags.length === 0 || b.tags.length === 0) {\r\n                            if ((!a.tags || a.tags.length === 0) && (!b.tags || b.tags.length === 0)) {\r\n                                return 0;\r\n                            }\r\n                            return !a.tags || a.tags.length === 0 ? 1 : -1;\r\n                        }\r\n                        const findHighestTag = (tags) => tags.reduce((tag, highestTag) => {\r\n                            if (!highestTag) return tag;\r\n                            const ti = sortedTags.indexOf(tag)\r\n                            const hi = sortedTags.indexOf(highestTag)\r\n                            if (ti === -1 || hi === -1) {\r\n                                if (ti === -1 && hi === -1) return highestTag;\r\n                                return ti === -1 ? highestTag : tag;\r\n                            }\r\n                            return ti < hi ? tag : highestTag;\r\n                        })\r\n                        const aTag = findHighestTag(a.tags)\r\n                        const bTag = findHighestTag(b.tags)\r\n                        const ai = sortedTags.indexOf(aTag)\r\n                        const bi = sortedTags.indexOf(bTag)\r\n                        if (ai !== -1 || bi !== -1) {\r\n                            if (ai !== -1 && bi !== -1) {\r\n                                return ai < bi ? -1 : 1;\r\n                            }\r\n                            return ai === -1 ? -1 : 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .map((item, index) => (\r\n                        <li key={index} className=\"shopper-list-items\">\r\n                            <Checkbox className=\"shopper-list-item\" key={index} checked={item.checked} onChange={e => {\r\n                                foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.filter(it => it !== item.id)\r\n                                if (e.target.checked) {\r\n                                    foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.concat(item.id);\r\n                                }\r\n                                this.setState({ checkedItems: foodnet.plannerCheckedItems });\r\n                                foodnet.sync();\r\n                            }}>\r\n                                {`${item.name}: ${item.qty} ${item.typename}`}\r\n                            </Checkbox>\r\n                            {!this.state.hideTags && <Tags className=\"shopper-tags\" tags={item.tags} add={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].concat(tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} remove={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].filter(it => it !== tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} />}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './About.css'\r\nimport { Card, Button, message } from 'antd'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-page\">\r\n                <Card>\r\n                    {this.createBlurb()}\r\n                    {this.contact()}\r\n                    {this.donate()}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n    createBlurb() {\r\n        return (\r\n            <blockquote className=\"about-desc\">\r\n                The goal of this app is to make meal creation for yourself and your family easier, and to minimize the time spent doing so.\r\n                This is a completely 100% client-side app capable of going offline. No ads, spyware, or other bullonky.\r\n            </blockquote>\r\n        )\r\n    }\r\n    contact() {\r\n        return (\r\n            <div className=\"email\"><a href=\"mailto://harry.h.bowyer@gmail.com?subject=Foodnet%20Feedback&body=Concerning%20your%20food%20app%2C%0A%0A\">Contact Link (e-mail)</a></div>\r\n        )\r\n    }\r\n    donate() {\r\n        return (\r\n            <>\r\n                {/* <blockquote className=\"donate-desc\">\r\n                    Please consider buying me a coffee. It will help deprive me of sleep so that I can continue improving the app.\r\n                </blockquote>\r\n                <a target=\"_blank\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=K6K82W4JR45SN&currency_code=USD&source=url\">\r\n                    <img src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" />\r\n                </a> */}\r\n            </>\r\n        )\r\n    }\r\n}","export default function() {\r\n    const names = [\"ingredients\", \"measurements\", \"recipes\", \"listDays\", \"events\", \"importUrls\", \"plannerDates\", \"plannerCheckedItems\", \"customSort\", \"customSortOrder\"];\r\n    window.foodnet = {\r\n        sync: () => {\r\n            names.forEach(it => localStorage.setItem(it, JSON.stringify(window.foodnet[it])));\r\n        }\r\n    };\r\n    names.forEach(it => window.foodnet[it] = JSON.parse(localStorage.getItem(it)));\r\n    names.forEach(it => {\r\n        if (window.foodnet[it] === undefined || window.foodnet[it] === null) {\r\n            window.foodnet[it] = [];\r\n        }\r\n    })\r\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport RecipeApp from './recipe/RecipeApp'\nimport TestRecipeForm from './manual-test/TestRecipeForm'\nimport loader from './loaders/LocalStorageLoader'\nimport AppHeader from './AppHeader'\nimport './App.css';\nimport ImportExport from './admin/ImportExport'\nimport Reports from './reports/Reports';\nimport Planner from './planner/Planner'\nimport Shopper from './shopper/Shopper'\nimport About from './about/About'\n\nloader();\n\nexport default function () {\n  return (\n    <HashRouter hashType=\"noslash\">\n      <AppHeader />\n      <Route exact path=\"/ImportExport\" component={ImportExport} />\n      <Route exact path=\"/TestRecipeForm\" component={TestRecipeForm} />\n      <Route exact path=\"/Reports\" component={Reports} />\n      <Route exact path=\"/Planner\" component={Planner} />\n      <Route exact path=\"/Shopper\" component={Shopper} />\n      <Route exact path=\"/About\" component={About} />\n      <Route exact path=\"/\" component={RecipeApp} />\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}