{"version":3,"sources":["recipe/RecipeList.jsx","admin/EntityUsageChecker.js","recipe/RecipeToolbar.jsx","recipe/IngredientForm.jsx","recipe/TypeForm.jsx","recipe/RecipeForm.jsx","recipe/RecipeApp.jsx","manual-test/TestRecipeForm.jsx","AppHeader.jsx","loaders/ExcelLoader.js","admin/ImportExport.jsx","reports/Reports.jsx","planner/Planner.jsx","shopper/Tags.jsx","hoc/ReactDragListView.jsx","shopper/Shopper.jsx","about/About.jsx","loaders/LocalStorageLoader.js","App.jsx","serviceWorker.js","index.js"],"names":["state","className","window","foodnet","recipes","sort","a","b","name","toLowerCase","map","r","createRecipe","key","id","selected","onClick","props","select","dataIndex","sortedInfo","this","handleSearch","selectedKeys","confirm","setState","searchText","cols","title","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","width","marginBottom","display","type","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","onFilterDropdownVisibleChange","visible","setTimeout","sorter","icount","sortOrder","columnKey","order","columns","dataSource","ingredients","length","pagination","rowKey","rowClassName","onRow","selectedRowKeys","filters","React","Component","isRecipeUsed","events","find","recipe","isRecipeUsedOnlyInOldEvents","filter","moment","date","isAfter","startOf","needsConfirm","showModal","disabled","onConfirm","delete","okText","cancelText","placement","isNameUnique","takenNames","it","edit","indexOf","submit","trim","close","push","Math","max","sync","labelCol","xs","span","sm","wrapperCol","renderPicker","Item","label","validateStatus","hasFeedback","help","autoFocus","v","validate","i","message","error","Number","Option","measurements","renderConfigMenu","renderMultichooser","renderTable","TextArea","desc","autosize","minRows","maxRows","validateForm","concat","newId","renderModal","renderTModal","trigger","overlay","modal","tmodal","Divider","footer","onCancel","wrapFormItemOnError","cmp","validation","errorText","render","qty","filterOption","inputValue","option","children","inp","String","z","m","data","mode","values","ids","idsToKeep","idsToAdd","it2","it3","labelInValue","item","renderToolbar","renderList","forceUpdate","handleDelete","maskClosable","keyboard","withRouter","AppHeader","history","handleClick","path","location","pathname","substring","findSelectionFromRoute","theme","twoToneColor","load","input","wb","XLSX","read","utils","sheet_to_json","Sheets","Recipes","JSON","parse","ingredientsJson","Ingredients","tags","tagsJson","Measurements","Events","filename","allowedFileExtensions","File","FileReader","FileList","Blob","saveModal","loadModal","urlModal","onOk","book_new","recreateRecipeIngredients","book_append_sheet","json_to_sheet","stringify","writeFile","save","getFilename","okButtonProps","file","fileReader","onload","result","readAsArrayBuffer","accept","join","files","validateUrl","url","urlError","startsWith","axios","get","replace","dropboxHack","responseType","then","status","response","statusText","importUrls","console","log","catch","endsWith","Sider","Layout","Content","menu","collapsible","renderMenu","renderSelectedMenuItem","renderCookingReferenceReport","renderCookingReferenceReportPage2","renderTopFavoritesReport","defaultSelectedKeys","defaultOpenKeys","height","SubMenu","check","r1checkedKeys","checkable","onSelect","onCheck","expandedKeys","checkedKeys","TreeNode","listDays","isInteger","renderCalendar","renderAddListItemModal","Group","valid","eventid","add","dayOffset","format","defaultValue","createList","createItemsForDay","dot","addForDay","Array","from","day","calMode","onPanelChange","dateCellRender","listData","text","diff","eid","content","event","stopPropagation","monthCellRender","month","year","tagColors","handleInputConfirm","inputVisible","tag","index","isLongTag","tagElem","closable","onClose","remove","slice","onBlur","focus","background","borderStyle","Element","prototype","matches","proto","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","closest","el","selector","rootNode","element","isRoot","document","body","nodeType","parentNode","getDomIndex","ignoreSelectors","DIRECTIONS","TOP","BOTTOM","ReactDragListView","onMouseDown","bind","onDragStart","onDragEnter","onDragEnd","autoScroll","fromIndex","toIndex","scrollElement","scrollTimerId","direction","dragLine","removeChild","cacheDragTarget","handle","getHandleNode","handleSelector","nodeSelector","getDragNode","setAttribute","ondragstart","ondragend","eventData","dataTransfer","setData","effectAllowed","ondragenter","ondragover","ev","preventDefault","ignoreSelector","overflow","getComputedStyle","offsetWidth","scrollWidth","offsetHeight","scrollHeight","getScrollElement","enableScroll","resolveAutoScroll","stopAutoScroll","fixDragLine","removeAttribute","hideDragLine","dragList","createElement","appendChild","lineClassName","getBoundingClientRect","top","targetHeight","pageY","compatibleHeight","setInterval","clearInterval","scrollTop","scrollSpeed","getDragLine","left","lineTop","role","onTouchStart","c","defaultProps","RangePicker","DatePicker","MyInput","onInputChange","handleChange","checkedItems","filteredTags","MULTIPLIER","dates","plannerDates","plannerCheckedItems","customSort","customSortOrder","updateTags","checked","t","getTags","createMenu","newTags","splice","newValue","oldValue","onVisibleChange","dropdownvisible","hideTags","createIngredientList","Fragment","min","forEach","ing","localeCompare","ai","bi","list","isBetween","multiplier","l","newIndex","deleted","sortedTags","typename","found","t2","findHighestTag","reduce","highestTag","ti","hi","aTag","bTag","createBlurb","contact","donate","href","names","localStorage","setItem","getItem","loader","Boolean","hostname","match","ReactDOM","hashType","exact","component","ImportExport","TestRecipeForm","Reports","Planner","Shopper","About","RecipeApp","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33cec330.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RecipeList.css';\r\nimport { Table, Input, Button, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render2() {\r\n        return (<div className=\"recipe-list\">\r\n            {window.foodnet.recipes.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(r => this.createRecipe(r))}\r\n        </div>)\r\n    }\r\n\r\n    createRecipe2(r) {\r\n        return (\r\n            <div key={r.id} className={\"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onClick={() => { window.foodnet.selected = r.id; this.props.select(r.id); }}\r\n            >\r\n                {r.name}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const sortedInfo = this.state.sortedInfo || {};\r\n        const handleSearch = (selectedKeys, confirm) => {\r\n            confirm();\r\n            this.setState({ searchText: selectedKeys[0] });\r\n        };\r\n        const handleReset = clearFilters => {\r\n            clearFilters();\r\n            this.setState({ searchText: '' });\r\n        };\r\n        const getColumnSearchProps = dataIndex => ({\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        ref={node => {\r\n                            this.searchInput = node;\r\n                        }}\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => handleSearch(selectedKeys, confirm)}\r\n                        style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm)}\r\n                        icon=\"search\"\r\n                        size=\"small\"\r\n                        style={{ width: 90, marginRight: 8 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>Reset</Button>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => (<Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />),\r\n            onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => this.searchInput.select());\r\n                }\r\n            },\r\n        })\r\n        const cols = [\r\n            {\r\n                title: 'Recipe Name',\r\n                dataIndex: 'name',\r\n                ...getColumnSearchProps('name')\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'type'\r\n            },\r\n            {\r\n                title: 'Ingredients',\r\n                dataIndex: 'icount',\r\n                sorter: (a, b) => a.icount < b.icount ? -1 : a.icount === b.icount ? 0 : 1,\r\n                sortOrder: sortedInfo.columnKey === 'icount' && sortedInfo.order,\r\n            },\r\n        ]\r\n        return (\r\n            <Table\r\n                columns={cols}\r\n                dataSource={window.foodnet.recipes\r\n                    .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    .map(r => ({\r\n                        ...r,\r\n                        type: 'Custom',\r\n                        icount: (r.ingredients || []).length\r\n                    }))\r\n                }\r\n                pagination={false}\r\n                rowKey={'id'}\r\n                rowClassName={(r) => \"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onRow={(r) => ({\r\n                    onClick: () => {\r\n                        window.foodnet.selected = r.id;\r\n                        this.props.select(r.id);\r\n                        this.setState({ selectedRowKeys: [r.id] });\r\n                    },\r\n                })}\r\n                onChange={(pagination, filters, sortedInfo) => {\r\n                    this.setState({ sortedInfo, });\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import moment from 'moment'\r\n\r\nexport const isIngredientUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.id === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isRecipeUsed = (id) => {\r\n    if (window.foodnet.events.find(e => e.recipe === id)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}  \r\n\r\nexport const isRecipeUsedOnlyInOldEvents = (id) => {\r\n    if (window.foodnet.events.filter(e => moment(e.date).isAfter(moment().startOf('day'))).find(e => e.recipe === id)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}  \r\n\r\nexport const isMeasurementUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.type === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport './RecipeToolbar.css';\r\nimport { isRecipeUsed, isRecipeUsedOnlyInOldEvents } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        const needsConfirm = this.props.selected && isRecipeUsed(this.props.selected) && isRecipeUsedOnlyInOldEvents(this.props.selected)\r\n        return (\r\n            <div className=\"recipe-toolbar\">\r\n                <Button onClick={() => this.props.showModal('add')}>Add</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.showModal('edit')}>Edit</Button>\r\n                <Popconfirm\r\n                    title=\"This is still used in old calendar events. Are you sure?\"\r\n                    onConfirm={() => this.props.delete()}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                    disabled={!this.props.selected || !needsConfirm}\r\n                    placement=\"bottom\"\r\n                >\r\n                    <Button disabled={!this.props.selected} onClick={() => {\r\n                        if (!needsConfirm) this.props.delete()\r\n                    }}>Delete</Button>\r\n                </Popconfirm>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport {isIngredientUsed} from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.ingredients.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.ingredients.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.ingredients.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n                this.props.close();\r\n            }\r\n            else {\r\n                window.foodnet.ingredients.push({\r\n                    id: window.foodnet.ingredients.length === 0 ? 1 : Math.max(...window.foodnet.ingredients.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n                window.foodnet.sync();\r\n                this.props.close();\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isIngredientUsed(this.state.id)) {\r\n                            message.error(\"This ingredient is still being used. Please remove, replace, or rename the ingredient where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.ingredients = window.foodnet.ingredients.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing ingredient\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.ingredients.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.ingredients.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport { isMeasurementUsed } from \"../admin/EntityUsageChecker\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.measurements.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.measurements.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.measurements.find(it => it.id === this.state.id);\r\n                i.name = this.state.name.trim();\r\n            }\r\n            else {\r\n                window.foodnet.measurements.push({\r\n                    id: window.foodnet.measurements.length === 0 ? 1 : Math.max(...window.foodnet.measurements.map(it => it.id)) + 1,\r\n                    name: this.state.name.trim(),\r\n                });\r\n            }\r\n            this.props.close();\r\n            window.foodnet.sync();\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isMeasurementUsed(this.state.id)) {\r\n                            message.error(\"This measurement is still being used. Please remove, replace, or rename the measurement where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.measurements = window.foodnet.measurements.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing measurement\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.measurements.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.measurements.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Dropdown, Menu, Select, Modal, Icon, Table } from 'antd';\r\nimport './RecipeForm.css';\r\nimport IngredientForm from './IngredientForm'\r\nimport TypeForm from './TypeForm'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        ingredients: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.edit && !this.state.name) {\r\n            const recipe = window.foodnet.recipes.find(r => r.id === this.props.edit);\r\n            this.setState({ ...recipe });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout} className=\"recipe-form\">\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        validateStatus={this.state.name ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name ? undefined : \"Should not be blank\"}\r\n                    >\r\n                        <Input placeholder=\"Enter a name\" value={this.state.name} onChange={(v) => this.setState({ name: v.target.value })} />\r\n                    </Form.Item>\r\n\r\n                    {this.renderConfigMenu()}\r\n\r\n                    {this.renderMultichooser()}\r\n                    {this.renderTable()}\r\n                    <Form.Item className=\"instructions\" label=\"Instructions\">\r\n                        <Input.TextArea\r\n                            value={this.state.desc}\r\n                            autosize={{ minRows: 2, maxRows: 6 }}\r\n                            onChange={v => this.setState({ desc: v.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validateForm()} onClick={() => {\r\n                        if (this.state.id) {\r\n                            window.foodnet.recipes = window.foodnet.recipes.filter(it => it.id !== this.state.id).concat({ ...this.state });\r\n                        }\r\n                        else {\r\n                            const newId = window.foodnet.recipes.length === 0 ? 1 : Math.max(...window.foodnet.recipes.map(r => r.id)) + 1;\r\n                            window.foodnet.recipes.push({ ...this.state, name: this.state.name.trim(), id: newId });\r\n                        }\r\n                        window.foodnet.sync();\r\n                        this.props.close();\r\n                    }}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {this.renderModal()}\r\n                {this.renderTModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderConfigMenu() {\r\n        return (\r\n            <div className=\"config\">\r\n                Configure Ingredients/Measurements\r\n                <Dropdown trigger={['click']} overlay={\r\n                    <Menu onClick={(e) => {\r\n                        switch (e.key) {\r\n                            case \"1\":\r\n                                this.setState({ modal: 'add' })\r\n                                break;\r\n                            case \"2\":\r\n                                this.setState({ modal: 'edit' })\r\n                                break;\r\n                            case \"3\":\r\n                                this.setState({ tmodal: 'add' })\r\n                                break;\r\n                            case \"4\":\r\n                                this.setState({ tmodal: 'edit' })\r\n                                break;\r\n                            default:\r\n                        }\r\n                    }}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"plus\" />Create New Ingredient\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"edit\" /> Edit Existing Ingredients\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"plus\" /> Create New Measurement\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"edit\" /> Edit Existing Measurements\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }>\r\n                    <Icon type=\"setting\" className=\"setting-icon\" />\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })}>\r\n                <IngredientForm edit={this.state.modal === 'edit' ? true : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTModal() {\r\n        return this.state.tmodal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ tmodal: undefined })}>\r\n                <TypeForm edit={this.state.tmodal === 'edit' ? true : undefined} close={() => this.setState({ tmodal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTable() {\r\n        const wrapFormItemOnError = (cmp, validation, errorText) => {\r\n            return (\r\n                <Form.Item validateStatus={!validation ? \"error\" : \"success\"} help={!validation ? errorText : \"\"}>\r\n                    {cmp}\r\n                </Form.Item>\r\n            )\r\n        };\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                render: id => {\r\n                    const i = window.foodnet.ingredients.find(it => it.id === id);\r\n                    return <div>{i.name}</div>\r\n                }\r\n            },\r\n            {\r\n                title: 'Amount',\r\n                dataIndex: 'id',\r\n                key: 'qty',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Input type=\"number\" value={i.qty} onChange={v => {\r\n                            this.setState({\r\n                                ingredients: this.state.ingredients.filter(it => it.id !== id).concat([{\r\n                                    ...this.state.ingredients.find(it => it.id === id),\r\n                                    qty: v.target.value\r\n                                }])\r\n                            })\r\n                        }} />, i.qty, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'id',\r\n                key: 'type',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Select\r\n                            placeholder=\"Type\"\r\n                            filterOption={(inputValue, option) => {\r\n                                const name = option.props.children;\r\n                                const inp = typeof inputValue === 'string' || inputValue instanceof String ? inputValue : inputValue.toString();\r\n                                return (name || \"\").toLowerCase().indexOf((inp || \"\").toLowerCase());\r\n                            }}\r\n                            value={i.type ? i.type.toString() : undefined}\r\n                            onChange={(v) => {\r\n                                this.setState({\r\n                                    ingredients: this.state.ingredients\r\n                                        .filter(z => z.id !== i.id)\r\n                                        .concat(this.state.ingredients\r\n                                            .filter(z => z.id === i.id)\r\n                                            .map(z => ({ ...z, type: Number(v) })))\r\n                                })\r\n                            }}\r\n                        >\r\n                            {window.foodnet.measurements\r\n                                .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                                .map(m => <Select.Option key={m.id}>{m.name}</Select.Option>)}\r\n                        </Select>, i.type, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n        ];\r\n        const data = this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n        return this.state.ingredients.length > 0 && (\r\n            <Table columns={columns} dataSource={data} pagination={false} rowKey=\"id\" />\r\n        );\r\n    }\r\n\r\n    renderMultichooser() {\r\n        return (\r\n            <Select\r\n                className=\"multi-chooser\"\r\n                mode=\"multiple\"\r\n                placeholder={window.foodnet.ingredients.length === 0 ? \"Use the gear menu to create new ingredients\" : \"Please select\"}\r\n                value={this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => ({ key: it.id }))}\r\n                disabled={window.foodnet.ingredients.length === 0}\r\n                onChange={(values) => {\r\n                    const ids = values.map(it => Number(it.key));\r\n                    const idsToKeep = this.state.ingredients.map(it => it.id).filter(it => ids.indexOf(it) !== -1);\r\n                    const idsToAdd = ids.filter(id => this.state.ingredients.map(it => it.id).indexOf(id) === -1);\r\n                    this.setState({\r\n                        ingredients: this.state.ingredients\r\n                            .filter(it => idsToKeep.indexOf(it.id) !== -1)\r\n                            .concat(\r\n                                idsToAdd.map(it2 => (\r\n                                    { ...window.foodnet.ingredients.find(it3 => it3.id === it2) }\r\n                                ))\r\n                            )\r\n                            .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    })\r\n                }}\r\n                labelInValue={true}\r\n            >\r\n                {window.foodnet.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => (\r\n                    <Select.Option key={it.id} value={it.id}>{it.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n\r\n    renderIngAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'add' })\r\n            }}>Create New Ingredient</Button>\r\n        );\r\n    }\r\n\r\n    renderIngEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'edit' })\r\n            }}>Edit Existing Ingredients</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'add' })\r\n            }}>Create New Measurement</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'edit' })\r\n            }}>Edit Existing Measurements</Button>\r\n        );\r\n    }\r\n\r\n    validateForm() {\r\n        const isValid = this.state.name && this.state.name.trim().length > 0 && this.state.ingredients && this.state.ingredients.length > 0;\r\n        if (!isValid) return true;\r\n        for (var i in (this.state.ingredients || [])) {\r\n            const item = this.state.ingredients[i];\r\n            if (!item.type || !item.qty) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport RecipeToolbar from './RecipeToolbar'\r\nimport { Modal, message } from 'antd'\r\nimport RecipeForm from './RecipeForm'\r\nimport './RecipeApp.css'\r\nimport { isRecipeUsed, isRecipeUsedOnlyInOldEvents } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    render() {\r\n        //TODO: split add button, to: add custom recipe, add prepared food, add packaged food\r\n        //TODO: allow another recipe to be an ingredient?\r\n        return (\r\n            <>\r\n                {this.renderToolbar()}\r\n                {this.renderList()}\r\n                {this.renderModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderList() {\r\n        return <RecipeList selected={window.foodnet.selected} select={(id) => this.forceUpdate()} />;\r\n    }\r\n\r\n    renderToolbar() {\r\n        return <RecipeToolbar selected={window.foodnet.selected} showModal={(a) => this.setState({ modal: a })} delete={() => this.handleDelete()} />\r\n    }\r\n\r\n    handleDelete() {\r\n        if (isRecipeUsed(window.foodnet.selected) && !isRecipeUsedOnlyInOldEvents(window.foodnet.selected)) {\r\n            message.error(\"This recipe is still being used. Please remove or replace the recipe where it is being used before deleting.\")\r\n        }\r\n        else {\r\n            window.foodnet.recipes = window.foodnet.recipes.filter(r => r.id !== window.foodnet.selected);\r\n            window.foodnet.selected = undefined;\r\n            window.foodnet.sync();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })} maskClosable={false} keyboard={true}>\r\n                <RecipeForm edit={this.state.modal === 'edit' ? window.foodnet.selected : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RecipeForm from '../recipe/RecipeForm'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <RecipeForm/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './AppHeader.css';\r\nimport { Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(props => <AppHeader {...props} />);\r\n\r\nclass AppHeader extends React.Component {\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n        const handleClick = (key) => {\r\n            switch (key) {\r\n                case \"recipes\":\r\n                    this.props.history.push(\"\");\r\n                    break;\r\n                case \"planner\":\r\n                    this.props.history.push(\"Planner\");\r\n                    break;\r\n                case \"shopper\":\r\n                    this.props.history.push(\"Shopper\");\r\n                    break;\r\n                case \"importexport\":\r\n                    this.props.history.push(\"ImportExport\");\r\n                    break;\r\n                case \"reports\":\r\n                    this.props.history.push(\"Reports\");\r\n                    break;\r\n                case \"about\":\r\n                    this.props.history.push(\"About\");\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        const findSelectionFromRoute = () => {\r\n            const path = this.props.location.pathname.substring(1)\r\n            switch (path) {\r\n                case \"ImportExport\":\r\n                case 'Reports':\r\n                case 'Planner':\r\n                case 'Shopper':\r\n                case 'About':\r\n                    return path.toLowerCase()\r\n                default:\r\n                    return \"recipes\"\r\n            }\r\n        }\r\n        return (\r\n            <Menu onClick={(e) => handleClick(e.key)} selectedKeys={[findSelectionFromRoute()]} mode=\"horizontal\">\r\n                <Menu.Item key=\"recipes\">\r\n                    <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    Recipes\r\n                </Menu.Item>\r\n                <Menu.Item key=\"planner\">\r\n                    <Icon type=\"calendar\" theme=\"twoTone\" />\r\n                    Planner\r\n                </Menu.Item>\r\n                <Menu.Item key=\"shopper\">\r\n                    <Icon type=\"shopping\" theme=\"twoTone\" />\r\n                    Shopper\r\n                </Menu.Item>\r\n                <Menu.Item key=\"reports\">\r\n                    <Icon type=\"align-left\" />\r\n                    Reports\r\n                </Menu.Item>\r\n                <Menu.Item key=\"importexport\">\r\n                    <Icon type=\"setting\" />\r\n                    Import/Export\r\n                </Menu.Item>\r\n                <Menu.Item key=\"about\">\r\n                    <Icon type=\"question\" />\r\n                    About\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}","import XLSX from 'xlsx';\r\n\r\nexport const load = (input) => {\r\n    const wb = XLSX.read(input, { type: 'array' });\r\n    const r = XLSX.utils.sheet_to_json(wb.Sheets.Recipes);\r\n    window.foodnet.recipes = r.map(it => ({ ...it, ingredients: JSON.parse(it.ingredientsJson) }));\r\n    const i = XLSX.utils.sheet_to_json(wb.Sheets.Ingredients);\r\n    window.foodnet.ingredients = i.map(it => ({ ...it, tags: it.tagsJson ? JSON.parse(it.tagsJson) : [] }));\r\n    window.foodnet.measurements = XLSX.utils.sheet_to_json(wb.Sheets.Measurements);\r\n    window.foodnet.events = XLSX.utils.sheet_to_json(wb.Sheets.Events);\r\n    window.foodnet.sync();\r\n}\r\n\r\nexport const save = (filename) => {\r\n    const wb = XLSX.utils.book_new();\r\n    const recreateRecipeIngredients = it => it.ingredients.map(it => ({...it, name: window.foodnet.ingredients.find(i => i.id === it.id).name}))\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.recipes.map(it => ({ ...it, ingredientsJson: JSON.stringify(recreateRecipeIngredients(it)) }))), \"Recipes\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.ingredients.map(it => ({ ...it, tagsJson: JSON.stringify(it.tags || []) }))), \"Ingredients\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.measurements), \"Measurements\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.events), \"Events\");\r\n    XLSX.writeFile(wb, filename || 'foodnet.xlsx');\r\n}","import React from 'react';\r\nimport { save, load } from '../loaders/ExcelLoader';\r\nimport { Modal, Button, Form, Input, AutoComplete } from 'antd';\r\nimport './ImportExport.css';\r\nimport axios from 'axios'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        filename: 'backup.xlsx',\r\n        allowedFileExtensions: [\r\n            'xlsx', 'xlsm', 'xlsb', 'xml', 'xls', 'xlw', 'csv', 'txt', 'dif', 'sylk', 'slk', 'prn', 'ods', 'fods', 'dbf', 'eth'\r\n        ].map(it => '.' + it),\r\n    }\r\n    render() {\r\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\r\n            return (\r\n                <div>\r\n                    Error: your browser does not support the File API specification. It is required for long term storage.\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"import-export\">\r\n                <Button onClick={() => this.setState({ saveModal: true })}>\r\n                    Export To Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ loadModal: true })}>\r\n                    Import From Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ urlModal: true })}>\r\n                    Import From Url (Excel)\r\n                </Button>\r\n                {this.state.saveModal && (\r\n                    <Modal className=\"save-modal\" visible={true} onCancel={() => this.setState({ saveModal: false })} onOk={() => { save(this.getFilename()); this.setState({ saveModal: false }) }}>\r\n                        <Form.Item label=\"File Name\">\r\n                            <Input value={this.state.filename} onChange={v => this.setState({ filename: v.target.value })} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.loadModal && (\r\n                    <Modal className=\"load-modal\" visible={true} onCancel={() => this.setState({ loadModal: false })} okButtonProps={{ disabled: !this.state.file }} onOk={() => {\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onload = function (e) {\r\n                            load(e.target.result);\r\n                        };\r\n                        fileReader.readAsArrayBuffer(this.state.file);\r\n                        this.setState({ loadModal: false })\r\n                    }}>\r\n                        <Form.Item label=\"\">\r\n                            <Input type=\"file\" id=\"file\" name=\"file\" accept={this.state.allowedFileExtensions.join(',')} onChange={e => {\r\n                                this.setState({ file: e.target.files[0] })\r\n                            }} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.urlModal && this.urlModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    urlModal() {\r\n        const dropboxHack = (url) => {\r\n            if (url && url.indexOf(\"www.dropbox.com\")) {\r\n                return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\r\n            }\r\n        }\r\n        const validateUrl = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return false;\r\n            }\r\n            if (this.state.urlError) {\r\n                return false;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return false;\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        const validateMsg = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return \"Cannot be blank\";\r\n            }\r\n            if (this.state.urlError) {\r\n                return undefined;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return \"URL must begin with http or https\";\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return \"URL is not in the correct format (i.e. http://example.com)\";\r\n            }\r\n        }\r\n        const submit = () => {\r\n            axios.get(dropboxHack(this.state.url), { responseType: 'arraybuffer' }).then((r) => {\r\n                if (r.status !== 200) {\r\n                    this.setState({ urlError: `${r.status ? r.response.status + \" - \" : \"\"}${r.statusText ? r.response.statusText + \": \" : \"\"}${r.data || \"\"}` })\r\n                }\r\n                else {\r\n                    try {\r\n                        load(r.data)\r\n                        if (window.foodnet.importUrls.indexOf(this.state.url) === -1) {\r\n                            window.foodnet.importUrls.push(this.state.url);\r\n                            window.foodnet.sync();\r\n                        }\r\n                        this.setState({ urlModal: undefined, url: undefined })\r\n                    }\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ urlError: \"Could not parse file: \" + error })\r\n                    }\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e)\r\n                if (!e.response) {\r\n                    e.response = {\r\n                        statusText: \"error: CORS blocking\"\r\n                    }\r\n                }\r\n                console.log(`${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText + \": \" : \"\"}${e.response.data || \"\"}`)\r\n                this.setState({ urlError: `${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText : \"\"}` })\r\n            })\r\n        }\r\n        return (\r\n            <Modal className=\"url-modal\" visible={true} onCancel={() => this.setState({ urlModal: false })} okButtonProps={{ disabled: !validateUrl() }} onOk={() => submit()}>\r\n                <Form.Item label=\"Remote URL\" validateStatus={validateUrl() ? 'success' : 'error'} help={this.state.urlError || validateMsg()}>\r\n                    <AutoComplete style={{ width: 200 }} value={this.state.url} onChange={e => {\r\n                        this.setState({ url: e, urlError: undefined })\r\n                    }} >\r\n                        {window.foodnet.importUrls.map(it => (\r\n                            <AutoComplete.Option key={it}>{it}</AutoComplete.Option>\r\n                        ))}\r\n                    </AutoComplete>\r\n                    <Button className=\"url-delete-button\" onClick={() => {\r\n                        window.foodnet.importUrls = window.foodnet.importUrls.filter(it => it !== this.state.url)\r\n                        window.foodnet.sync()\r\n                        this.setState({url: undefined})\r\n                    }} icon=\"delete\" disabled={!this.state.url}/>\r\n                </Form.Item>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    getFilename() {\r\n        const { filename } = this.state;\r\n        for (let e in this.state.allowedFileExtensions) {\r\n            if (filename.endsWith(this.state.allowedFileExtensions[e])) {\r\n                return filename;\r\n            }\r\n        }\r\n        return filename + \".xlsx\";\r\n    }\r\n}","import React from 'react';\r\nimport './Reports.css';\r\nimport { Menu, Icon, Layout, Tree, Button, Card } from 'antd';\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        menu: 'r1'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"reports-layout\">\r\n                <Sider collapsible={true}>\r\n                    {this.renderMenu()}\r\n                </Sider>\r\n                <Content>\r\n                    {this.renderSelectedMenuItem()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    renderSelectedMenuItem() {\r\n        switch (this.state.menu) {\r\n            case \"r1\": return this.renderCookingReferenceReport()\r\n            case \"r1p2\": return this.renderCookingReferenceReportPage2()\r\n            case \"r2\": return this.renderTopFavoritesReport()\r\n            default: return undefined\r\n        }\r\n    }\r\n\r\n    renderMenu() {\r\n        return (\r\n            <Menu\r\n                onClick={(e) => this.setState({ menu: e.key })}\r\n                defaultSelectedKeys={['r1']}\r\n                defaultOpenKeys={['r']}\r\n                mode=\"inline\" style={{ height: '100%' }}\r\n            >\r\n                <Menu.SubMenu\r\n                    key=\"r\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                            <span>Recipe Reports</span>\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"r1\">Cooking Reference</Menu.Item>\r\n                    <Menu.Item key=\"r2\">Top Favorites</Menu.Item>\r\n                </Menu.SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderCookingReferenceReport() {\r\n        const check = (e) => {\r\n            if (e && e.length === 1 && e[0] === '0-0') {\r\n                this.setState({ r1checkedKeys: window.foodnet.recipes.map(it => it.id.toString()) });\r\n            }\r\n            else {\r\n                this.setState({ r1checkedKeys: e })\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"recipe-select\">\r\n                <Tree\r\n                    checkable\r\n                    onSelect={(e) => check(e)}\r\n                    onCheck={(e) => check(e)}\r\n                    expandedKeys={['0-0']}\r\n                    checkedKeys={this.state.r1checkedKeys}\r\n                >\r\n                    <Tree.TreeNode title=\"All Recipes\" key=\"0-0\">\r\n                        {window.foodnet.recipes.map(r => (\r\n                            <Tree.TreeNode title={r.name} key={r.id} />\r\n                        ))}\r\n                    </Tree.TreeNode>\r\n                </Tree>\r\n                <Button disabled={!this.state.r1checkedKeys || this.state.r1checkedKeys.length < 1} onClick={() => { this.setState({ menu: 'r1p2' }) }}>Generate Report</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCookingReferenceReportPage2() {\r\n        return (\r\n            <div className=\"recipe-report\">\r\n                {window.foodnet.recipes.filter(it => this.state.r1checkedKeys.indexOf(it.id.toString()) !== -1).map(r => (\r\n                    <Card key={r.id} size=\"small\" >\r\n                        <div className=\"recipe\" key={r.id}>\r\n                            <div className=\"recipe-name\">Recipe Name:</div>\r\n                            <div>{r.name}</div>\r\n                            <div className=\"desc-header\">Instructions:</div>\r\n                            <div className=\"desc-body\">{r.desc || \"None\"}</div>\r\n                            <div className=\"ing\">Ingredients:</div>\r\n                            <div className=\"ingredient-list\">\r\n                                {r.ingredients.map(i => (\r\n                                    <div key={i.id}>\r\n                                        <div>\r\n                                            {window.foodnet.ingredients.find(it => it.id === i.id).name}, {i.qty} {window.foodnet.measurements.find(it => it.id === i.type).name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTopFavoritesReport() {\r\n        return <div>Coming Soon</div>\r\n    }\r\n}","import React from 'react';\r\nimport './Planner.css';\r\nimport { Tooltip, Calendar, Badge, Radio, Timeline, Form, Button, Input, Select, Modal, Icon, } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        mode: \"list\",\r\n        listDays: Number.isInteger(window.foodnet.listDays) ? window.foodnet.listDays : 7,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"planner\">\r\n                    {this.renderToolbar()}\r\n                    {this.state.mode === \"calendar\" && this.renderCalendar()}\r\n                    {this.state.mode === \"list\" && this.renderList()}\r\n                </div>\r\n                {this.renderAddListItemModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderToolbar() {\r\n        return (\r\n            <div className=\"planner-toolbar\">\r\n                <Radio.Group onChange={(e) => this.setState({ mode: e.target.value })} value={this.state.mode}>\r\n                    <Radio value={\"list\"}>List View</Radio>\r\n                    <Radio value={\"calendar\"}>Calendar View</Radio>\r\n                </Radio.Group>\r\n                {this.state.mode === \"list\" && (\r\n                    <Input type=\"number\" value={this.state.listDays} onChange={e => {\r\n                        if (e.target.value.length === 0) {\r\n                            this.setState({ listDays: undefined })\r\n                        }\r\n                        else {\r\n                            let v = Number(e.target.value)\r\n                            if (v < 0) v = 0;\r\n                            this.setState({ listDays: v })\r\n                            window.foodnet.listDays = v\r\n                            window.foodnet.sync()\r\n                        }\r\n                    }} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAddListItemModal() {\r\n        const valid = () => {\r\n            return this.state.recipe;\r\n        }\r\n        const submit = () => {\r\n            if (this.state.eventid) {\r\n                window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid).concat({\r\n                    id: this.state.eventid,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            else {\r\n                window.foodnet.events.push({\r\n                    id: window.foodnet.events.length === 0 ? 1 : Math.max(...window.foodnet.events.map(e => e.id)) + 1,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            window.foodnet.sync();\r\n            this.setState({\r\n                eventid: undefined,\r\n                recipe: undefined,\r\n                qty: undefined,\r\n                dayOffset: undefined,\r\n                modal: undefined,\r\n            })\r\n        }\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (this.state.modal === \"add-list-item\" || this.state.modal === \"edit-list-item\") && (\r\n            <Modal\r\n                className=\"list-item-modal\"\r\n                visible={true}\r\n                onCancel={() => this.setState({ modal: undefined })}\r\n                footer={[\r\n                    this.state.modal === \"edit-list-item\" && (\r\n                        <Button key=\"delete\" type=\"danger\" onClick={() => {\r\n                            window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid);\r\n                            window.foodnet.sync();\r\n                            this.setState({\r\n                                eventid: undefined,\r\n                                recipe: undefined,\r\n                                qty: undefined,\r\n                                dayOffset: undefined,\r\n                                modal: undefined,\r\n                            })\r\n                        }}>Delete Event</Button>\r\n                    ),\r\n                    <Button key=\"back\" onClick={() => this.setState({ modal: undefined })}>Cancel</Button>,\r\n                    <Button key=\"submit\" type=\"primary\" disabled={!valid()} onClick={() => submit()}>OK</Button>,\r\n                ]}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                        <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                            {window.foodnet.recipes.map(r => (\r\n                                <Select.Option key={r.id} value={r.id}>{r.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\">\r\n                        <Input\r\n                            autoFocus\r\n                            type=\"number\"\r\n                            defaultValue={1}\r\n                            value={this.state.qty}\r\n                            onChange={e => this.setState({ qty: e.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (valid()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderList() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const createItemsForDay = (dayOffset) => {\r\n            return window.foodnet.events\r\n                .filter(e => {\r\n                    return moment().add(dayOffset, \"days\").format(now_s_format) === moment(e.date).format(now_s_format)\r\n                })\r\n                .sort((a, b) => a.id < b.id ? -1 : 1)\r\n                .map(e => (\r\n                    <Timeline.Item key={e.id} color=\"green\" onClick={() => {\r\n                        this.setState({\r\n                            eventid: e.id,\r\n                            modal: \"edit-list-item\",\r\n                            dayOffset: dayOffset,\r\n                            recipe: e.recipe,\r\n                            qty: e.qty,\r\n                        })\r\n                    }} >{e.qty} x {window.foodnet.recipes.find(r => r.id === e.recipe).name}</Timeline.Item>\r\n                ))\r\n        }\r\n        const addForDay = (dayOffset) => {\r\n            return <Timeline.Item key=\"add\" onClick={() => {\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }} dot={<Icon type=\"plus-circle\" theme=\"twoTone\" twoToneColor=\"red\" />}>Add</Timeline.Item>;\r\n        }\r\n        const createList = (dayOffset) => {\r\n            return (\r\n                <Timeline key={dayOffset}>\r\n                    <Timeline.Item key=\"top\" color=\"blue\"><b><u>{moment().add(dayOffset, 'days').format(\"dddd (MMM D)\")}</u></b></Timeline.Item>\r\n                    {createItemsForDay(dayOffset)}\r\n                    {addForDay(dayOffset)}\r\n                </Timeline>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"planner-list\">\r\n                {Array.from(Array(this.state.listDays)).map((z, day) => createList(day))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCalendar() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const dateCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).format(now_s_format) === m.format(now_s_format)\r\n            }).map(e => {\r\n                const text = `${e.qty} x ${window.foodnet.recipes.find(r => r.id === e.recipe).name}`;\r\n                const dayOffset = moment(e.date).startOf('day').diff(moment().startOf('day'), 'days')\r\n                return { \r\n                    eid: e.id, \r\n                    dayOffset: dayOffset, \r\n                    type: dayOffset < 0 ? 'error' : dayOffset === 0 ? 'success' : 'warning', \r\n                    content: <Tooltip placement=\"top\" title={text}>{text}</Tooltip> \r\n                };\r\n            });\r\n            return (\r\n                <ul className=\"events\">\r\n                    {listData.map(item => (\r\n                        <li key={item.eid}>\r\n                            <Badge onClick={(event) => {\r\n                                const e = window.foodnet.events.find(it => it.id === item.eid);\r\n                                const dayOffset = item.dayOffset\r\n                                this.setState({\r\n                                    eventid: e.id,\r\n                                    modal: \"edit-list-item\",\r\n                                    dayOffset: dayOffset,\r\n                                    recipe: e.recipe,\r\n                                    qty: e.qty,\r\n                                })\r\n                                event.stopPropagation();\r\n                            }} status={item.type} text={item.content} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        const monthCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).month() === m.month() && moment(e.date).year() === m.year()\r\n            })\r\n            return (\r\n                listData.length + \" recipes\"\r\n            );\r\n          }\r\n\r\n        return (\r\n            <Calendar mode={this.state.calMode || \"month\"} onPanelChange={(value, mode) => this.setState({calMode: mode})} dateCellRender={dateCellRender} monthCellRender={monthCellRender} onSelect={(m) => {\r\n                if(this.state.calMode === 'year') {\r\n                    this.setState({calMode: 'month'})\r\n                    return;\r\n                };\r\n                const dayOffset = m.startOf('day').diff(moment().startOf('day'), 'days')\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }}/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Tag, Input, Tooltip, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        tagColors: [\"blue\", \"green\", \"red\", \"orange\", \"cyan\", \"purple\"],\r\n    }\r\n\r\n    render() {\r\n        const handleInputConfirm = () => {\r\n            const { inputValue } = this.state;\r\n            this.setState({\r\n                inputVisible: false,\r\n                inputValue: '',\r\n            });\r\n            if (inputValue && inputValue.trim().length > 0)\r\n                this.props.add(inputValue.trim());\r\n        }\r\n        return (\r\n            <div className={this.props.className || \"\"}>\r\n                {this.props.tags.map((tag, index) => {\r\n                    const isLongTag = tag.length > 20;\r\n                    const tagElem = (\r\n                        <Tag key={tag} color={this.state.tagColors[index % this.state.tagColors.length]} closable={true} onClose={() => this.props.remove(tag)}>\r\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? (\r\n                        <Tooltip title={tag} key={tag}>\r\n                            {tagElem}\r\n                        </Tooltip>\r\n                    ) : (tagElem);\r\n                })}\r\n                {this.state.inputVisible && (\r\n                    <Input\r\n                        ref={input => (this.input = input)}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        style={{ width: 78 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={(e) => this.setState({ inputValue: e.target.value })}\r\n                        onBlur={handleInputConfirm}\r\n                        onPressEnter={handleInputConfirm}\r\n                    />\r\n                )}\r\n                {!this.state.inputVisible && (\r\n                    <Tag onClick={() => this.setState({ inputVisible: true }, () => this.input.focus())} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                        <Icon type=\"plus\" /> New Tag\r\n                    </Tag>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//////////UTIL/////////////////////////////////////////\r\n\r\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\r\n    var proto = Element.prototype;\r\n    proto.matches = proto.matchesSelector ||\r\n        proto.mozMatchesSelector || proto.msMatchesSelector ||\r\n        proto.oMatchesSelector || proto.webkitMatchesSelector;\r\n}\r\n\r\nconst closest = function (el, selector, rootNode) {\r\n    let element = el;\r\n    while (element) {\r\n        const isRoot = element === rootNode || element === document.body;\r\n        if (isRoot || (element.nodeType === 1 && element.matches(selector))) {\r\n            if (isRoot) {\r\n                element = null;\r\n            }\r\n            break;\r\n        }\r\n        element = element.parentNode;\r\n    }\r\n    return element;\r\n};\r\n\r\nconst getScrollElement = function (el) {\r\n    let element = el;\r\n    do {\r\n        const { overflow } = window.getComputedStyle(element);\r\n        if ((overflow === 'auto' || overflow === 'scroll')\r\n            && (element && element.nodeType\r\n                && (element.offsetWidth < element.scrollWidth\r\n                    || element.offsetHeight < element.scrollHeight))) {\r\n            break;\r\n        }\r\n        if (!element || !element.nodeType || element === document.body) {\r\n            element = null;\r\n            break;\r\n        }\r\n        element = element.parentNode;\r\n    } while (element);\r\n    return element;\r\n};\r\n\r\nconst getDomIndex = function (el, ignoreSelectors) {\r\n    return Array.from(el.parentNode.children)\r\n        .filter(e => (ignoreSelectors === '' ? true : !e.matches(ignoreSelectors)))\r\n        .indexOf(el);\r\n};\r\n\r\nexport { getScrollElement, closest, getDomIndex };\r\n\r\n\r\nconst DEFAULT_NODE_SELECTOR = 'tr';\r\nconst DIRECTIONS = {\r\n    TOP: 1,\r\n    BOTTOM: 3\r\n};\r\nconst UNIT_PX = 'px';\r\nconst DRAG_LIND_STYLE = 'position:fixed;z-index:9999;height:0;' +\r\n    'margin-top:-1px;border-bottom:dashed 2px red;display:none;';\r\n\r\n//////////DUCK TOUCH PUNCH/////////////////////////////////////////////////////////\r\n// eslint-disable-next-line no-unused-vars\r\nconst simulateMouseEvent = (event, simulatedType) => {\r\n    if (document.ontouchend) {\r\n        // Ignore multi-touch events\r\n        if (event.originalEvent.touches.length > 1) {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        var touch = event.originalEvent.changedTouches[0],\r\n            simulatedEvent = document.createEvent('MouseEvents');\r\n\r\n        // Initialize the simulated mouse event using the touch event's coordinates\r\n        simulatedEvent.initMouseEvent(\r\n            simulatedType,    // type\r\n            true,             // bubbles                    \r\n            true,             // cancelable                 \r\n            window,           // view                       \r\n            1,                // detail                     \r\n            touch.screenX,    // screenX                    \r\n            touch.screenY,    // screenY                    \r\n            touch.clientX,    // clientX                    \r\n            touch.clientY,    // clientY                    \r\n            false,            // ctrlKey                    \r\n            false,            // altKey                     \r\n            false,            // shiftKey                   \r\n            false,            // metaKey                    \r\n            0,                // button                     \r\n            null              // relatedTarget              \r\n        );\r\n\r\n        // Dispatch the simulated event to the target element\r\n        event.target.dispatchEvent(simulatedEvent);\r\n    }\r\n}\r\n\r\n//////////COMPONENT//////////////////////////////////////////////////////////////\r\n\r\nclass ReactDragListView extends Component {\r\n    static propTypes = {\r\n        onDragEnd: PropTypes.func.isRequired,\r\n        handleSelector: PropTypes.string,\r\n        nodeSelector: PropTypes.string,\r\n        ignoreSelector: PropTypes.string,\r\n        enableScroll: PropTypes.bool,\r\n        scrollSpeed: PropTypes.number,\r\n        lineClassName: PropTypes.string,\r\n        children: PropTypes.node\r\n    }\r\n\r\n    static defaultProps = {\r\n        nodeSelector: DEFAULT_NODE_SELECTOR,\r\n        ignoreSelector: '',\r\n        enableScroll: true,\r\n        scrollSpeed: 10,\r\n        handleSelector: '',\r\n        lineClassName: '',\r\n        children: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.autoScroll = this.autoScroll.bind(this);\r\n\r\n        this.state = {\r\n            fromIndex: -1,\r\n            toIndex: -1\r\n        };\r\n\r\n        this.scrollElement = null;\r\n        this.scrollTimerId = -1;\r\n        this.direction = DIRECTIONS.BOTTOM;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.dragLine && this.dragLine.parentNode) {\r\n            this.dragLine.parentNode.removeChild(this.dragLine);\r\n            this.dragLine = null;\r\n            this.cacheDragTarget = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        const handle = this.getHandleNode(e.target);\r\n        if (handle) {\r\n            const target = (!this.props.handleSelector || this.props.handleSelector\r\n                === this.props.nodeSelector)\r\n                ? handle\r\n                : this.getDragNode(handle);\r\n            if (target) {\r\n                handle.setAttribute('draggable', false);\r\n                target.setAttribute('draggable', true);\r\n                target.ondragstart = this.onDragStart;\r\n                target.ondragend = this.onDragEnd;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDragStart(e) {\r\n        const target = this.getDragNode(e.target);\r\n        const eventData = e;\r\n        if (target) {\r\n            const { parentNode } = target;\r\n            eventData.dataTransfer.setData('Text', '');\r\n            eventData.dataTransfer.effectAllowed = 'move';\r\n            parentNode.ondragenter = this.onDragEnter;\r\n            parentNode.ondragover = function (ev) {\r\n                ev.preventDefault();\r\n                return true;\r\n            };\r\n            const fromIndex = getDomIndex(target, this.props.ignoreSelector);\r\n            this.setState({ fromIndex, toIndex: fromIndex });\r\n            this.scrollElement = getScrollElement(parentNode);\r\n        }\r\n    }\r\n\r\n    onDragEnter(e) {\r\n        const target = this.getDragNode(e.target);\r\n        const eventData = e;\r\n        let toIndex;\r\n        if (target) {\r\n            toIndex = getDomIndex(target, this.props.ignoreSelector);\r\n            if (this.props.enableScroll) {\r\n                this.resolveAutoScroll(eventData, target);\r\n            }\r\n        } else {\r\n            toIndex = -1;\r\n            this.stopAutoScroll();\r\n        }\r\n        this.cacheDragTarget = target;\r\n        this.setState({ toIndex });\r\n        this.fixDragLine(target);\r\n    }\r\n\r\n    onDragEnd(e) {\r\n        const target = this.getDragNode(e.target);\r\n        this.stopAutoScroll();\r\n        if (target) {\r\n            target.removeAttribute('draggable');\r\n            target.ondragstart = null;\r\n            target.ondragend = null;\r\n            target.parentNode.ondragenter = null;\r\n            target.parentNode.ondragover = null;\r\n            if (this.state.fromIndex >= 0 && this.state.fromIndex !== this.state.toIndex) {\r\n                this.props.onDragEnd(this.state.fromIndex, this.state.toIndex);\r\n            }\r\n        }\r\n        this.hideDragLine();\r\n        this.setState({ fromIndex: -1, toIndex: -1 });\r\n    }\r\n\r\n    getDragNode(target) {\r\n        return closest(target, this.props.nodeSelector, this.dragList);\r\n    }\r\n\r\n    getHandleNode(target) {\r\n        return closest(\r\n            target,\r\n            this.props.handleSelector || this.props.nodeSelector,\r\n            this.dragList\r\n        );\r\n    }\r\n\r\n    getDragLine() {\r\n        if (!this.dragLine) {\r\n            this.dragLine = window.document.createElement('div');\r\n            this.dragLine.setAttribute('style', DRAG_LIND_STYLE);\r\n            window.document.body.appendChild(this.dragLine);\r\n        }\r\n        this.dragLine.className = this.props.lineClassName || '';\r\n        return this.dragLine;\r\n    }\r\n\r\n    resolveAutoScroll(e, target) {\r\n        if (!this.scrollElement) {\r\n            return;\r\n        }\r\n        const { top, height } = this.scrollElement.getBoundingClientRect();\r\n        const targetHeight = target.offsetHeight;\r\n        const { pageY } = e;\r\n        const compatibleHeight = targetHeight * (2 / 3);\r\n        this.direction = 0;\r\n        if (pageY > ((top + height) - compatibleHeight)) {\r\n            this.direction = DIRECTIONS.BOTTOM;\r\n        } else if (pageY < (top + compatibleHeight)) {\r\n            this.direction = DIRECTIONS.TOP;\r\n        }\r\n        if (this.direction) {\r\n            if (this.scrollTimerId < 0) {\r\n                this.scrollTimerId = setInterval(this.autoScroll, 20);\r\n            }\r\n        } else {\r\n            this.stopAutoScroll();\r\n        }\r\n    }\r\n\r\n    stopAutoScroll() {\r\n        clearInterval(this.scrollTimerId);\r\n        this.scrollTimerId = -1;\r\n        this.fixDragLine(this.cacheDragTarget);\r\n    }\r\n\r\n    autoScroll() {\r\n        const { scrollTop } = this.scrollElement;\r\n        if (this.direction === DIRECTIONS.BOTTOM) {\r\n            this.scrollElement.scrollTop = scrollTop + this.props.scrollSpeed;\r\n            if (scrollTop === this.scrollElement.scrollTop) {\r\n                this.stopAutoScroll();\r\n            }\r\n        } else if (this.direction === DIRECTIONS.TOP) {\r\n            this.scrollElement.scrollTop = scrollTop - this.props.scrollSpeed;\r\n            if (this.scrollElement.scrollTop <= 0) {\r\n                this.stopAutoScroll();\r\n            }\r\n        } else {\r\n            this.stopAutoScroll();\r\n        }\r\n    }\r\n\r\n    hideDragLine() {\r\n        if (this.dragLine) {\r\n            this.dragLine.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    fixDragLine(target) {\r\n        const dragLine = this.getDragLine();\r\n        if (!target || this.state.fromIndex < 0\r\n            || this.state.fromIndex === this.state.toIndex) {\r\n            this.hideDragLine();\r\n            return;\r\n        }\r\n        const {\r\n            left, top, width, height\r\n        } = target.getBoundingClientRect();\r\n        const lineTop = (this.state.toIndex < this.state.fromIndex\r\n            ? top\r\n            : (top + height));\r\n        if (this.props.enableScroll && this.scrollElement) {\r\n            const {\r\n                height: scrollHeight,\r\n                top: scrollTop\r\n            } = this.scrollElement.getBoundingClientRect();\r\n            if (lineTop < (scrollTop - 2) || lineTop > (scrollTop + scrollHeight + 2)) {\r\n                this.hideDragLine();\r\n                return;\r\n            }\r\n        }\r\n        dragLine.style.left = left + UNIT_PX;\r\n        dragLine.style.width = width + UNIT_PX;\r\n        dragLine.style.top = lineTop + UNIT_PX;\r\n        dragLine.style.display = 'block';\r\n    }\r\n\r\n    render() {\r\n        const touchEvents = {\r\n            onTouchStart: (e) => {\r\n            //    simulateMouseEvent(e, 'mousedown')\r\n            }\r\n        }\r\n        return (\r\n            <div role=\"presentation\" {...touchEvents} onMouseDown={this.onMouseDown} ref={(c) => { this.dragList = c; }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactDragListView;","import React from 'react';\r\nimport './Shopper.css'\r\nimport { DatePicker, Checkbox, Dropdown, Modal, Button, Menu, Tag, Switch, Icon, Input } from 'antd'\r\nimport moment from 'moment'\r\nimport Tags from './Tags'\r\nimport ReactDragListView from '../hoc/ReactDragListView'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nclass MyInput extends React.Component {\r\n    state = {}\r\n\r\n    render() {\r\n        const handleChange = (e) => {\r\n            this.setState({ value: e.target.value })\r\n        };\r\n        const onInputChange = () => {\r\n            this.setState({ value: undefined })\r\n        }\r\n        return <Input\r\n            {...this.props}\r\n            value={this.state.value === \"\" ? this.state.value : (this.props.value || this.state.value || this.props.defaultValue)}\r\n            onChange={(e) => handleChange(e)}\r\n            onPressEnter={(e) => { onInputChange(); if (e.target.value !== \"\" && e.target.value != this.props.defaultValue) this.props.onPressEnter(e) }}\r\n            onBlur={(e) => { onInputChange(); if (e.target.value !== \"\" && e.target.value != this.props.defaultValue) this.props.onBlur(e) }}\r\n        />\r\n    }\r\n}\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        checkedItems: [],\r\n        filteredTags: [],\r\n        MULTIPLIER: 4,\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            dates: window.foodnet.plannerDates && window.foodnet.plannerDates.length === 2 ? window.foodnet.plannerDates.map(it => moment(it)) : undefined,\r\n            checkedItems: window.foodnet.plannerCheckedItems || [],\r\n            customSort: window.foodnet.customSort,\r\n            customSortOrder: window.foodnet.customSortOrder,\r\n        })\r\n    }\r\n    render() {\r\n        const updateTags = (tag, checked) => {\r\n            let tags = this.state.filteredTags;\r\n            if (checked) {\r\n                tags = tags.concat(tag)\r\n            }\r\n            else {\r\n                tags = tags.filter(t => t !== tag)\r\n            }\r\n            this.setState({ filteredTags: tags })\r\n        }\r\n\r\n        const tags = this.getTags()\r\n\r\n        const createMenu = () => {\r\n            return [(\r\n                <Menu.Item key={\"_NO_TAG\"}><Checkbox onChange={e => updateTags(\"_NO_TAG\", e.target.checked)}>Untagged</Checkbox></Menu.Item>\r\n            )].concat(tags.map(tag => (\r\n                <Menu.Item key={tag}><Checkbox onChange={e => updateTags(tag, e.target.checked)}>{tag}</Checkbox></Menu.Item>\r\n            )))\r\n        }\r\n\r\n        const onDragEnd = (fromIndex, toIndex) => {\r\n            const newTags = [...tags]\r\n            const item = newTags.splice(fromIndex / this.state.MULTIPLIER, 1)[0];\r\n            newTags.splice(toIndex / this.state.MULTIPLIER, 0, item);\r\n            this.setState({ customSortOrder: newTags });\r\n        }\r\n\r\n        const onInputChange = (newValue, oldValue) => {\r\n            if (Number(newValue) !== oldValue) {\r\n                const fromIndex = oldValue - 1;\r\n                let toIndex = Number(newValue) - 1;\r\n                if (toIndex >= tags.length) {\r\n                    toIndex = tags.length - 1;\r\n                }\r\n                onDragEnd(fromIndex * this.state.MULTIPLIER, toIndex * this.state.MULTIPLIER);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"shopper\">\r\n                <div className=\"buttons\">\r\n                    <Button disabled={!tags || tags.length === 0} onClick={() => this.setState({ modal: 'sort' })}>Sort by Tags</Button>\r\n                    <Dropdown\r\n                        disabled={createMenu().length === 1}\r\n                        onVisibleChange={(v) => this.setState({ dropdownvisible: v })}\r\n                        visible={this.state.dropdownvisible}\r\n                        trigger={['click']}\r\n                        overlay={(\r\n                            <Menu>\r\n                                {createMenu()}\r\n                            </Menu>\r\n                        )}>\r\n                        <Button>Filter by Tags</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={() => this.setState({ hideTags: !this.state.hideTags })}>{this.state.hideTags ? 'Show Tags' : 'Hide Tags'}</Button>\r\n                </div>\r\n                <RangePicker value={this.state.dates} onChange={(m) => {\r\n                    this.setState({ dates: m, checkedItems: [] })\r\n                    window.foodnet.plannerDates = m.map(it => it.format());\r\n                    window.foodnet.plannerCheckedItems = [];\r\n                    window.foodnet.sync();\r\n                }} />\r\n                {this.state.dates && (\r\n                    this.createIngredientList()\r\n                )}\r\n\r\n                {this.state.modal === 'sort' && (\r\n                    <Modal className=\"sort-popup\" visible={true} onCancel={() => {\r\n                        this.setState({ modal: undefined, customSort: window.foodnet.customSort, customSortOrder: window.foodnet.customSortOrder })\r\n                    }} onOk={() => {\r\n                        window.foodnet.customSort = this.state.customSort\r\n                        window.foodnet.customSortOrder = this.state.customSortOrder\r\n                        window.foodnet.sync()\r\n                        this.setState({ modal: undefined })\r\n                    }}>\r\n                        <div><Switch checked={this.state.customSort} onChange={(checked) => {\r\n                            this.setState({ customSort: checked, customSortOrder: tags })\r\n                        }} /> Enable Tag Sorting</div>\r\n                        <ReactDragListView\r\n                            onDragEnd={onDragEnd}\r\n                            nodeSelector=\"span\"\r\n                            handleSelector=\"span\"\r\n                        >\r\n                            <div className=\"drag-list\">\r\n                                {tags.map((item, index) => (\r\n                                    <React.Fragment key={index}>\r\n                                        <MyInput type=\"number\" min=\"1\" max=\"9999\" defaultValue={index + 1} onPressEnter={(e) => onInputChange(e.target.value, index + 1)} onBlur={(e) => onInputChange(e.target.value, index + 1)} />\r\n                                        <Tag>{item}</Tag>\r\n                                        <Icon className=\"up\" type=\"up\" onClick={() => onDragEnd(index * this.state.MULTIPLIER, index * this.state.MULTIPLIER - this.state.MULTIPLIER)} />\r\n                                        <Icon className=\"down\" type=\"down\" onClick={() => onDragEnd(index * this.state.MULTIPLIER, index * this.state.MULTIPLIER + this.state.MULTIPLIER)} />\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </div>\r\n                        </ReactDragListView>\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTags() {\r\n        let tags = []\r\n        window.foodnet.ingredients.forEach(ing => {\r\n            (ing.tags || []).forEach(tag => {\r\n                if (tags.indexOf(tag) === -1) tags = tags.concat(tag);;\r\n            })\r\n        });\r\n        (this.state.filteredTags || []).forEach(t => {\r\n            if (tags.indexOf(t) === -1) tags = tags.concat(t);;\r\n        });\r\n        tags = tags.sort((a, b) => a.localeCompare(b))\r\n        if (this.state.customSort && this.state.customSortOrder && this.state.customSortOrder.length > 0) {\r\n            const { customSortOrder } = this.state;\r\n            tags = tags.sort((a, b) => {\r\n                const ai = customSortOrder.indexOf(a)\r\n                const bi = customSortOrder.indexOf(b)\r\n                if (ai !== -1 || bi !== -1) {\r\n                    if (ai !== -1 && bi !== -1) {\r\n                        return ai < bi ? -1 : 1;\r\n                    }\r\n                    return ai === -1 ? -1 : 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    createIngredientList() {\r\n        const { foodnet } = window;\r\n        let list = [];\r\n        foodnet.events.forEach(event => {\r\n            if (moment(event.date).isBetween(...this.state.dates, 'days', '[]')) {\r\n                const multiplier = Number(event.qty) || 0;\r\n                const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n                recipe.ingredients.forEach(ing => {\r\n                    list.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier });\r\n                })\r\n            }\r\n        })\r\n\r\n        const mergeDuplicates = (item, index, l) => {\r\n            if (index > 0 && l[index - 1].id === item.id && l[index - 1].type === item.type) {\r\n                let newIndex = index - 1;\r\n                while (l[newIndex].deleted) newIndex--;\r\n                l[newIndex].qty += item.qty;\r\n                item.deleted = true;\r\n            }\r\n            return item;\r\n        };\r\n        list = list.sort((a, b) => {\r\n            if (a.id !== b.id) {\r\n                return a.id < b.id ? -1 : 1;\r\n            }\r\n            if (a.type !== b.type) {\r\n                return a.type < b.type ? -1 : 1;\r\n            }\r\n            return 0;\r\n        }).map(mergeDuplicates).filter(item => !item.deleted);\r\n\r\n        const sortedTags = this.getTags()\r\n\r\n        return (\r\n            <ul className=\"ingredient-list\">\r\n                {list\r\n                    .map(item => ({\r\n                        ...item,\r\n                        name: foodnet.ingredients.find(i => i.id === item.id).name,\r\n                        typename: foodnet.measurements.find(m => m.id === item.type).name,\r\n                        checked: this.state.checkedItems.indexOf(item.id) !== -1,\r\n                        tags: foodnet.ingredients.find(i => i.id === item.id).tags || []\r\n                    }))\r\n                    .sort((a, b) => a.name.localeCompare(b.name) || a.typename.localeCompare(b.typename))\r\n                    .filter(item => {\r\n                        if (this.state.filteredTags.length === 0) return true;\r\n                        let tags = item.tags\r\n                        if (tags.length === 0) tags = ['_NO_TAG']\r\n                        let found = false;\r\n                        tags.forEach(t => {\r\n                            this.state.filteredTags.forEach(t2 => {\r\n                                if (t === t2) found = true;\r\n                            })\r\n                        })\r\n                        return found;\r\n                    })\r\n                    .sort((a, b) => {\r\n                        if (!this.state.customSort) {\r\n                            return 0;\r\n                        }\r\n                        if (!a.tags || !b.tags || a.tags.length === 0 || b.tags.length === 0) {\r\n                            if ((!a.tags || a.tags.length === 0) && (!b.tags || b.tags.length === 0)) {\r\n                                return 0;\r\n                            }\r\n                            return !a.tags || a.tags.length === 0 ? 1 : -1;\r\n                        }\r\n                        const findHighestTag = (tags) => tags.reduce((tag, highestTag) => {\r\n                            if (!highestTag) return tag;\r\n                            const ti = sortedTags.indexOf(tag)\r\n                            const hi = sortedTags.indexOf(highestTag)\r\n                            if (ti === -1 || hi === -1) {\r\n                                if (ti === -1 && hi === -1) return highestTag;\r\n                                return ti === -1 ? highestTag : tag;\r\n                            }\r\n                            return ti < hi ? tag : highestTag;\r\n                        })\r\n                        const aTag = findHighestTag(a.tags)\r\n                        const bTag = findHighestTag(b.tags)\r\n                        const ai = sortedTags.indexOf(aTag)\r\n                        const bi = sortedTags.indexOf(bTag)\r\n                        if (ai !== -1 || bi !== -1) {\r\n                            if (ai !== -1 && bi !== -1) {\r\n                                return ai < bi ? -1 : 1;\r\n                            }\r\n                            return ai === -1 ? -1 : 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .map((item, index) => (\r\n                        <li key={index} className=\"shopper-list-items\">\r\n                            <Checkbox className=\"shopper-list-item\" key={index} checked={item.checked} onChange={e => {\r\n                                foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.filter(it => it !== item.id)\r\n                                if (e.target.checked) {\r\n                                    foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.concat(item.id);\r\n                                }\r\n                                this.setState({ checkedItems: foodnet.plannerCheckedItems });\r\n                                foodnet.sync();\r\n                            }}>\r\n                                {`${item.name}: ${item.qty} ${item.typename}`}\r\n                            </Checkbox>\r\n                            {!this.state.hideTags && <Tags className=\"shopper-tags\" tags={item.tags} add={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].concat(tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} remove={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].filter(it => it !== tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} />}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './About.css'\r\nimport { Card } from 'antd'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-page\">\r\n                <Card>\r\n                    {this.createBlurb()}\r\n                    {this.contact()}\r\n                    {this.donate()}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n    createBlurb() {\r\n        return (\r\n            <blockquote className=\"about-desc\">\r\n                The goal of this app is to make meal creation for yourself and your family easier, and to minimize the time spent doing so.\r\n                This is a completely 100% client-side app capable of going offline. No ads, spyware, or other bullonky.\r\n            </blockquote>\r\n        )\r\n    }\r\n    contact() {\r\n        // eslint-disable-next-line no-useless-concat\r\n        const email = \"harry.h.bowyer\" + \"@g\" + \"mail.com\";\r\n        const subject = \"subject=Foodnet Feedback\";\r\n        const body = \"body=Concerning your food app,%0A%0A%0A%0A\";\r\n        return (\r\n            <div className=\"email\"><a href={`mailto://${email}?${subject}&${body}`}>Contact Link (e-mail)</a></div>\r\n        )\r\n    }\r\n    donate() {\r\n        return (\r\n            <>\r\n                {/* <a target=\"_blank\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=K6K82W4JR45SN&currency_code=USD&source=url\">\r\n                    <img src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" />\r\n                </a> */}\r\n                <blockquote className=\"donate-desc\">\r\n                    Please consider buying me a coffee. It will help deprive me of sleep so that I can continue improving the app.\r\n                    <br />\r\n                    <span className=\"donate-desc-2\">For now, email me using the link above if you wish to motivate me with material objects. Just knowing you are willing to do so helps. I'm in the process of figuring out how to filter funds through <b>The Man</b>.</span>\r\n                </blockquote>\r\n            </>\r\n        )\r\n    }\r\n}","export default function() {\r\n    const names = [\"ingredients\", \"measurements\", \"recipes\", \"listDays\", \"events\", \"importUrls\", \"plannerDates\", \"plannerCheckedItems\", \"customSort\", \"customSortOrder\"];\r\n    window.foodnet = {\r\n        sync: () => {\r\n            names.forEach(it => localStorage.setItem(it, JSON.stringify(window.foodnet[it])));\r\n        }\r\n    };\r\n    names.forEach(it => window.foodnet[it] = JSON.parse(localStorage.getItem(it)));\r\n    names.forEach(it => {\r\n        if (window.foodnet[it] === undefined || window.foodnet[it] === null) {\r\n            window.foodnet[it] = [];\r\n        }\r\n    })\r\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport RecipeApp from './recipe/RecipeApp'\nimport TestRecipeForm from './manual-test/TestRecipeForm'\nimport loader from './loaders/LocalStorageLoader'\nimport AppHeader from './AppHeader'\nimport './App.css';\nimport ImportExport from './admin/ImportExport'\nimport Reports from './reports/Reports';\nimport Planner from './planner/Planner'\nimport Shopper from './shopper/Shopper'\nimport About from './about/About'\n\nloader();\n\nexport default function () {\n  return (\n    <HashRouter hashType=\"noslash\">\n      <AppHeader />\n      <Route exact path=\"/ImportExport\" component={ImportExport} />\n      <Route exact path=\"/TestRecipeForm\" component={TestRecipeForm} />\n      <Route exact path=\"/Reports\" component={Reports} />\n      <Route exact path=\"/Planner\" component={Planner} />\n      <Route exact path=\"/Shopper\" component={Shopper} />\n      <Route exact path=\"/About\" component={About} />\n      <Route exact path=\"/\" component={RecipeApp} />\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}