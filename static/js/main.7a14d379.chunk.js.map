{"version":3,"sources":["recipe/RecipeList.jsx","recipe/RecipeToolbar.jsx","recipe/IngredientForm.jsx","admin/EntityUsageChecker.js","recipe/TypeForm.jsx","recipe/RecipeForm.jsx","recipe/RecipeApp.jsx","manual-test/TestRecipeForm.jsx","AppHeader.jsx","loaders/ExcelLoader.js","admin/ImportExport.jsx","reports/Reports.jsx","planner/Planner.jsx","shopper/Tags.jsx","shopper/Shopper.jsx","loaders/LocalStorageLoader.js","App.jsx","serviceWorker.js","index.js"],"names":["className","window","foodnet","recipes","sort","a","b","name","toLowerCase","map","r","createRecipe","key","id","selected","onClick","props","select","React","Component","showModal","disabled","this","delete","state","isNameUnique","takenNames","ingredients","it","edit","filter","indexOf","submit","find","close","push","length","Math","max","sync","labelCol","xs","span","sm","wrapperCol","renderPicker","Item","label","validateStatus","hasFeedback","help","undefined","autoFocus","value","placeholder","onChange","v","setState","target","onPressEnter","validate","type","i","message","error","toString","Number","Option","measurements","recipe","renderConfigMenu","renderMultichooser","renderTable","TextArea","desc","autosize","minRows","maxRows","validateForm","concat","newId","renderModal","renderTModal","overlay","e","modal","tmodal","Divider","width","visible","footer","onCancel","wrapFormItemOnError","cmp","validation","errorText","columns","title","dataIndex","render","qty","filterOption","inputValue","option","children","inp","String","z","m","data","dataSource","pagination","rowKey","mode","values","ids","idsToKeep","idsToAdd","it2","it3","labelInValue","item","renderToolbar","renderList","forceUpdate","handleDelete","events","maskClosable","keyboard","withRouter","AppHeader","history","handleClick","selectedKeys","path","location","pathname","substring","findSelectionFromRoute","theme","twoToneColor","load","input","wb","XLSX","read","utils","sheet_to_json","Sheets","Recipes","JSON","parse","ingredientsJson","Ingredients","tags","tagsJson","Measurements","Events","filename","allowedFileExtensions","File","FileReader","FileList","Blob","saveModal","loadModal","urlModal","onOk","book_new","book_append_sheet","json_to_sheet","stringify","writeFile","save","getFilename","okButtonProps","file","fileReader","onload","result","readAsArrayBuffer","accept","join","files","validateUrl","url","urlError","startsWith","axios","get","replace","dropboxHack","responseType","then","status","response","statusText","importUrls","console","log","catch","style","endsWith","Sider","Layout","Content","menu","collapsible","renderMenu","renderSelectedMenuItem","renderCookingReferenceReport","renderCookingReferenceReportPage2","renderTopFavoritesReport","defaultSelectedKeys","defaultOpenKeys","height","SubMenu","check","r1checkedKeys","checkable","onSelect","onCheck","expandedKeys","checkedKeys","TreeNode","size","listDays","isInteger","renderCalendar","renderAddListItemModal","Group","valid","eventid","date","moment","add","dayOffset","format","defaultValue","createList","color","createItemsForDay","dot","addForDay","Array","from","day","calMode","onPanelChange","dateCellRender","listData","text","startOf","diff","eid","content","placement","event","stopPropagation","monthCellRender","month","year","handleInputConfirm","inputVisible","trim","tag","index","isLongTag","tagElem","closable","onClose","remove","slice","ref","onBlur","focus","background","borderStyle","RangePicker","DatePicker","checkedItems","filteredTags","dates","plannerDates","plannerCheckedItems","updateTags","checked","t","createMenu","forEach","ing","onVisibleChange","dropdownvisible","hideTags","createIngredientList","list","isBetween","multiplier","l","newIndex","deleted","typename","found","t2","names","localStorage","setItem","getItem","loader","Boolean","hostname","match","ReactDOM","hashType","exact","component","ImportExport","TestRecipeForm","Reports","Planner","Shopper","RecipeApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a14d379.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RecipeList.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (<div className=\"recipe-list\">\r\n            {window.foodnet.recipes.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(r => this.createRecipe(r))}\r\n        </div>)\r\n    }\r\n\r\n    createRecipe(r) {\r\n        return (\r\n            <div key={r.id} className={\"recipe-list-item\" + (window.foodnet.selected === r.id ? \" selected\" : \"\")}\r\n                onClick={() => { window.foodnet.selected = r.id; this.props.select(r.id); }}\r\n            >\r\n                {r.name}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './RecipeToolbar.css';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"recipe-toolbar\">\r\n                <Button onClick={() => this.props.showModal('add')}>Add</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.showModal('edit')}>Edit</Button>\r\n                <Button disabled={!this.props.selected} onClick={() => this.props.delete()}>Delete</Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport {isIngredientUsed} from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.ingredients.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.ingredients.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.ingredients.find(it => it.id === this.state.id);\r\n                i.name = this.state.name;\r\n                this.props.close();\r\n            }\r\n            else {\r\n                window.foodnet.ingredients.push({\r\n                    id: window.foodnet.ingredients.length === 0 ? 1 : Math.max(...window.foodnet.ingredients.map(it => it.id)) + 1,\r\n                    name: this.state.name,\r\n                });\r\n                window.foodnet.sync();\r\n                this.props.close();\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isIngredientUsed(this.state.id)) {\r\n                            message.error(\"This ingredient is still being used. Please remove, replace, or rename the ingredient where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.ingredients = window.foodnet.ingredients.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing ingredient\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.ingredients.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.ingredients.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","export const isIngredientUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.id === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isRecipeUsed = (id) => {\r\n    //FIXME: old events = add are you sure prompt\r\n    if (window.foodnet.events.find(e => e.recipe === id)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}  \r\n\r\nexport const isMeasurementUsed = (id) => {\r\n    if (window.foodnet.recipes.find(r => r.ingredients.find(i => i.type === id))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Select, message } from 'antd';\r\nimport { isMeasurementUsed } from \"../admin/EntityUsageChecker\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        const isNameUnique = () => {\r\n            let takenNames = window.foodnet.measurements.map(it => it.name);\r\n            if (this.props.edit) {\r\n                takenNames = window.foodnet.measurements.filter(it => it.id !== this.state.id).map(it => it.name);\r\n            }\r\n            return takenNames.indexOf(this.state.name) === -1;\r\n        }\r\n        const submit = () => {\r\n            if (this.props.edit) {\r\n                const i = window.foodnet.measurements.find(it => it.id === this.state.id);\r\n                i.name = this.state.name;\r\n            }\r\n            else {\r\n                window.foodnet.measurements.push({\r\n                    id: window.foodnet.measurements.length === 0 ? 1 : Math.max(...window.foodnet.measurements.map(it => it.id)) + 1,\r\n                    name: this.state.name,\r\n                });\r\n            }\r\n            this.props.close();\r\n            window.foodnet.sync();\r\n        }\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout}>\r\n                    {this.props.edit && this.renderPicker()}\r\n                    <Form.Item\r\n                        label={this.props.edit ? \"New Name\" : \"Name\"}\r\n                        validateStatus={this.state.name && isNameUnique() ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name && isNameUnique() ? undefined : !this.state.name ? \"Should not be blank\" : \"Name should be unique\"}\r\n                    >\r\n                        <Input autoFocus value={this.state.name} placeholder=\"Enter a name\"\r\n                            onChange={(v) => this.setState({ name: v.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (!this.validate()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    {this.props.edit && <Button key=\"delete\" type=\"danger\" disabled={!this.state.id} onClick={() => {\r\n                        if (isMeasurementUsed(this.state.id)) {\r\n                            message.error(\"This measurement is still being used. Please remove, replace, or rename the measurement where it is being used before deleting.\")\r\n                        }\r\n                        else {\r\n                            window.foodnet.measurements = window.foodnet.measurements.filter(it => it.id !== this.state.id)\r\n                            window.foodnet.sync()\r\n                            this.props.close()\r\n                        }\r\n                    }}>Delete</Button>}\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validate()} onClick={() => submit()}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPicker() {\r\n        return (\r\n            <Form.Item label=\"Choose existing measurement\" validateStatus={(this.props.edit && !this.state.id) ? 'error' : 'success'} hasFeedback={true}>\r\n                <Select value={this.state.id ? this.state.id.toString() : undefined} onChange={v => {\r\n                    this.setState({ id: Number(v), name: window.foodnet.measurements.find(it => it.id === Number(v)).name });\r\n                }}>\r\n                    {window.foodnet.measurements.map(i => (\r\n                        <Select.Option key={i.id} >{i.name}</Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    validate() {\r\n        return !this.state.name || (this.props.edit && !this.state.id);\r\n    }\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Dropdown, Menu, Select, Modal, Icon, Table } from 'antd';\r\nimport './RecipeForm.css';\r\nimport IngredientForm from './IngredientForm'\r\nimport TypeForm from './TypeForm'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        ingredients: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.edit && !this.state.name) {\r\n            const recipe = window.foodnet.recipes.find(r => r.id === this.props.edit);\r\n            this.setState({ ...recipe });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <Form {...formItemLayout} className=\"recipe-form\">\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        validateStatus={this.state.name ? \"success\" : \"error\"}\r\n                        hasFeedback\r\n                        help={this.state.name ? undefined : \"Should not be blank\"}\r\n                    >\r\n                        <Input placeholder=\"Enter a name\" value={this.state.name} onChange={(v) => this.setState({ name: v.target.value })} />\r\n                    </Form.Item>\r\n\r\n                    {this.renderConfigMenu()}\r\n\r\n                    {this.renderMultichooser()}\r\n                    {this.renderTable()}\r\n                    <Form.Item className=\"instructions\" label=\"Instructions\">\r\n                        <Input.TextArea\r\n                            value={this.state.desc}\r\n                            autosize={{ minRows: 2, maxRows: 6 }}\r\n                            onChange={v => this.setState({ desc: v.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    <Button key=\"back\" onClick={() => this.props.close()}>Cancel</Button>\r\n                    <Button type=\"primary\" disabled={this.validateForm()} onClick={() => {\r\n                        if (this.state.id) {\r\n                            window.foodnet.recipes = window.foodnet.recipes.filter(it => it.id !== this.state.id).concat({ ...this.state });\r\n                        }\r\n                        else {\r\n                            const newId = window.foodnet.recipes.length === 0 ? 1 : Math.max(...window.foodnet.recipes.map(r => r.id)) + 1;\r\n                            window.foodnet.recipes.push({ ...this.state, id: newId });\r\n                        }\r\n                        window.foodnet.sync();\r\n                        this.props.close();\r\n                    }}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                {this.renderModal()}\r\n                {this.renderTModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderConfigMenu() {\r\n        return (\r\n            <div className=\"config\">\r\n                Configure Ingredients/Measurements\r\n                <Dropdown overlay={\r\n                    <Menu onClick={(e) => {\r\n                        switch (e.key) {\r\n                            case \"1\":\r\n                                this.setState({ modal: 'add' })\r\n                                break;\r\n                            case \"2\":\r\n                                this.setState({ modal: 'edit' })\r\n                                break;\r\n                            case \"3\":\r\n                                this.setState({ tmodal: 'add' })\r\n                                break;\r\n                            case \"4\":\r\n                                this.setState({ tmodal: 'edit' })\r\n                                break;\r\n                            default:\r\n                        }\r\n                    }}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"plus\" />Create New Ingredient\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"edit\" /> Edit Existing Ingredients\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"plus\" /> Create New Measurement\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"edit\" /> Edit Existing Measurements\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }>\r\n                    <Icon type=\"setting\" className=\"setting-icon\" />\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })}>\r\n                <IngredientForm edit={this.state.modal === 'edit' ? true : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTModal() {\r\n        return this.state.tmodal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ tmodal: undefined })}>\r\n                <TypeForm edit={this.state.tmodal === 'edit' ? true : undefined} close={() => this.setState({ tmodal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderTable() {\r\n        const wrapFormItemOnError = (cmp, validation, errorText) => {\r\n            return (\r\n                <Form.Item validateStatus={!validation ? \"error\" : \"success\"} help={!validation ? errorText : \"\"}>\r\n                    {cmp}\r\n                </Form.Item>\r\n            )\r\n        };\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                render: id => {\r\n                    const i = window.foodnet.ingredients.find(it => it.id === id);\r\n                    return <div>{i.name}</div>\r\n                }\r\n            },\r\n            {\r\n                title: 'Amount',\r\n                dataIndex: 'id',\r\n                key: 'qty',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Input type=\"number\" value={i.qty} onChange={v => {\r\n                            this.setState({\r\n                                ingredients: this.state.ingredients.filter(it => it.id !== id).concat([{\r\n                                    ...this.state.ingredients.find(it => it.id === id),\r\n                                    qty: v.target.value\r\n                                }])\r\n                            })\r\n                        }} />, i.qty, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'id',\r\n                key: 'type',\r\n                render: id => {\r\n                    const i = this.state.ingredients.find(it => it.id === id);\r\n                    return (\r\n                        wrapFormItemOnError(<Select\r\n                            placeholder=\"Type\"\r\n                            filterOption={(inputValue, option) => {\r\n                                const name = option.props.children;\r\n                                const inp = typeof inputValue === 'string' || inputValue instanceof String ? inputValue : inputValue.toString();\r\n                                return (name || \"\").toLowerCase().indexOf((inp || \"\").toLowerCase());\r\n                            }}\r\n                            value={i.type ? i.type.toString() : undefined}\r\n                            onChange={(v) => {\r\n                                this.setState({\r\n                                    ingredients: this.state.ingredients\r\n                                        .filter(z => z.id !== i.id)\r\n                                        .concat(this.state.ingredients\r\n                                            .filter(z => z.id === i.id)\r\n                                            .map(z => ({ ...z, type: Number(v) })))\r\n                                })\r\n                            }}\r\n                        >\r\n                            {window.foodnet.measurements\r\n                                .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                                .map(m => <Select.Option key={m.id}>{m.name}</Select.Option>)}\r\n                        </Select>, i.type, \"Should not be blank\")\r\n                    );\r\n                }\r\n            },\r\n        ];\r\n        const data = this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n        return this.state.ingredients.length > 0 && (\r\n            <Table columns={columns} dataSource={data} pagination={false} rowKey=\"id\" />\r\n        );\r\n    }\r\n\r\n    renderMultichooser() {\r\n        return (\r\n            <Select\r\n                className=\"multi-chooser\"\r\n                mode=\"multiple\"\r\n                placeholder={window.foodnet.ingredients.length === 0 ? \"Use the gear menu to create new ingredients\" : \"Please select\"}\r\n                value={this.state.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => ({ key: it.id }))}\r\n                disabled={window.foodnet.ingredients.length === 0}\r\n                onChange={(values) => {\r\n                    const ids = values.map(it => Number(it.key));\r\n                    const idsToKeep = this.state.ingredients.map(it => it.id).filter(it => ids.indexOf(it) !== -1);\r\n                    const idsToAdd = ids.filter(id => this.state.ingredients.map(it => it.id).indexOf(id) === -1);\r\n                    this.setState({\r\n                        ingredients: this.state.ingredients\r\n                            .filter(it => idsToKeep.indexOf(it.id) !== -1)\r\n                            .concat(\r\n                                idsToAdd.map(it2 => (\r\n                                    { ...window.foodnet.ingredients.find(it3 => it3.id === it2) }\r\n                                ))\r\n                            )\r\n                            .sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                    })\r\n                }}\r\n                labelInValue={true}\r\n            >\r\n                {window.foodnet.ingredients.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1).map(it => (\r\n                    <Select.Option key={it.id} value={it.id}>{it.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n\r\n    renderIngAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'add' })\r\n            }}>Create New Ingredient</Button>\r\n        );\r\n    }\r\n\r\n    renderIngEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ modal: 'edit' })\r\n            }}>Edit Existing Ingredients</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeAddButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'add' })\r\n            }}>Create New Measurement</Button>\r\n        );\r\n    }\r\n\r\n    renderTypeEditButton() {\r\n        return (\r\n            <Button onClick={() => {\r\n                this.setState({ tmodal: 'edit' })\r\n            }}>Edit Existing Measurements</Button>\r\n        );\r\n    }\r\n\r\n    validateForm() {\r\n        const isValid = this.state.name && this.state.name.length > 0 && this.state.ingredients && this.state.ingredients.length > 0;\r\n        if (!isValid) return true;\r\n        for (var i in (this.state.ingredients || [])) {\r\n            const item = this.state.ingredients[i];\r\n            if (!item.type || !item.qty) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport RecipeToolbar from './RecipeToolbar'\r\nimport { Modal, message } from 'antd'\r\nimport RecipeForm from './RecipeForm'\r\nimport './RecipeApp.css'\r\nimport { isRecipeUsed } from '../admin/EntityUsageChecker'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    render() {\r\n        //TODO: split add button, to: add custom recipe, add prepared food, add packaged food\r\n        //TODO: allow another recipe to be an ingredient?\r\n        //TODO: make list look better\r\n        return (\r\n            <>\r\n                {this.renderToolbar()}\r\n                {this.renderList()}\r\n                {this.renderModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderList() {\r\n        return <RecipeList selected={window.foodnet.selected} select={(id) => this.forceUpdate()} />;\r\n    }\r\n\r\n    renderToolbar() {\r\n        return <RecipeToolbar selected={window.foodnet.selected} showModal={(a) => this.setState({ modal: a })} delete={() => this.handleDelete()} />\r\n    }\r\n\r\n    handleDelete() {\r\n        if (isRecipeUsed(window.foodnet.selected)) {\r\n            message.error(\"This recipe is still being used. Please remove or replace the recipe where it is being used before deleting.\")\r\n        }\r\n        else {\r\n            window.foodnet.recipes = window.foodnet.recipes.filter(r => r.id !== window.foodnet.selected);\r\n            window.foodnet.selected = undefined;\r\n            window.foodnet.sync();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    renderModal() {\r\n        return this.state.modal && (\r\n            <Modal width=\"90%\" visible={true} footer={null} onCancel={() => this.setState({ modal: undefined })} maskClosable={false} keyboard={true}>\r\n                <RecipeForm edit={this.state.modal === 'edit' ? window.foodnet.selected : undefined} close={() => this.setState({ modal: undefined })} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RecipeForm from '../recipe/RecipeForm'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <RecipeForm/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './AppHeader.css';\r\nimport { Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(props => <AppHeader {...props} />);\r\n\r\nclass AppHeader extends React.Component {\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n        const handleClick = (key) => {\r\n            switch (key) {\r\n                case \"recipes\":\r\n                    this.props.history.push(\"\");\r\n                    break;\r\n                case \"planner\":\r\n                    this.props.history.push(\"Planner\");\r\n                    break;\r\n                    case \"shopper\":\r\n                    this.props.history.push(\"Shopper\");\r\n                    break;\r\n                case \"importexport\":\r\n                    this.props.history.push(\"ImportExport\");\r\n                    break;\r\n                case \"reports\":\r\n                    this.props.history.push(\"Reports\");\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        const findSelectionFromRoute = () => {\r\n            const path = this.props.location.pathname.substring(1)\r\n            switch (path) {\r\n                case \"ImportExport\":\r\n                case 'Reports':\r\n                case 'Planner':\r\n                case 'Shopper':\r\n                    return path.toLowerCase()\r\n                default:\r\n                    return \"recipes\"\r\n            }\r\n        }\r\n        return (\r\n            <Menu onClick={(e) => handleClick(e.key)} selectedKeys={[findSelectionFromRoute()]} mode=\"horizontal\">\r\n                <Menu.Item key=\"recipes\">\r\n                    <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    Recipes\r\n                </Menu.Item>\r\n                <Menu.Item key=\"planner\">\r\n                    <Icon type=\"calendar\" theme=\"twoTone\" />\r\n                    Planner\r\n                </Menu.Item>\r\n                <Menu.Item key=\"shopper\">\r\n                    <Icon type=\"shopping\" theme=\"twoTone\" />\r\n                    Shopper\r\n                </Menu.Item>\r\n                <Menu.Item key=\"reports\">\r\n                    <Icon type=\"align-left\" />\r\n                    Reports\r\n                </Menu.Item>\r\n                <Menu.Item key=\"importexport\">\r\n                    <Icon type=\"setting\" />\r\n                    Import/Export\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}","import XLSX from 'xlsx';\r\n\r\nexport const load = (input) => {\r\n    const wb = XLSX.read(input, { type: 'array' });\r\n    const r = XLSX.utils.sheet_to_json(wb.Sheets.Recipes);\r\n    window.foodnet.recipes = r.map(it => ({ ...it, ingredients: JSON.parse(it.ingredientsJson) }));\r\n    const i = XLSX.utils.sheet_to_json(wb.Sheets.Ingredients);\r\n    window.foodnet.ingredients = i.map(it => ({ ...it, tags: JSON.parse(it.tagsJson) }));\r\n    window.foodnet.measurements = XLSX.utils.sheet_to_json(wb.Sheets.Measurements);\r\n    window.foodnet.events = XLSX.utils.sheet_to_json(wb.Sheets.Events);\r\n    window.foodnet.sync();\r\n}\r\n\r\nexport const save = (filename) => {\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.recipes.map(it => ({ ...it, ingredientsJson: JSON.stringify(it.ingredients) }))), \"Recipes\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.ingredients.map(it => ({ ...it, tagsJson: JSON.stringify(it.tags || []) }))), \"Ingredients\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.measurements), \"Measurements\");\r\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(window.foodnet.events), \"Events\");\r\n    XLSX.writeFile(wb, filename || 'foodnet.xlsx');\r\n}","import React from 'react';\r\nimport { save, load } from '../loaders/ExcelLoader';\r\nimport { Modal, Button, Form, Input, AutoComplete } from 'antd';\r\nimport './ImportExport.css';\r\nimport axios from 'axios'\r\nimport XLSX from 'xlsx'\r\nimport stream from 'stream'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        filename: 'backup.xlsx',\r\n        allowedFileExtensions: [\r\n            'xlsx', 'xlsm', 'xlsb', 'xml', 'xls', 'xlw', 'csv', 'txt', 'dif', 'sylk', 'slk', 'prn', 'ods', 'fods', 'dbf', 'eth'\r\n        ].map(it => '.' + it),\r\n    }\r\n    render() {\r\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\r\n            return (\r\n                <div>\r\n                    Error: your browser does not support the File API specification. It is required for long term storage.\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"import-export\">\r\n                <Button onClick={() => this.setState({ saveModal: true })}>\r\n                    Export To Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ loadModal: true })}>\r\n                    Import From Excel\r\n                </Button>\r\n                <Button onClick={() => this.setState({ urlModal: true })}>\r\n                    Import From Url\r\n                </Button>\r\n                {this.state.saveModal && (\r\n                    <Modal className=\"save-modal\" visible={true} onCancel={() => this.setState({ saveModal: false })} onOk={() => { save(this.getFilename()); this.setState({ saveModal: false }) }}>\r\n                        <Form.Item label=\"File Name\">\r\n                            <Input value={this.state.filename} onChange={v => this.setState({ filename: v.target.value })} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.loadModal && (\r\n                    <Modal className=\"load-modal\" visible={true} onCancel={() => this.setState({ loadModal: false })} okButtonProps={{ disabled: !this.state.file }} onOk={() => {\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onload = function (e) {\r\n                            load(e.target.result);\r\n                        };\r\n                        fileReader.readAsArrayBuffer(this.state.file);\r\n                        this.setState({ loadModal: false })\r\n                    }}>\r\n                        <Form.Item label=\"\">\r\n                            <Input type=\"file\" id=\"file\" name=\"file\" accept={this.state.allowedFileExtensions.join(',')} onChange={e => {\r\n                                this.setState({ file: e.target.files[0] })\r\n                            }} />\r\n                        </Form.Item>\r\n                    </Modal>\r\n                )}\r\n                {this.state.urlModal && this.urlModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    urlModal() {\r\n        const dropboxHack = (url) => {\r\n            if (url && url.indexOf(\"www.dropbox.com\")) {\r\n                return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\r\n            }\r\n        }\r\n        const validateUrl = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return false;\r\n            }\r\n            if (this.state.urlError) {\r\n                return false;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return false;\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        const validateMsg = () => {\r\n            if (!this.state.url || this.state.url.length === 0) {\r\n                return \"Cannot be blank\";\r\n            }\r\n            if (this.state.urlError) {\r\n                return undefined;\r\n            }\r\n            if (!this.state.url.startsWith(\"http\")) {\r\n                return \"URL must begin with http or https\";\r\n            }\r\n            if (this.state.url.indexOf(\"://\") === -1) {\r\n                return \"URL is not in the correct format (i.e. http://example.com)\";\r\n            }\r\n        }\r\n        const submit = () => {\r\n            axios.get(dropboxHack(this.state.url), { responseType: 'arraybuffer' }).then((r) => {\r\n                if (r.status !== 200) {\r\n                    this.setState({ urlError: `${r.status ? r.response.status + \" - \" : \"\"}${r.statusText ? r.response.statusText + \": \" : \"\"}${r.data || \"\"}` })\r\n                }\r\n                else {\r\n                    try {\r\n                        load(r.data)\r\n                        if (window.foodnet.importUrls.indexOf(this.state.url) === -1) {\r\n                            window.foodnet.importUrls.push(this.state.url);\r\n                            window.foodnet.sync();\r\n                        }\r\n                        this.setState({ urlModal: undefined, url: undefined })\r\n                    }\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ urlError: \"Could not parse file: \" + error })\r\n                    }\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e)\r\n                if (!e.response) {\r\n                    e.response = {\r\n                        statusText: \"error: CORS blocking\"\r\n                    }\r\n                }\r\n                console.log(`${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText + \": \" : \"\"}${e.response.data || \"\"}`)\r\n                this.setState({ urlError: `${e.response.status ? e.response.status + \" - \" : \"\"}${e.response.statusText ? e.response.statusText : \"\"}` })\r\n            })\r\n        }\r\n        return (\r\n            <Modal className=\"url-modal\" visible={true} onCancel={() => this.setState({ urlModal: false })} okButtonProps={{ disabled: !validateUrl() }} onOk={() => submit()}>\r\n                <Form.Item label=\"Remote URL\" validateStatus={validateUrl() ? 'success' : 'error'} help={this.state.urlError || validateMsg()}>\r\n                    <AutoComplete style={{ width: 200 }} value={this.state.url} onChange={e => {\r\n                        this.setState({ url: e, urlError: undefined })\r\n                    }} >\r\n                        {window.foodnet.importUrls.map(it => (\r\n                            <AutoComplete.Option key={it}>{it}</AutoComplete.Option>\r\n                        ))}\r\n                    </AutoComplete>\r\n                </Form.Item>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    getFilename() {\r\n        const { filename } = this.state;\r\n        for (let e in this.state.allowedFileExtensions) {\r\n            if (filename.endsWith(this.state.allowedFileExtensions[e])) {\r\n                return filename;\r\n            }\r\n        }\r\n        return filename + \".xlsx\";\r\n    }\r\n}","import React from 'react';\r\nimport './Reports.css';\r\nimport { Menu, Icon, Layout, Tree, Button, Card } from 'antd';\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        menu: 'r1'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"reports-layout\">\r\n                <Sider collapsible={true}>\r\n                    {this.renderMenu()}\r\n                </Sider>\r\n                <Content>\r\n                    {this.renderSelectedMenuItem()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    renderSelectedMenuItem() {\r\n        switch (this.state.menu) {\r\n            case \"r1\": return this.renderCookingReferenceReport()\r\n            case \"r1p2\": return this.renderCookingReferenceReportPage2()\r\n            case \"r2\": return this.renderTopFavoritesReport()\r\n            default: return undefined\r\n        }\r\n    }\r\n\r\n    renderMenu() {\r\n        return (\r\n            <Menu\r\n                onClick={(e) => this.setState({ menu: e.key })}\r\n                defaultSelectedKeys={['r1']}\r\n                defaultOpenKeys={['r']}\r\n                mode=\"inline\" style={{ height: '100%' }}\r\n            >\r\n                <Menu.SubMenu\r\n                    key=\"r\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                            <span>Recipe Reports</span>\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"r1\">Cooking Reference</Menu.Item>\r\n                    <Menu.Item key=\"r2\">Top Favorites</Menu.Item>\r\n                </Menu.SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderCookingReferenceReport() {\r\n        const check = (e) => {\r\n            if (e && e.length === 1 && e[0] === '0-0') {\r\n                this.setState({ r1checkedKeys: window.foodnet.recipes.map(it => it.id.toString()) });\r\n            }\r\n            else {\r\n                this.setState({ r1checkedKeys: e })\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"recipe-select\">\r\n                <Tree\r\n                    checkable\r\n                    onSelect={(e) => check(e)}\r\n                    onCheck={(e) => check(e)}\r\n                    expandedKeys={['0-0']}\r\n                    checkedKeys={this.state.r1checkedKeys}\r\n                >\r\n                    <Tree.TreeNode title=\"All Recipes\" key=\"0-0\">\r\n                        {window.foodnet.recipes.map(r => (\r\n                            <Tree.TreeNode title={r.name} key={r.id} />\r\n                        ))}\r\n                    </Tree.TreeNode>\r\n                </Tree>\r\n                <Button disabled={!this.state.r1checkedKeys || this.state.r1checkedKeys.length < 1} onClick={() => { this.setState({ menu: 'r1p2' }) }}>Generate Report</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCookingReferenceReportPage2() {\r\n        return (\r\n            <div className=\"recipe-report\">\r\n                {window.foodnet.recipes.filter(it => this.state.r1checkedKeys.indexOf(it.id.toString()) !== -1).map(r => (\r\n                    <Card key={r.id} size=\"small\" >\r\n                        <div className=\"recipe\" key={r.id}>\r\n                            <div className=\"recipe-name\">Recipe Name:</div>\r\n                            <div>{r.name}</div>\r\n                            <div className=\"desc-header\">Instructions:</div>\r\n                            <div className=\"desc-body\">{r.desc || \"None\"}</div>\r\n                            <div className=\"ing\">Ingredients:</div>\r\n                            <div className=\"ingredient-list\">\r\n                                {r.ingredients.map(i => (\r\n                                    <div key={i.id}>\r\n                                        <div>\r\n                                            {window.foodnet.ingredients.find(it => it.id === i.id).name}, {i.qty} {window.foodnet.measurements.find(it => it.id === i.type).name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTopFavoritesReport() {\r\n        return <div>Coming Soon</div>\r\n    }\r\n}","import React from 'react';\r\nimport './Planner.css';\r\nimport { Tooltip, Carousel, Card, Calendar, Badge, Radio, Timeline, Form, Button, Input, Dropdown, Menu, AutoComplete, Select, Modal, DatePicker, TimePicker, Cascader, InputNumber, Icon, Table, } from 'antd';\r\nimport moment from 'moment';\r\nimport { validate } from '@babel/types';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        mode: \"list\",\r\n        listDays: Number.isInteger(window.foodnet.listDays) ? window.foodnet.listDays : 7,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"planner\">\r\n                    {this.renderToolbar()}\r\n                    {this.state.mode === \"calendar\" && this.renderCalendar()}\r\n                    {this.state.mode === \"list\" && this.renderList()}\r\n                </div>\r\n                {this.renderAddListItemModal()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderToolbar() {\r\n        return (\r\n            <div className=\"planner-toolbar\">\r\n                <Radio.Group onChange={(e) => this.setState({ mode: e.target.value })} value={this.state.mode}>\r\n                    <Radio value={\"list\"}>List View</Radio>\r\n                    <Radio value={\"calendar\"}>Calendar View</Radio>\r\n                </Radio.Group>\r\n                {this.state.mode === \"list\" && (\r\n                    <Input type=\"number\" value={this.state.listDays} onChange={e => {\r\n                        if (e.target.value.length === 0) {\r\n                            this.setState({ listDays: undefined })\r\n                        }\r\n                        else {\r\n                            let v = Number(e.target.value)\r\n                            if (v < 0) v = 0;\r\n                            this.setState({ listDays: v })\r\n                            window.foodnet.listDays = v\r\n                            window.foodnet.sync()\r\n                        }\r\n                    }} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAddListItemModal() {\r\n        const valid = () => {\r\n            return this.state.recipe;\r\n        }\r\n        const submit = () => {\r\n            if (this.state.eventid) {\r\n                window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid).concat({\r\n                    id: this.state.eventid,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            else {\r\n                window.foodnet.events.push({\r\n                    id: window.foodnet.events.length === 0 ? 1 : Math.max(...window.foodnet.events.map(e => e.id)) + 1,\r\n                    date: moment().add(this.state.dayOffset, \"days\").format(),\r\n                    qty: Number(this.state.qty || 1),\r\n                    recipe: this.state.recipe,\r\n                })\r\n            }\r\n            window.foodnet.sync();\r\n            this.setState({\r\n                eventid: undefined,\r\n                recipe: undefined,\r\n                qty: undefined,\r\n                dayOffset: undefined,\r\n                modal: undefined,\r\n            })\r\n        }\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n        return (this.state.modal === \"add-list-item\" || this.state.modal === \"edit-list-item\") && (\r\n            <Modal\r\n                className=\"list-item-modal\"\r\n                visible={true}\r\n                onCancel={() => this.setState({ modal: undefined })}\r\n                footer={[\r\n                    this.state.modal === \"edit-list-item\" && (\r\n                        <Button key=\"delete\" type=\"danger\" onClick={() => {\r\n                            window.foodnet.events = window.foodnet.events.filter(e => e.id !== this.state.eventid);\r\n                            window.foodnet.sync();\r\n                            this.setState({\r\n                                eventid: undefined,\r\n                                recipe: undefined,\r\n                                qty: undefined,\r\n                                dayOffset: undefined,\r\n                                modal: undefined,\r\n                            })\r\n                        }}>Delete Event</Button>\r\n                    ),\r\n                    <Button key=\"back\" onClick={() => this.setState({ modal: undefined })}>Cancel</Button>,\r\n                    <Button key=\"submit\" type=\"primary\" disabled={!valid()} onClick={() => submit()}>OK</Button>,\r\n                ]}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item validateStatus={valid() ? \"success\" : \"error\"} hasFeedback={true} label=\"Recipe\">\r\n                        <Select value={this.state.recipe} onChange={v => this.setState({ recipe: Number(v) })}>\r\n                            {window.foodnet.recipes.map(r => (\r\n                                <Select.Option key={r.id} value={r.id}>{r.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\">\r\n                        <Input\r\n                            autoFocus\r\n                            type=\"number\"\r\n                            defaultValue={1}\r\n                            value={this.state.qty}\r\n                            onChange={e => this.setState({ qty: e.target.value })}\r\n                            onPressEnter={() => {\r\n                                if (valid()) {\r\n                                    submit();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    renderList() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const createItemsForDay = (dayOffset) => {\r\n            return window.foodnet.events\r\n                .filter(e => {\r\n                    return moment().add(dayOffset, \"days\").format(now_s_format) === moment(e.date).format(now_s_format)\r\n                })\r\n                .sort((a, b) => a.id < b.id ? -1 : 1)\r\n                .map(e => (\r\n                    <Timeline.Item key={e.id} color=\"green\" onClick={() => {\r\n                        this.setState({\r\n                            eventid: e.id,\r\n                            modal: \"edit-list-item\",\r\n                            dayOffset: dayOffset,\r\n                            recipe: e.recipe,\r\n                            qty: e.qty,\r\n                        })\r\n                    }} >{e.qty} x {window.foodnet.recipes.find(r => r.id === e.recipe).name}</Timeline.Item>\r\n                ))\r\n        }\r\n        const addForDay = (dayOffset) => {\r\n            return <Timeline.Item key=\"add\" onClick={() => {\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }} dot={<Icon type=\"plus-circle\" theme=\"twoTone\" twoToneColor=\"red\" />}>Add</Timeline.Item>;\r\n        }\r\n        const createList = (dayOffset) => {\r\n            return (\r\n                <Timeline key={dayOffset}>\r\n                    <Timeline.Item key=\"top\" color=\"blue\"><b><u>{moment().add(dayOffset, 'days').format(\"dddd (MMM D)\")}</u></b></Timeline.Item>\r\n                    {createItemsForDay(dayOffset)}\r\n                    {addForDay(dayOffset)}\r\n                </Timeline>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"planner-list\">\r\n                {Array.from(Array(this.state.listDays)).map((z, day) => createList(day))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCalendar() {\r\n        const now_s_format = \"Y-M-D\";\r\n        const dateCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).format(now_s_format) === m.format(now_s_format)\r\n            }).map(e => {\r\n                const text = `${e.qty} x ${window.foodnet.recipes.find(r => r.id === e.recipe).name}`;\r\n                const dayOffset = moment(e.date).startOf('day').diff(moment().startOf('day'), 'days')\r\n                return { \r\n                    eid: e.id, \r\n                    dayOffset: dayOffset, \r\n                    type: dayOffset < 0 ? 'error' : dayOffset === 0 ? 'success' : 'warning', \r\n                    content: <Tooltip placement=\"top\" title={text}>{text}</Tooltip> \r\n                };\r\n            });\r\n            return (\r\n                <ul className=\"events\">\r\n                    {listData.map(item => (\r\n                        <li key={item.eid}>\r\n                            <Badge onClick={(event) => {\r\n                                const e = window.foodnet.events.find(it => it.id === item.eid);\r\n                                const dayOffset = item.dayOffset\r\n                                this.setState({\r\n                                    eventid: e.id,\r\n                                    modal: \"edit-list-item\",\r\n                                    dayOffset: dayOffset,\r\n                                    recipe: e.recipe,\r\n                                    qty: e.qty,\r\n                                })\r\n                                event.stopPropagation();\r\n                            }} status={item.type} text={item.content} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        const monthCellRender = (m) => {\r\n            const listData = window.foodnet.events.filter(e => {\r\n                return moment(e.date).month() === m.month() && moment(e.date).year() === m.year()\r\n            })\r\n            return (\r\n                listData.length + \" recipes\"\r\n            );\r\n          }\r\n\r\n        return (\r\n            <Calendar mode={this.state.calMode || \"month\"} onPanelChange={(value, mode) => this.setState({calMode: mode})} dateCellRender={dateCellRender} monthCellRender={monthCellRender} onSelect={(m) => {\r\n                if(this.state.calMode === 'year') {\r\n                    this.setState({calMode: 'month'})\r\n                    return;\r\n                };\r\n                const dayOffset = m.startOf('day').diff(moment().startOf('day'), 'days')\r\n                this.setState({\r\n                    eventid: undefined,\r\n                    modal: \"add-list-item\",\r\n                    dayOffset: dayOffset,\r\n                    recipe: undefined,\r\n                    qty: undefined,\r\n                })\r\n            }}/>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Tag, Input, Tooltip, Icon } from 'antd';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        const handleInputConfirm = () => {\r\n            const { inputValue } = this.state;\r\n            this.setState({\r\n                inputVisible: false,\r\n                inputValue: '',\r\n            });\r\n            this.props.add(inputValue.trim());\r\n        }\r\n        return (\r\n            <div className={this.props.className || \"\"}>\r\n                {this.props.tags.map((tag, index) => {\r\n                    const isLongTag = tag.length > 20;\r\n                    const tagElem = (\r\n                        <Tag key={tag} closable={true} onClose={() => this.props.remove(tag)}>\r\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? (\r\n                        <Tooltip title={tag} key={tag}>\r\n                            {tagElem}\r\n                        </Tooltip>\r\n                    ) : (tagElem);\r\n                })}\r\n                {this.state.inputVisible && (\r\n                    <Input\r\n                        ref={input => (this.input = input)}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        style={{ width: 78 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={(e) => this.setState({ inputValue: e.target.value })}\r\n                        onBlur={handleInputConfirm}\r\n                        onPressEnter={handleInputConfirm}\r\n                    />\r\n                )}\r\n                {!this.state.inputVisible && (\r\n                    <Tag onClick={() => this.setState({ inputVisible: true }, () => this.input.focus())} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                        <Icon type=\"plus\" /> New Tag\r\n                    </Tag>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Shopper.css'\r\nimport { DatePicker, Checkbox, Dropdown, Modal, Button, Menu } from 'antd'\r\nimport moment from 'moment'\r\nimport Tags from './Tags'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        checkedItems: [],\r\n        filteredTags: [],\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            dates: window.foodnet.plannerDates && window.foodnet.plannerDates.length === 2 ? window.foodnet.plannerDates.map(it => moment(it)) : undefined,\r\n            checkedItems: window.foodnet.plannerCheckedItems || [],\r\n        })\r\n    }\r\n    render() {\r\n        //TODO: sort by tag modal\r\n\r\n        const updateTags = (tag, checked) => {\r\n            let tags = this.state.filteredTags;\r\n            if (checked) {\r\n                tags = tags.concat(tag)\r\n            }\r\n            else {\r\n                tags = tags.filter(t => t !== tag)\r\n            }\r\n            this.setState({filteredTags: tags})\r\n        }\r\n        const createMenu = () => {\r\n            let tags = []\r\n            window.foodnet.ingredients.forEach(ing => {\r\n                (ing.tags || []).forEach(tag => {\r\n                    if (tags.indexOf(tag) === -1) tags = tags.concat(tag);;\r\n                })\r\n            })\r\n            return [(\r\n                <Menu.Item key={\"_NO_TAG\"}><Checkbox onChange={e => updateTags(\"_NO_TAG\", e.target.checked)}>Untagged</Checkbox></Menu.Item>\r\n            )].concat(tags.sort((a, b) => a.toLowerCase() < b.toLowerCase ? -1 : 1).map(tag => (\r\n                <Menu.Item key={tag}><Checkbox onChange={e => updateTags(tag, e.target.checked)}>{tag}</Checkbox></Menu.Item>\r\n            )))\r\n        }\r\n        return (\r\n            <div className=\"shopper\">\r\n                <div className=\"buttons\">\r\n                    <Button disabled={true} onClick={() => this.setState({ modal: 'sort' })}>Sort by Tags</Button>\r\n                    <Dropdown\r\n                        disabled={createMenu().length === 1}\r\n                        onVisibleChange={(v) => this.setState({dropdownvisible: v})}\r\n                        visible={this.state.dropdownvisible}\r\n                        overlay={(\r\n                            <Menu>\r\n                                {createMenu()}\r\n                            </Menu>\r\n                        )}>\r\n                        <Button>Filter by Tags</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={() => this.setState({ hideTags: !this.state.hideTags })}>{this.state.hideTags ? 'Show Tags' : 'Hide Tags'}</Button>\r\n                </div>\r\n                <RangePicker value={this.state.dates} onChange={(m) => {\r\n                    this.setState({ dates: m, checkedItems: [] })\r\n                    window.foodnet.plannerDates = m.map(it => it.format());\r\n                    window.foodnet.plannerCheckedItems = [];\r\n                    window.foodnet.sync();\r\n                }} />\r\n                {this.state.dates && (\r\n                    this.createIngredientList()\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createIngredientList() {\r\n        const { foodnet } = window;\r\n        let list = [];\r\n        foodnet.events.forEach(event => {\r\n            if (moment(event.date).isBetween(...this.state.dates, 'days', '[]')) {\r\n                const multiplier = Number(event.qty) || 0;\r\n                const recipe = foodnet.recipes.find(r => r.id === event.recipe);\r\n                recipe.ingredients.forEach(ing => {\r\n                    list.push({ id: ing.id, type: ing.type, qty: Number(ing.qty) * multiplier });\r\n                })\r\n            }\r\n        })\r\n\r\n        const mergeDuplicates = (item, index, l) => {\r\n            if (index > 0 && l[index - 1].id === item.id && l[index - 1].type === item.type) {\r\n                let newIndex = index - 1;\r\n                while (l[newIndex].deleted) newIndex--;\r\n                l[newIndex].qty += item.qty;\r\n                item.deleted = true;\r\n            }\r\n            return item;\r\n        };\r\n        list = list.sort((a, b) => {\r\n            if (a.id !== b.id) {\r\n                return a.id < b.id ? -1 : 1;\r\n            }\r\n            if (a.type !== b.type) {\r\n                return a.type < b.type ? -1 : 1;\r\n            }\r\n            return 0;\r\n        }).map(mergeDuplicates).filter(item => !item.deleted);\r\n\r\n        return (\r\n            <ul className=\"ingredient-list\">\r\n                {list\r\n                    .map(item => ({\r\n                        ...item,\r\n                        name: foodnet.ingredients.find(i => i.id === item.id).name,\r\n                        typename: foodnet.measurements.find(m => m.id === item.type).name,\r\n                        checked: this.state.checkedItems.indexOf(item.id) !== -1,\r\n                        tags: foodnet.ingredients.find(i => i.id === item.id).tags || []\r\n                    }))\r\n                    .sort((a, b) => {\r\n                        if (a.name.toLowerCase() !== b.name.toLowerCase()) {\r\n                            return a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\r\n                        }\r\n                        if (a.typename.toLowerCase() !== b.typename.toLowerCase()) {\r\n                            return a.typename.toLowerCase() < b.typename.toLowerCase() ? -1 : 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .filter(item => {\r\n                        if (this.state.filteredTags.length === 0) return true;\r\n                        let tags = item.tags\r\n                        if (tags.length === 0) tags = ['_NO_TAG']\r\n                        let found = false;\r\n                        tags.forEach(t => {\r\n                            this.state.filteredTags.forEach(t2 => {\r\n                                if (t === t2) found = true;\r\n                            })\r\n                        })\r\n                        return found;\r\n                    })\r\n                    .map((item, index) => (\r\n                        <li key={index} className=\"shopper-list-items\">\r\n                            <Checkbox className=\"shopper-list-item\" key={index} checked={item.checked} onChange={e => {\r\n                                foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.filter(it => it !== item.id)\r\n                                if (e.target.checked) {\r\n                                    foodnet.plannerCheckedItems = foodnet.plannerCheckedItems.concat(item.id);\r\n                                }\r\n                                this.setState({ checkedItems: foodnet.plannerCheckedItems });\r\n                                foodnet.sync();\r\n                            }}>\r\n                                {`${item.name}: ${item.qty} ${item.typename}`}\r\n                            </Checkbox>\r\n                            {!this.state.hideTags && <Tags className=\"shopper-tags\" tags={item.tags} add={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].concat(tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                            }} remove={(tag) => {\r\n                                const ing = foodnet.ingredients.find(i => i.id === item.id)\r\n                                foodnet.ingredients = foodnet.ingredients.filter(it => it.id !== item.id).concat({ ...ing, tags: [...item.tags].filter(it => it !== tag) })\r\n                                foodnet.sync()\r\n                                this.forceUpdate()\r\n                                if (this.state.filteredTags.indexOf(tag) !== -1) {\r\n                                    this.setState({filteredTags: this.state.filteredTags.filter(it => it !== tag)})\r\n                                }\r\n                            }} />}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        );\r\n    }\r\n}","export default function() {\r\n    const names = [\"ingredients\", \"measurements\", \"recipes\", \"listDays\", \"events\", \"importUrls\", \"plannerDates\", \"plannerCheckedItems\"];\r\n    window.foodnet = {\r\n        sync: () => {\r\n            names.forEach(it => localStorage.setItem(it, JSON.stringify(window.foodnet[it])));\r\n        }\r\n    };\r\n    names.forEach(it => window.foodnet[it] = JSON.parse(localStorage.getItem(it)));\r\n    names.forEach(it => {\r\n        if (window.foodnet[it] === undefined || window.foodnet[it] === null) {\r\n            window.foodnet[it] = [];\r\n        }\r\n    })\r\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport RecipeApp from './recipe/RecipeApp'\nimport TestRecipeForm from './manual-test/TestRecipeForm'\nimport loader from './loaders/LocalStorageLoader'\nimport AppHeader from './AppHeader'\nimport './App.css';\nimport ImportExport from './admin/ImportExport'\nimport Reports from './reports/Reports';\nimport Planner from './planner/Planner'\nimport Shopper from './shopper/Shopper'\n\nloader();\n\nexport default function () {\n  return (\n    <HashRouter hashType=\"noslash\">\n      <AppHeader />\n      <Route exact path=\"/ImportExport\" component={ImportExport} />\n      <Route exact path=\"/TestRecipeForm\" component={TestRecipeForm} />\n      <Route exact path=\"/Reports\" component={Reports} />\n      <Route exact path=\"/Planner\" component={Planner} />\n      <Route exact path=\"/Shopper\" component={Shopper} />\n      <Route exact path=\"/\" component={RecipeApp} />\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}